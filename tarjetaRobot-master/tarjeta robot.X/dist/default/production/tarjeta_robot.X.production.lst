

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Oct 11 12:21:31 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    76  0000                     
    77                           	psect	idataCOMRAM
    78  001E66                     __pidataCOMRAM:
    79                           	opt stack 0
    80                           
    81                           ;initializer for _countup
    82  001E66  0001               	dw	1
    83                           
    84                           	psect	idataBANK0
    85  001DDA                     __pidataBANK0:
    86                           	opt stack 0
    87                           
    88                           ;initializer for BT_Init@F5675
    89  001DDA  41                 	db	65
    90  001DDB  54                 	db	84
    91  001DDC  2B                 	db	43
    92  001DDD  4E                 	db	78
    93  001DDE  41                 	db	65
    94  001DDF  4D                 	db	77
    95  001DE0  45                 	db	69
    96  001DE1  3D                 	db	61
    97  001DE2  72                 	db	114
    98  001DE3  6F                 	db	111
    99  001DE4  62                 	db	98
   100  001DE5  6F                 	db	111
   101  001DE6  74                 	db	116
   102  001DE7  0D                 	db	13
   103  001DE8  0A                 	db	10
   104  001DE9  00                 	db	0
   105  001DEA  00                 	db	0
   106  001DEB  00                 	db	0
   107                           
   108                           	psect	smallconst
   109  000800                     __psmallconst:
   110                           	opt stack 0
   111  000800  00                 	db	0
   112  000801                     _dpowers:
   113                           	opt stack 0
   114  000801  0001               	dw	1
   115  000803  000A               	dw	10
   116  000805  0064               	dw	100
   117  000807  03E8               	dw	1000
   118  000809  2710               	dw	10000
   119  00080B                     __end_of_dpowers:
   120                           	opt stack 0
   121  0000                     _ADCON1bits	set	4033
   122  0000                     _CCP1CON	set	4029
   123  0000                     _CCP2CON	set	4026
   124  0000                     _CCPR1L	set	4030
   125  0000                     _CCPR2L	set	4027
   126  0000                     _INTCON	set	4082
   127  0000                     _INTCON2bits	set	4081
   128  0000                     _INTCON3bits	set	4080
   129  0000                     _INTCONbits	set	4082
   130  0000                     _OSCCONbits	set	4051
   131  0000                     _PIE1	set	3997
   132  0000                     _PIE1bits	set	3997
   133  0000                     _PIR1bits	set	3998
   134  0000                     _PORTA	set	3968
   135  0000                     _PORTAbits	set	3968
   136  0000                     _PORTB	set	3969
   137  0000                     _PORTBbits	set	3969
   138  0000                     _PORTC	set	3970
   139  0000                     _PORTD	set	3971
   140  0000                     _PORTDbits	set	3971
   141  0000                     _PORTE	set	3972
   142  0000                     _PR2	set	4043
   143  0000                     _RCREG	set	4014
   144  0000                     _RCSTA	set	4011
   145  0000                     _RCSTAbits	set	4011
   146  0000                     _SPBRG	set	4015
   147  0000                     _SPBRGH	set	4016
   148  0000                     _T2CON	set	4042
   149  0000                     _T2CONbits	set	4042
   150  0000                     _TMR2	set	4044
   151  0000                     _TRISA	set	3986
   152  0000                     _TRISB	set	3987
   153  0000                     _TRISBbits	set	3987
   154  0000                     _TRISC	set	3988
   155  0000                     _TRISCbits	set	3988
   156  0000                     _TRISD	set	3989
   157  0000                     _TRISE	set	3990
   158  0000                     _TXREG	set	4013
   159  0000                     _TXSTA	set	4012
   160  0000                     _TXSTAbits	set	4012
   161  00080B                     __stringdata:
   162                           	opt stack 0
   163  00080B                     STR_2:
   164  00080B  41                 	db	65	;'A'
   165  00080C  54                 	db	84	;'T'
   166  00080D  2B                 	db	43
   167  00080E  50                 	db	80	;'P'
   168  00080F  53                 	db	83	;'S'
   169  000810  57                 	db	87	;'W'
   170  000811  44                 	db	68	;'D'
   171  000812  3D                 	db	61	;'='
   172  000813  30                 	db	48	;'0'
   173  000814  30                 	db	48	;'0'
   174  000815  30                 	db	48	;'0'
   175  000816  30                 	db	48	;'0'
   176  000817  0D                 	db	13
   177  000818  0A                 	db	10
   178  000819  00                 	db	0
   179  00081A  0A                 	db	10
   180  00081B  2B                 	db	43
   181  00081C  42                 	db	66	;'B'
   182  00081D  54                 	db	84	;'T'
   183  00081E  53                 	db	83	;'S'
   184  00081F  54                 	db	84	;'T'
   185  000820  41                 	db	65	;'A'
   186  000821  54                 	db	84	;'T'
   187  000822  45                 	db	69	;'E'
   188  000823  3A                 	db	58	;':'
   189  000824  31                 	db	49	;'1'
   190  000825  0D                 	db	13
   191  000826  0A                 	db	10
   192  000827  00                 	db	0
   193  000828  0A                 	db	10
   194  000829  2B                 	db	43
   195  00082A  42                 	db	66	;'B'
   196  00082B  54                 	db	84	;'T'
   197  00082C  53                 	db	83	;'S'
   198  00082D  54                 	db	84	;'T'
   199  00082E  41                 	db	65	;'A'
   200  00082F  54                 	db	84	;'T'
   201  000830  45                 	db	69	;'E'
   202  000831  3A                 	db	58	;':'
   203  000832  33                 	db	51	;'3'
   204  000833  0D                 	db	13
   205  000834  0A                 	db	10
   206  000835  00                 	db	0
   207  000836  0A                 	db	10
   208  000837  2B                 	db	43
   209  000838  42                 	db	66	;'B'
   210  000839  54                 	db	84	;'T'
   211  00083A  53                 	db	83	;'S'
   212  00083B  54                 	db	84	;'T'
   213  00083C  41                 	db	65	;'A'
   214  00083D  54                 	db	84	;'T'
   215  00083E  45                 	db	69	;'E'
   216  00083F  3A                 	db	58	;':'
   217  000840  34                 	db	52	;'4'
   218  000841  0D                 	db	13
   219  000842  0A                 	db	10
   220  000843  00                 	db	0
   221  000844  0A                 	db	10
   222  000845  43                 	db	67	;'C'
   223  000846  4F                 	db	79	;'O'
   224  000847  4E                 	db	78	;'N'
   225  000848  4E                 	db	78	;'N'
   226  000849  45                 	db	69	;'E'
   227  00084A  43                 	db	67	;'C'
   228  00084B  54                 	db	84	;'T'
   229  00084C  3A                 	db	58	;':'
   230  00084D  4F                 	db	79	;'O'
   231  00084E  4B                 	db	75	;'K'
   232  00084F  0D                 	db	13
   233  000850  0A                 	db	10
   234  000851  00                 	db	0
   235  000852                     STR_1:
   236  000852  41                 	db	65	;'A'
   237  000853  54                 	db	84	;'T'
   238  000854  2B                 	db	43
   239  000855  52                 	db	82	;'R'
   240  000856  4F                 	db	79	;'O'
   241  000857  4C                 	db	76	;'L'
   242  000858  45                 	db	69	;'E'
   243  000859  3D                 	db	61	;'='
   244  00085A  30                 	db	48	;'0'
   245  00085B  0D                 	db	13
   246  00085C  0A                 	db	10
   247  00085D  00                 	db	0
   248  00085E                     STR_3:
   249  00085E  41                 	db	65	;'A'
   250  00085F  54                 	db	84	;'T'
   251  000860  2B                 	db	43
   252  000861  49                 	db	73	;'I'
   253  000862  4E                 	db	78	;'N'
   254  000863  51                 	db	81	;'Q'
   255  000864  0D                 	db	13
   256  000865  0A                 	db	10
   257  000866  00                 	db	0
   258  000867                     STR_5:
   259  000867  25                 	db	37
   260  000868  64                 	db	100	;'d'
   261  000869  00                 	db	0
   262  00086A                     __end_of__stringdata:
   263                           	opt stack 0
   264                           
   265                           ; #config settings
   266  00086A  00                 	db	0	; dummy byte at the end
   267  0000                     
   268                           	psect	cinit
   269  0019D6                     __pcinit:
   270                           	opt stack 0
   271  0019D6                     start_initialization:
   272                           	opt stack 0
   273  0019D6                     __initialization:
   274                           	opt stack 0
   275                           
   276                           ; Clear objects allocated to BANK1 (40 bytes)
   277  0019D6  EE01  F000         	lfsr	0,__pbssBANK1
   278  0019DA  0E28               	movlw	40
   279  0019DC                     clear_0:
   280  0019DC  6AEE               	clrf	postinc0,c
   281  0019DE  06E8               	decf	wreg,f,c
   282  0019E0  E1FD               	bnz	clear_0
   283                           
   284                           ; Clear objects allocated to BANK0 (76 bytes)
   285  0019E2  EE00  F060         	lfsr	0,__pbssBANK0
   286  0019E6  0E4C               	movlw	76
   287  0019E8                     clear_1:
   288  0019E8  6AEE               	clrf	postinc0,c
   289  0019EA  06E8               	decf	wreg,f,c
   290  0019EC  E1FD               	bnz	clear_1
   291                           
   292                           ; Clear objects allocated to COMRAM (28 bytes)
   293  0019EE  EE00  F042         	lfsr	0,__pbssCOMRAM
   294  0019F2  0E1C               	movlw	28
   295  0019F4                     clear_2:
   296  0019F4  6AEE               	clrf	postinc0,c
   297  0019F6  06E8               	decf	wreg,f,c
   298  0019F8  E1FD               	bnz	clear_2
   299                           
   300                           ; Initialize objects allocated to BANK0 (18 bytes)
   301                           ; load TBLPTR registers with __pidataBANK0
   302  0019FA  0EDA               	movlw	low __pidataBANK0
   303  0019FC  6EF6               	movwf	tblptrl,c
   304  0019FE  0E1D               	movlw	high __pidataBANK0
   305  001A00  6EF7               	movwf	tblptrh,c
   306  001A02  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   307  001A04  6EF8               	movwf	tblptru,c
   308  001A06  EE00  F0E4         	lfsr	0,__pdataBANK0
   309  001A0A  EE10 F012          	lfsr	1,18
   310  001A0E                     copy_data0:
   311  001A0E  0009               	tblrd		*+
   312  001A10  CFF5 FFEE          	movff	tablat,postinc0
   313  001A14  50E5               	movf	postdec1,w,c
   314  001A16  50E1               	movf	fsr1l,w,c
   315  001A18  E1FA               	bnz	copy_data0
   316                           
   317                           ; Initialize objects allocated to COMRAM (2 bytes)
   318                           ; load TBLPTR registers with __pidataCOMRAM
   319  001A1A  0E66               	movlw	low __pidataCOMRAM
   320  001A1C  6EF6               	movwf	tblptrl,c
   321  001A1E  0E1E               	movlw	high __pidataCOMRAM
   322  001A20  6EF7               	movwf	tblptrh,c
   323  001A22  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   324  001A24  6EF8               	movwf	tblptru,c
   325  001A26  0009               	tblrd		*+	;fetch initializer
   326  001A28  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   327  001A2C  0009               	tblrd		*+	;fetch initializer
   328  001A2E  CFF5 F05F          	movff	tablat,__pdataCOMRAM+1
   329  001A32                     end_of_initialization:
   330                           	opt stack 0
   331  001A32                     __end_of__initialization:
   332                           	opt stack 0
   333  001A32  0100               	movlb	0
   334  001A34  EF50  F00A         	goto	_main	;jump to C main() function
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           postdec1	equ	0xFE5
   342                           fsr1l	equ	0xFE1
   343                           
   344                           	psect	bssCOMRAM
   345  000042                     __pbssCOMRAM:
   346                           	opt stack 0
   347  000042                     _Med_lsb:
   348                           	opt stack 0
   349  000042                     	ds	2
   350  000044                     _Med_msb:
   351                           	opt stack 0
   352  000044                     	ds	2
   353  000046                     _TamanhoTrama:
   354                           	opt stack 0
   355  000046                     	ds	2
   356  000048                     _i:
   357                           	opt stack 0
   358  000048                     	ds	2
   359  00004A                     _CheckSum:
   360                           	opt stack 0
   361  00004A                     	ds	1
   362  00004B                     _ComanBFlag:
   363                           	opt stack 0
   364  00004B                     	ds	1
   365  00004C                     _ComanTFlag:
   366                           	opt stack 0
   367  00004C                     	ds	1
   368  00004D                     _Comando:
   369                           	opt stack 0
   370  00004D                     	ds	1
   371  00004E                     _ComandoTablet:
   372                           	opt stack 0
   373  00004E                     	ds	1
   374  00004F                     _EntTrama:
   375                           	opt stack 0
   376  00004F                     	ds	1
   377  000050                     _InicioComando:
   378                           	opt stack 0
   379  000050                     	ds	1
   380  000051                     _RXComandoTB:
   381                           	opt stack 0
   382  000051                     	ds	1
   383  000052                     _SBUSART:
   384                           	opt stack 0
   385  000052                     	ds	1
   386  000053                     _Timer1:
   387                           	opt stack 0
   388  000053                     	ds	1
   389  000054                     _USART_Status:
   390                           	opt stack 0
   391  000054                     	ds	1
   392  000055                     _cad:
   393                           	opt stack 0
   394  000055                     	ds	1
   395  000056                     _contador:
   396                           	opt stack 0
   397  000056                     	ds	1
   398  000057                     _contador2:
   399                           	opt stack 0
   400  000057                     	ds	1
   401  000058                     _j:
   402                           	opt stack 0
   403  000058                     	ds	1
   404  000059                     _lenght:
   405                           	opt stack 0
   406  000059                     	ds	1
   407  00005A                     _num_med_hi:
   408                           	opt stack 0
   409  00005A                     	ds	1
   410  00005B                     _num_med_low:
   411                           	opt stack 0
   412  00005B                     	ds	1
   413  00005C                     _num_med_medium:
   414                           	opt stack 0
   415  00005C                     	ds	1
   416  00005D                     _packet:
   417                           	opt stack 0
   418  00005D                     	ds	1
   419                           tblptru	equ	0xFF8
   420                           tblptrh	equ	0xFF7
   421                           tblptrl	equ	0xFF6
   422                           tablat	equ	0xFF5
   423                           postinc0	equ	0xFEE
   424                           wreg	equ	0xFE8
   425                           postdec1	equ	0xFE5
   426                           fsr1l	equ	0xFE1
   427                           
   428                           	psect	dataCOMRAM
   429  00005E                     __pdataCOMRAM:
   430                           	opt stack 0
   431  00005E                     _countup:
   432                           	opt stack 0
   433  00005E                     	ds	2
   434                           tblptru	equ	0xFF8
   435                           tblptrh	equ	0xFF7
   436                           tblptrl	equ	0xFF6
   437                           tablat	equ	0xFF5
   438                           postinc0	equ	0xFEE
   439                           wreg	equ	0xFE8
   440                           postdec1	equ	0xFE5
   441                           fsr1l	equ	0xFE1
   442                           
   443                           	psect	bssBANK0
   444  000060                     __pbssBANK0:
   445                           	opt stack 0
   446  000060                     _DutyCycle:
   447                           	opt stack 0
   448  000060                     	ds	2
   449  000062                     _FinComandB:
   450                           	opt stack 0
   451  000062                     	ds	1
   452  000063                     _FinComandT:
   453                           	opt stack 0
   454  000063                     	ds	1
   455  000064                     _cleanBfer:
   456                           	opt stack 0
   457  000064                     	ds	1
   458  000065                     _BluetoothDato:
   459                           	opt stack 0
   460  000065                     	ds	50
   461  000097                     _comando:
   462                           	opt stack 0
   463  000097                     	ds	20
   464  0000AB                     _Timer2Config:
   465                           	opt stack 0
   466  0000AB                     	ds	1
   467                           tblptru	equ	0xFF8
   468                           tblptrh	equ	0xFF7
   469                           tblptrl	equ	0xFF6
   470                           tablat	equ	0xFF5
   471                           postinc0	equ	0xFEE
   472                           wreg	equ	0xFE8
   473                           postdec1	equ	0xFE5
   474                           fsr1l	equ	0xFE1
   475                           
   476                           	psect	dataBANK0
   477  0000E4                     __pdataBANK0:
   478                           	opt stack 0
   479  0000E4                     BT_Init@F5675:
   480                           	opt stack 0
   481  0000E4                     	ds	18
   482                           tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           tblptrl	equ	0xFF6
   485                           tablat	equ	0xFF5
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           postdec1	equ	0xFE5
   489                           fsr1l	equ	0xFE1
   490                           
   491                           	psect	bssBANK1
   492  000100                     __pbssBANK1:
   493                           	opt stack 0
   494  000100                     _TramaTablet:
   495                           	opt stack 0
   496  000100                     	ds	20
   497  000114                     _array:
   498                           	opt stack 0
   499  000114                     	ds	20
   500                           tblptru	equ	0xFF8
   501                           tblptrh	equ	0xFF7
   502                           tblptrl	equ	0xFF6
   503                           tablat	equ	0xFF5
   504                           postinc0	equ	0xFEE
   505                           wreg	equ	0xFE8
   506                           postdec1	equ	0xFE5
   507                           fsr1l	equ	0xFE1
   508                           
   509                           	psect	cstackBANK0
   510  0000AC                     __pcstackBANK0:
   511                           	opt stack 0
   512  0000AC                     ??_OpenPWM2:
   513  0000AC                     ?___lwdiv:
   514                           	opt stack 0
   515  0000AC                     ?___ftpack:
   516                           	opt stack 0
   517  0000AC                     OpenPWM1@period:
   518                           	opt stack 0
   519  0000AC                     WriteUSART@data:
   520                           	opt stack 0
   521  0000AC                     clrBufferUSART@i:
   522                           	opt stack 0
   523  0000AC                     Pause_ms@x:
   524                           	opt stack 0
   525  0000AC                     SetDCPWM1@dutycycle:
   526                           	opt stack 0
   527  0000AC                     SetDCPWM2@dutycycle:
   528                           	opt stack 0
   529  0000AC                     OpenUSART@spbrg:
   530                           	opt stack 0
   531  0000AC                     ___lwdiv@dividend:
   532                           	opt stack 0
   533  0000AC                     ___ftpack@arg:
   534                           	opt stack 0
   535                           
   536                           ; 3 bytes @ 0x0
   537  0000AC                     	ds	1
   538  0000AD                     putcTxU1@character:
   539                           	opt stack 0
   540  0000AD                     PWM_init1@period:
   541                           	opt stack 0
   542  0000AD                     OpenPWM2@period:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x1
   546  0000AD                     	ds	1
   547  0000AE                     ??_OpenUSART:
   548  0000AE                     ??_SetDCPWM1:
   549  0000AE                     ??_SetDCPWM2:
   550  0000AE                     ??_Pause_ms:
   551  0000AE                     OpenPWM2@ccp2mx:
   552                           	opt stack 0
   553  0000AE                     putSTRINGU1@dato:
   554                           	opt stack 0
   555  0000AE                     ___lwdiv@divisor:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x2
   559  0000AE                     	ds	1
   560  0000AF                     PWM_init2@period:
   561                           	opt stack 0
   562  0000AF                     ___ftpack@exp:
   563                           	opt stack 0
   564  0000AF                     Pause_ms@i:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x3
   568  0000AF                     	ds	1
   569  0000B0                     ___ftpack@sign:
   570                           	opt stack 0
   571  0000B0                     putSTRINGU1@total:
   572                           	opt stack 0
   573  0000B0                     SetDCPWM1@DCycle:
   574                           	opt stack 0
   575  0000B0                     SetDCPWM2@DCycle:
   576                           	opt stack 0
   577  0000B0                     ___lwdiv@quotient:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x4
   581  0000B0                     	ds	1
   582  0000B1                     ??___ftpack:
   583  0000B1                     Pause_seg@x:
   584                           	opt stack 0
   585  0000B1                     OpenUSART@config:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x5
   589  0000B1                     	ds	1
   590  0000B2                     ??_putSTRINGU1:
   591  0000B2                     Pause_seg@i:
   592                           	opt stack 0
   593  0000B2                     UART1_Init@bdr:
   594                           	opt stack 0
   595  0000B2                     ___lwdiv@counter:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x6
   599  0000B2                     	ds	1
   600  0000B3                     ?___lwmod:
   601                           	opt stack 0
   602  0000B3                     putcBluetoothString@a:
   603                           	opt stack 0
   604  0000B3                     ___lwmod@dividend:
   605                           	opt stack 0
   606                           
   607                           ; 2 bytes @ 0x7
   608  0000B3                     	ds	1
   609  0000B4                     ?___lbtoft:
   610                           	opt stack 0
   611  0000B4                     putSTRINGU1@last:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x8
   615  0000B4                     	ds	1
   616  0000B5                     ??_putcBluetoothString:
   617  0000B5                     putSTRINGU1@cont:
   618                           	opt stack 0
   619  0000B5                     ___lwmod@divisor:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x9
   623  0000B5                     	ds	1
   624  0000B6                     SendBlueToothCommand@command:
   625                           	opt stack 0
   626                           
   627                           ; 2 bytes @ 0xA
   628  0000B6                     	ds	1
   629  0000B7                     ___lbtoft@c:
   630                           	opt stack 0
   631  0000B7                     ___lwmod@counter:
   632                           	opt stack 0
   633  0000B7                     putcBluetoothString@i:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0xB
   637  0000B7                     	ds	1
   638  0000B8                     ?_sprintf:
   639                           	opt stack 0
   640  0000B8                     ?___ftmul:
   641                           	opt stack 0
   642  0000B8                     SendBlueToothCommand@total:
   643                           	opt stack 0
   644  0000B8                     sprintf@sp:
   645                           	opt stack 0
   646  0000B8                     ___ftmul@f1:
   647                           	opt stack 0
   648                           
   649                           ; 3 bytes @ 0xC
   650  0000B8                     	ds	2
   651  0000BA                     sprintf@f:
   652                           	opt stack 0
   653  0000BA                     BT_Init@nameBT:
   654                           	opt stack 0
   655                           
   656                           ; 18 bytes @ 0xE
   657  0000BA                     	ds	1
   658  0000BB                     ___ftmul@f2:
   659                           	opt stack 0
   660                           
   661                           ; 3 bytes @ 0xF
   662  0000BB                     	ds	3
   663  0000BE                     ??_sprintf:
   664  0000BE                     ??___ftmul:
   665                           
   666                           ; 0 bytes @ 0x12
   667  0000BE                     	ds	2
   668  0000C0                     sprintf@ap:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x14
   672  0000C0                     	ds	1
   673  0000C1                     ___ftmul@exp:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0x15
   677  0000C1                     	ds	1
   678  0000C2                     sprintf@flag:
   679                           	opt stack 0
   680  0000C2                     ___ftmul@f3_as_product:
   681                           	opt stack 0
   682                           
   683                           ; 3 bytes @ 0x16
   684  0000C2                     	ds	1
   685  0000C3                     sprintf@prec:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x17
   689  0000C3                     	ds	1
   690  0000C4                     sprintf@_val:
   691                           	opt stack 0
   692                           
   693                           ; 5 bytes @ 0x18
   694  0000C4                     	ds	1
   695  0000C5                     ___ftmul@cntr:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0x19
   699  0000C5                     	ds	1
   700  0000C6                     ___ftmul@sign:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x1A
   704  0000C6                     	ds	1
   705  0000C7                     ?___fttol:
   706                           	opt stack 0
   707  0000C7                     ___fttol@f1:
   708                           	opt stack 0
   709                           
   710                           ; 3 bytes @ 0x1B
   711  0000C7                     	ds	2
   712  0000C9                     sprintf@c:
   713                           	opt stack 0
   714                           
   715                           ; 1 bytes @ 0x1D
   716  0000C9                     	ds	1
   717  0000CA                     putcBluetoothInt@a:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0x1E
   721  0000CA                     	ds	1
   722  0000CB                     ??___fttol:
   723                           
   724                           ; 0 bytes @ 0x1F
   725  0000CB                     	ds	1
   726  0000CC                     putcBluetoothInt@s:
   727                           	opt stack 0
   728                           
   729                           ; 20 bytes @ 0x20
   730  0000CC                     	ds	4
   731  0000D0                     ___fttol@sign1:
   732                           	opt stack 0
   733                           
   734                           ; 1 bytes @ 0x24
   735  0000D0                     	ds	1
   736  0000D1                     ___fttol@lval:
   737                           	opt stack 0
   738                           
   739                           ; 4 bytes @ 0x25
   740  0000D1                     	ds	4
   741  0000D5                     ___fttol@exp1:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x29
   745  0000D5                     	ds	1
   746  0000D6                     ??_PWM_DutyCycle1:
   747  0000D6                     ??_PWM_DutyCycle2:
   748                           
   749                           ; 0 bytes @ 0x2A
   750  0000D6                     	ds	4
   751  0000DA                     PWM_DutyCycle1@DutyCycle:
   752                           	opt stack 0
   753  0000DA                     PWM_DutyCycle2@DutyCycle:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x2E
   757  0000DA                     	ds	2
   758  0000DC                     PWM_DutyCycle1@percentageDuty:
   759                           	opt stack 0
   760  0000DC                     PWM_DutyCycle2@percentageDuty:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x30
   764  0000DC                     	ds	1
   765  0000DD                     PWM_DutyCycle1@DC:
   766                           	opt stack 0
   767  0000DD                     PWM_DutyCycle2@DC:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x31
   771  0000DD                     	ds	2
   772  0000DF                     ??_Inicializa_Driveby:
   773  0000DF                     ?_getCNY70Value:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x33
   777  0000DF                     	ds	1
   778  0000E0                     putcBluetoothInt@i:
   779                           	opt stack 0
   780  0000E0                     Inicializa_Driveby@i:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x34
   784  0000E0                     	ds	1
   785  0000E1                     
   786                           ; 0 bytes @ 0x35
   787  0000E1                     	ds	1
   788  0000E2                     Comando_Tablet@sensed:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x36
   792  0000E2                     	ds	2
   793  0000E4                     tblptru	equ	0xFF8
   794                           tblptrh	equ	0xFF7
   795                           tblptrl	equ	0xFF6
   796                           tablat	equ	0xFF5
   797                           postinc0	equ	0xFEE
   798                           wreg	equ	0xFE8
   799                           postdec1	equ	0xFE5
   800                           fsr1l	equ	0xFE1
   801                           
   802                           ; 0 bytes @ 0x38
   803                           
   804                           	psect	cstackCOMRAM
   805  000001                     __pcstackCOMRAM:
   806                           	opt stack 0
   807  000001                     ?i2___ftpack:
   808                           	opt stack 0
   809  000001                     ReadUSART@data:
   810                           	opt stack 0
   811  000001                     i2SetDCPWM1@dutycycle:
   812                           	opt stack 0
   813  000001                     i2SetDCPWM2@dutycycle:
   814                           	opt stack 0
   815  000001                     i2___ftpack@arg:
   816                           	opt stack 0
   817                           
   818                           ; 3 bytes @ 0x0
   819  000001                     	ds	2
   820  000003                     ??i2_SetDCPWM1:
   821  000003                     ??i2_SetDCPWM2:
   822                           
   823                           ; 0 bytes @ 0x2
   824  000003                     	ds	1
   825  000004                     i2___ftpack@exp:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0x3
   829  000004                     	ds	1
   830  000005                     i2___ftpack@sign:
   831                           	opt stack 0
   832  000005                     i2SetDCPWM1@DCycle:
   833                           	opt stack 0
   834  000005                     i2SetDCPWM2@DCycle:
   835                           	opt stack 0
   836                           
   837                           ; 2 bytes @ 0x4
   838  000005                     	ds	1
   839  000006                     ??i2___ftpack:
   840                           
   841                           ; 0 bytes @ 0x5
   842  000006                     	ds	3
   843  000009                     ?i2___lbtoft:
   844                           	opt stack 0
   845                           
   846                           ; 3 bytes @ 0x8
   847  000009                     	ds	3
   848  00000C                     i2___lbtoft@c:
   849                           	opt stack 0
   850                           
   851                           ; 1 bytes @ 0xB
   852  00000C                     	ds	1
   853  00000D                     ?i2___ftmul:
   854                           	opt stack 0
   855  00000D                     i2___ftmul@f1:
   856                           	opt stack 0
   857                           
   858                           ; 3 bytes @ 0xC
   859  00000D                     	ds	3
   860  000010                     i2___ftmul@f2:
   861                           	opt stack 0
   862                           
   863                           ; 3 bytes @ 0xF
   864  000010                     	ds	3
   865  000013                     ??i2___ftmul:
   866                           
   867                           ; 0 bytes @ 0x12
   868  000013                     	ds	3
   869  000016                     i2___ftmul@exp:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x15
   873  000016                     	ds	1
   874  000017                     i2___ftmul@f3_as_product:
   875                           	opt stack 0
   876                           
   877                           ; 3 bytes @ 0x16
   878  000017                     	ds	3
   879  00001A                     i2___ftmul@cntr:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x19
   883  00001A                     	ds	1
   884  00001B                     i2___ftmul@sign:
   885                           	opt stack 0
   886                           
   887                           ; 1 bytes @ 0x1A
   888  00001B                     	ds	1
   889  00001C                     ?i2___fttol:
   890                           	opt stack 0
   891  00001C                     i2___fttol@f1:
   892                           	opt stack 0
   893                           
   894                           ; 3 bytes @ 0x1B
   895  00001C                     	ds	4
   896  000020                     ??i2___fttol:
   897                           
   898                           ; 0 bytes @ 0x1F
   899  000020                     	ds	5
   900  000025                     i2___fttol@sign1:
   901                           	opt stack 0
   902                           
   903                           ; 1 bytes @ 0x24
   904  000025                     	ds	1
   905  000026                     i2___fttol@lval:
   906                           	opt stack 0
   907                           
   908                           ; 4 bytes @ 0x25
   909  000026                     	ds	4
   910  00002A                     i2___fttol@exp1:
   911                           	opt stack 0
   912                           
   913                           ; 1 bytes @ 0x29
   914  00002A                     	ds	1
   915  00002B                     ??i2_PWM_DutyCycle1:
   916  00002B                     ??i2_PWM_DutyCycle2:
   917                           
   918                           ; 0 bytes @ 0x2A
   919  00002B                     	ds	4
   920  00002F                     i2PWM_DutyCycle1@DutyCycle:
   921                           	opt stack 0
   922  00002F                     i2PWM_DutyCycle2@DutyCycle:
   923                           	opt stack 0
   924                           
   925                           ; 2 bytes @ 0x2E
   926  00002F                     	ds	2
   927  000031                     i2PWM_DutyCycle1@percentageDuty:
   928                           	opt stack 0
   929  000031                     i2PWM_DutyCycle2@percentageDuty:
   930                           	opt stack 0
   931                           
   932                           ; 1 bytes @ 0x30
   933  000031                     	ds	1
   934  000032                     i2PWM_DutyCycle1@DC:
   935                           	opt stack 0
   936  000032                     i2PWM_DutyCycle2@DC:
   937                           	opt stack 0
   938                           
   939                           ; 2 bytes @ 0x31
   940  000032                     	ds	2
   941  000034                     ??_TMRO_USART:
   942  000034                     
   943                           ; 0 bytes @ 0x33
   944  000034                     	ds	14
   945                           tblptru	equ	0xFF8
   946                           tblptrh	equ	0xFF7
   947                           tblptrl	equ	0xFF6
   948                           tablat	equ	0xFF5
   949                           postinc0	equ	0xFEE
   950                           wreg	equ	0xFE8
   951                           postdec1	equ	0xFE5
   952                           fsr1l	equ	0xFE1
   953                           
   954 ;;
   955 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   956 ;;
   957 ;; *************** function _main *****************
   958 ;; Defined at:
   959 ;;		line 157 in file "robot.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  2  329[COMRAM] int 
   966 ;; Registers used:
   967 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   973 ;;      Params:         0       0       0       0       0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0       0       0       0       0
   976 ;;      Totals:         0       0       0       0       0       0       0       0       0
   977 ;;Total ram usage:        0 bytes
   978 ;; Hardware stack levels required when called:   11
   979 ;; This function calls:
   980 ;;		_Comando_Tablet
   981 ;;		_Inicializa_Driveby
   982 ;;		_UART1_Init
   983 ;;		_clrBufferUSART
   984 ;;		_getCNY70Value
   985 ;; This function is called by:
   986 ;;		Startup code after reset
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text0
   991  0014A0                     __ptext0:
   992                           	opt stack 0
   993  0014A0                     _main:
   994                           	opt stack 20
   995                           
   996                           ;robot.c: 159: INTCON =0X00;
   997                           
   998                           ;incstack = 0
   999  0014A0  0E00               	movlw	0
  1000  0014A2  6EF2               	movwf	intcon,c	;volatile
  1001                           
  1002                           ;robot.c: 160: TRISD = 0x00;
  1003  0014A4  0E00               	movlw	0
  1004  0014A6  6E95               	movwf	3989,c	;volatile
  1005                           
  1006                           ;robot.c: 161: TRISE = 0x00;
  1007  0014A8  0E00               	movlw	0
  1008  0014AA  6E96               	movwf	3990,c	;volatile
  1009                           
  1010                           ;robot.c: 162: ADCON1bits.PCFG=0b1111;
  1011  0014AC  80C1               	bsf	4033,0,c	;volatile
  1012  0014AE  82C1               	bsf	4033,1,c	;volatile
  1013  0014B0  84C1               	bsf	4033,2,c	;volatile
  1014  0014B2  86C1               	bsf	4033,3,c	;volatile
  1015                           
  1016                           ;robot.c: 164: Inicializa_Driveby();
  1017  0014B4  EC60  F008         	call	_Inicializa_Driveby	;wreg free
  1018  0014B8                     l3304:
  1019                           
  1020                           ;robot.c: 169: {
  1021                           ;robot.c: 172: if (cleanBfer == 1) {
  1022  0014B8  0100               	movlb	0	; () banked
  1023  0014BA  0564               	decf	_cleanBfer& (0+255),w,b
  1024  0014BC  A4D8               	btfss	status,2,c
  1025  0014BE  D005               	goto	l3310
  1026                           
  1027                           ; BSR set to: 0
  1028                           ;robot.c: 173: clrBufferUSART();
  1029  0014C0  ECD9  F00D         	call	_clrBufferUSART	;wreg free
  1030                           
  1031                           ;robot.c: 174: cleanBfer = 0;
  1032  0014C4  0E00               	movlw	0
  1033  0014C6  0100               	movlb	0	; () banked
  1034  0014C8  6F64               	movwf	_cleanBfer& (0+255),b
  1035  0014CA                     l3310:
  1036                           
  1037                           ; BSR set to: 0
  1038                           ;robot.c: 175: }
  1039                           ;robot.c: 176: if (FinComandT == 1) {
  1040  0014CA  0100               	movlb	0	; () banked
  1041  0014CC  0563               	decf	_FinComandT& (0+255),w,b
  1042  0014CE  A4D8               	btfss	status,2,c
  1043  0014D0  D00E               	goto	l3324
  1044                           
  1045                           ; BSR set to: 0
  1046                           ;robot.c: 178: FinComandT = 0;
  1047  0014D2  0E00               	movlw	0
  1048  0014D4  0100               	movlb	0	; () banked
  1049  0014D6  6F63               	movwf	_FinComandT& (0+255),b
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;robot.c: 179: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1053  0014D8  0E4F               	movlw	79
  1054  0014DA  16AB               	andwf	4011,f,c	;volatile
  1055                           
  1056                           ; BSR set to: 0
  1057  0014DC  9AAC               	bcf	4012,5,c	;volatile
  1058                           
  1059                           ; BSR set to: 0
  1060  0014DE  0ECF               	movlw	207
  1061  0014E0  169D               	andwf	3997,f,c	;volatile
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;robot.c: 180: Comando_Tablet();
  1065  0014E2  EC14  F00C         	call	_Comando_Tablet	;wreg free
  1066                           
  1067                           ;robot.c: 181: UART1_Init(51);
  1068  0014E6  0E33               	movlw	51
  1069  0014E8  ECA2  F00E         	call	_UART1_Init
  1070                           
  1071                           ;robot.c: 183: }
  1072  0014EC  D00C               	goto	l3334
  1073  0014EE                     l3324:
  1074                           
  1075                           ;robot.c: 184: else if (FinComandB == 1) {
  1076  0014EE  0100               	movlb	0	; () banked
  1077  0014F0  0562               	decf	_FinComandB& (0+255),w,b
  1078  0014F2  A4D8               	btfss	status,2,c
  1079  0014F4  D008               	goto	l3334
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;robot.c: 187: FinComandB = 0;
  1083  0014F6  0E00               	movlw	0
  1084  0014F8  0100               	movlb	0	; () banked
  1085  0014FA  6F62               	movwf	_FinComandB& (0+255),b
  1086                           
  1087                           ; BSR set to: 0
  1088                           ;robot.c: 188: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1089  0014FC  0E4F               	movlw	79
  1090  0014FE  16AB               	andwf	4011,f,c	;volatile
  1091                           
  1092                           ; BSR set to: 0
  1093  001500  9AAC               	bcf	4012,5,c	;volatile
  1094                           
  1095                           ; BSR set to: 0
  1096  001502  0ECF               	movlw	207
  1097  001504  169D               	andwf	3997,f,c	;volatile
  1098  001506                     l3334:
  1099                           
  1100                           ;robot.c: 192: }
  1101                           ;robot.c: 194: PORTAbits.RA0 = PORTBbits.RB3;
  1102  001506  A681               	btfss	3969,3,c	;volatile
  1103  001508  D002               	bra	u3215
  1104  00150A  8080               	bsf	3968,0,c	;volatile
  1105  00150C  D001               	bra	u3217
  1106  00150E                     u3215:
  1107  00150E  9080               	bcf	3968,0,c	;volatile
  1108  001510                     u3217:
  1109                           
  1110                           ;robot.c: 195: PORTAbits.RA1 = PORTBbits.RB0;
  1111  001510  A081               	btfss	3969,0,c	;volatile
  1112  001512  D002               	bra	u3225
  1113  001514  8280               	bsf	3968,1,c	;volatile
  1114  001516  D001               	bra	u3227
  1115  001518                     u3225:
  1116  001518  9280               	bcf	3968,1,c	;volatile
  1117  00151A                     u3227:
  1118                           
  1119                           ;robot.c: 196: PORTAbits.RA2 = PORTBbits.RB4;
  1120  00151A  A881               	btfss	3969,4,c	;volatile
  1121  00151C  D002               	bra	u3235
  1122  00151E  8480               	bsf	3968,2,c	;volatile
  1123  001520  D001               	bra	u3237
  1124  001522                     u3235:
  1125  001522  9480               	bcf	3968,2,c	;volatile
  1126  001524                     u3237:
  1127                           
  1128                           ;robot.c: 198: getCNY70Value();
  1129  001524  ECFA  F006         	call	_getCNY70Value	;wreg free
  1130  001528  D7C7               	goto	l3304
  1131  00152A                     __end_of_main:
  1132                           	opt stack 0
  1133                           tblptru	equ	0xFF8
  1134                           tblptrh	equ	0xFF7
  1135                           tblptrl	equ	0xFF6
  1136                           tablat	equ	0xFF5
  1137                           intcon	equ	0xFF2
  1138                           postinc0	equ	0xFEE
  1139                           wreg	equ	0xFE8
  1140                           postdec1	equ	0xFE5
  1141                           fsr1l	equ	0xFE1
  1142                           status	equ	0xFD8
  1143                           
  1144 ;; *************** function _Inicializa_Driveby *****************
  1145 ;; Defined at:
  1146 ;;		line 62 in file "Funciones_Db.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  i               2   52[BANK0 ] int 
  1151 ;; Return value:  Size  Location     Type
  1152 ;;		None               void
  1153 ;; Registers used:
  1154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1160 ;;      Params:         0       0       0       0       0       0       0       0       0
  1161 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1162 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1163 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1164 ;;Total ram usage:        3 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:   10
  1167 ;; This function calls:
  1168 ;;		_BT_Init
  1169 ;;		_PWM_DutyCycle1
  1170 ;;		_PWM_DutyCycle2
  1171 ;;		_PWM_init1
  1172 ;;		_PWM_init2
  1173 ;;		_Pause_seg
  1174 ;;		_clrBufferUSART
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text1
  1181  0010C0                     __ptext1:
  1182                           	opt stack 0
  1183  0010C0                     _Inicializa_Driveby:
  1184                           	opt stack 20
  1185                           
  1186                           ;Funciones_Db.c: 63: TRISA = TRISB = TRISC = TRISD = 0;
  1187                           
  1188                           ;incstack = 0
  1189  0010C0  0E00               	movlw	0
  1190  0010C2  6E95               	movwf	3989,c	;volatile
  1191  0010C4  CF95 FF94          	movff	3989,3988	;volatile
  1192  0010C8  CF94 FF93          	movff	3988,3987	;volatile
  1193  0010CC  CF93 FF92          	movff	3987,3986	;volatile
  1194                           
  1195                           ;Funciones_Db.c: 64: INTCON = 0b11000000;
  1196  0010D0  0EC0               	movlw	192
  1197  0010D2  6EF2               	movwf	intcon,c	;volatile
  1198                           
  1199                           ;Funciones_Db.c: 67: int i = 0;
  1200  0010D4  0E00               	movlw	0
  1201  0010D6  0100               	movlb	0	; () banked
  1202  0010D8  6FE1               	movwf	(Inicializa_Driveby@i+1)& (0+255),b
  1203  0010DA  0E00               	movlw	0
  1204  0010DC  0100               	movlb	0	; () banked
  1205  0010DE  6FE0               	movwf	Inicializa_Driveby@i& (0+255),b
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;Funciones_Db.c: 68: _delay((unsigned long)((40)*(4000000/4000.0)));
  1209  0010E0  0E34               	movlw	52
  1210  0010E2  0100               	movlb	0	; () banked
  1211  0010E4  6FDF               	movwf	??_Inicializa_Driveby& (0+255),b
  1212  0010E6  0EF2               	movlw	242
  1213  0010E8                     u3247:
  1214  0010E8  2EE8               	decfsz	wreg,f,c
  1215  0010EA  D7FE               	goto	u3247
  1216  0010EC  2FDF               	decfsz	??_Inicializa_Driveby& (0+255),f,b
  1217  0010EE  D7FC               	goto	u3247
  1218                           
  1219                           ;Funciones_Db.c: 69: OSCCONbits.IRCF = 0b111;
  1220  0010F0  88D3               	bsf	4051,4,c	;volatile
  1221  0010F2  8AD3               	bsf	4051,5,c	;volatile
  1222  0010F4  8CD3               	bsf	4051,6,c	;volatile
  1223                           
  1224                           ;Funciones_Db.c: 74: TRISA = TRISB = TRISC = TRISD = TRISE = 0;
  1225  0010F6  0E00               	movlw	0
  1226  0010F8  6E96               	movwf	3990,c	;volatile
  1227  0010FA  CF96 FF95          	movff	3990,3989	;volatile
  1228  0010FE  CF95 FF94          	movff	3989,3988	;volatile
  1229  001102  CF94 FF93          	movff	3988,3987	;volatile
  1230  001106  CF93 FF92          	movff	3987,3986	;volatile
  1231                           
  1232                           ;Funciones_Db.c: 75: PORTA = PORTB = PORTC = PORTD = PORTE = 0;
  1233  00110A  0E00               	movlw	0
  1234  00110C  6E84               	movwf	3972,c	;volatile
  1235  00110E  CF84 FF83          	movff	3972,3971	;volatile
  1236  001112  CF83 FF82          	movff	3971,3970	;volatile
  1237  001116  CF82 FF81          	movff	3970,3969	;volatile
  1238  00111A  CF81 FF80          	movff	3969,3968	;volatile
  1239                           
  1240                           ;Funciones_Db.c: 76: TRISCbits.TRISC7 = 1;
  1241  00111E  8E94               	bsf	3988,7,c	;volatile
  1242                           
  1243                           ;Funciones_Db.c: 77: TRISCbits.TRISC6 = 0;
  1244  001120  9C94               	bcf	3988,6,c	;volatile
  1245                           
  1246                           ;Funciones_Db.c: 78: for (i = 1; i <= 50; i++)
  1247  001122  0E00               	movlw	0
  1248  001124  0100               	movlb	0	; () banked
  1249  001126  6FE1               	movwf	(Inicializa_Driveby@i+1)& (0+255),b
  1250  001128  0E01               	movlw	1
  1251  00112A  0100               	movlb	0	; () banked
  1252  00112C  6FE0               	movwf	Inicializa_Driveby@i& (0+255),b
  1253  00112E                     
  1254                           ; BSR set to: 0
  1255  00112E  0100               	movlb	0	; () banked
  1256  001130  51E1               	movf	(Inicializa_Driveby@i+1)& (0+255),w,b
  1257  001132  0A80               	xorlw	128
  1258  001134  0F80               	addlw	-128
  1259  001136  0E33               	movlw	51
  1260  001138  B4D8               	btfsc	status,2,c
  1261  00113A  5DE0               	subwf	Inicializa_Driveby@i& (0+255),w,b
  1262  00113C  B0D8               	btfsc	status,0,c
  1263  00113E  D00D               	goto	l3136
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;Funciones_Db.c: 79: _delay((unsigned long)((20)*(4000000/4000.0)));
  1267                           
  1268                           ; BSR set to: 0
  1269                           
  1270                           ; BSR set to: 0
  1271  001140  0E1A               	movlw	26
  1272  001142  0100               	movlb	0	; () banked
  1273  001144  6FDF               	movwf	??_Inicializa_Driveby& (0+255),b
  1274  001146  0EF8               	movlw	248
  1275  001148                     u3257:
  1276  001148  2EE8               	decfsz	wreg,f,c
  1277  00114A  D7FE               	goto	u3257
  1278  00114C  2FDF               	decfsz	??_Inicializa_Driveby& (0+255),f,b
  1279  00114E  D7FC               	goto	u3257
  1280  001150  D000               	nop2	
  1281  001152  0100               	movlb	0	; () banked
  1282  001154  4BE0               	infsnz	Inicializa_Driveby@i& (0+255),f,b
  1283  001156  2BE1               	incf	(Inicializa_Driveby@i+1)& (0+255),f,b
  1284  001158  D7EA               	goto	L1
  1285  00115A                     l3136:
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;Funciones_Db.c: 80: PORTE = 0;
  1289  00115A  0E00               	movlw	0
  1290  00115C  6E84               	movwf	3972,c	;volatile
  1291                           
  1292                           ;Funciones_Db.c: 81: PORTB = 0;
  1293  00115E  0E00               	movlw	0
  1294  001160  6E81               	movwf	3969,c	;volatile
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;Funciones_Db.c: 82: TRISBbits.TRISB0 = 1;
  1298  001162  8093               	bsf	3987,0,c	;volatile
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;Funciones_Db.c: 83: TRISBbits.TRISB1 = 1;
  1302  001164  8293               	bsf	3987,1,c	;volatile
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;Funciones_Db.c: 84: TRISBbits.TRISB2 = 1;
  1306  001166  8493               	bsf	3987,2,c	;volatile
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;Funciones_Db.c: 85: TRISBbits.TRISB3 = 1;
  1310  001168  8693               	bsf	3987,3,c	;volatile
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;Funciones_Db.c: 86: TRISBbits.TRISB4 = 1;
  1314  00116A  8893               	bsf	3987,4,c	;volatile
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;Funciones_Db.c: 90: BT_Init();
  1318  00116C  EC36  F009         	call	_BT_Init	;wreg free
  1319                           
  1320                           ;Funciones_Db.c: 93: Pause_seg(7);
  1321  001170  0E07               	movlw	7
  1322  001172  ECB9  F00C         	call	_Pause_seg
  1323                           
  1324                           ;Funciones_Db.c: 94: cad = 0;
  1325  001176  0E00               	movlw	0
  1326  001178  6E55               	movwf	_cad,c
  1327                           
  1328                           ;Funciones_Db.c: 95: clrBufferUSART();
  1329  00117A  ECD9  F00D         	call	_clrBufferUSART	;wreg free
  1330                           
  1331                           ;Funciones_Db.c: 98: PWM_init1(0xff);
  1332  00117E  0EFF               	movlw	255
  1333  001180  EC61  F00E         	call	_PWM_init1
  1334                           
  1335                           ;Funciones_Db.c: 99: PWM_init2(0xff);
  1336  001184  0EFF               	movlw	255
  1337  001186  EC4E  F00E         	call	_PWM_init2
  1338                           
  1339                           ;Funciones_Db.c: 100: PWM_DutyCycle1(0);
  1340  00118A  0E00               	movlw	0
  1341  00118C  EC9A  F00B         	call	_PWM_DutyCycle1
  1342                           
  1343                           ;Funciones_Db.c: 101: PWM_DutyCycle2(0);
  1344  001190  0E00               	movlw	0
  1345  001192  EC5C  F00B         	call	_PWM_DutyCycle2
  1346                           
  1347                           ;Funciones_Db.c: 102: return;
  1348  001196  0012               	return	
  1349  001198                     __end_of_Inicializa_Driveby:
  1350                           	opt stack 0
  1351                           tblptru	equ	0xFF8
  1352                           tblptrh	equ	0xFF7
  1353                           tblptrl	equ	0xFF6
  1354                           tablat	equ	0xFF5
  1355                           intcon	equ	0xFF2
  1356                           postinc0	equ	0xFEE
  1357                           wreg	equ	0xFE8
  1358                           postdec1	equ	0xFE5
  1359                           fsr1l	equ	0xFE1
  1360                           status	equ	0xFD8
  1361                           
  1362 ;; *************** function _PWM_init2 *****************
  1363 ;; Defined at:
  1364 ;;		line 42 in file "pwm.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  period          1    wreg     unsigned char 
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;  period          1    3[BANK0 ] unsigned char 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;		None               void
  1371 ;; Registers used:
  1372 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1378 ;;      Params:         0       0       0       0       0       0       0       0       0
  1379 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1380 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1381 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1382 ;;Total ram usage:        1 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    6
  1385 ;; This function calls:
  1386 ;;		_OpenPWM2
  1387 ;; This function is called by:
  1388 ;;		_Inicializa_Driveby
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text2
  1393  001C9C                     __ptext2:
  1394                           	opt stack 0
  1395  001C9C                     _PWM_init2:
  1396                           	opt stack 23
  1397                           
  1398                           ;incstack = 0
  1399                           ;PWM_init2@period stored from wreg
  1400  001C9C  0100               	movlb	0	; () banked
  1401  001C9E  6FAF               	movwf	PWM_init2@period& (0+255),b
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;pwm.c: 43: Timer2Config = 0b11111110;
  1405  001CA0  0EFE               	movlw	254
  1406  001CA2  0100               	movlb	0	; () banked
  1407  001CA4  6FAB               	movwf	_Timer2Config& (0+255),b
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;pwm.c: 44: T2CON = (0xfb & Timer2Config);
  1411  001CA6  0100               	movlb	0	; () banked
  1412  001CA8  51AB               	movf	_Timer2Config& (0+255),w,b
  1413  001CAA  0BFB               	andlw	251
  1414  001CAC  6ECA               	movwf	4042,c	;volatile
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;pwm.c: 47: TMR2 = 0;
  1418  001CAE  0E00               	movlw	0
  1419  001CB0  6ECC               	movwf	4044,c	;volatile
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;pwm.c: 48: PIR1bits.TMR2IF = 0;
  1423  001CB2  929E               	bcf	3998,1,c	;volatile
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;pwm.c: 49: PIE1bits.TMR2IE = 0;
  1427  001CB4  929D               	bcf	3997,1,c	;volatile
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;pwm.c: 50: T2CONbits.TMR2ON = 1;
  1431  001CB6  84CA               	bsf	4042,2,c	;volatile
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;pwm.c: 51: OpenPWM2(period);
  1435  001CB8  0100               	movlb	0	; () banked
  1436  001CBA  51AF               	movf	PWM_init2@period& (0+255),w,b
  1437  001CBC  ECB7  F00D         	call	_OpenPWM2
  1438                           
  1439                           ;pwm.c: 53: return;
  1440  001CC0  0012               	return	
  1441  001CC2                     __end_of_PWM_init2:
  1442                           	opt stack 0
  1443                           tblptru	equ	0xFF8
  1444                           tblptrh	equ	0xFF7
  1445                           tblptrl	equ	0xFF6
  1446                           tablat	equ	0xFF5
  1447                           intcon	equ	0xFF2
  1448                           postinc0	equ	0xFEE
  1449                           wreg	equ	0xFE8
  1450                           postdec1	equ	0xFE5
  1451                           fsr1l	equ	0xFE1
  1452                           status	equ	0xFD8
  1453                           
  1454 ;; *************** function _OpenPWM2 *****************
  1455 ;; Defined at:
  1456 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2open.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  period          1    wreg     unsigned char 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  period          1    1[BANK0 ] unsigned char 
  1461 ;;  ccp2mx          1    2[BANK0 ] unsigned char 
  1462 ;;  pmmode          1    0        unsigned char 
  1463 ;; Return value:  Size  Location     Type
  1464 ;;		None               void
  1465 ;; Registers used:
  1466 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1472 ;;      Params:         0       0       0       0       0       0       0       0       0
  1473 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1474 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1475 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1476 ;;Total ram usage:        3 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:    5
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_PWM_init2
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text3
  1487  001B6E                     __ptext3:
  1488                           	opt stack 0
  1489  001B6E                     _OpenPWM2:
  1490                           	opt stack 23
  1491                           
  1492                           ;incstack = 0
  1493                           ;OpenPWM2@period stored from wreg
  1494  001B6E  0100               	movlb	0	; () banked
  1495  001B70  6FAD               	movwf	OpenPWM2@period& (0+255),b
  1496                           
  1497                           ; BSR set to: 0
  1498  001B72  0E0C               	movlw	12
  1499  001B74  6EBA               	movwf	4026,c	;volatile
  1500                           
  1501                           ; BSR set to: 0
  1502  001B76  0E05               	movlw	5
  1503  001B78  6EF6               	movwf	tblptrl,c
  1504  001B7A                     	if	1	;There is more than 1 active tblptr byte
  1505  001B7A  0E00               	movlw	0
  1506  001B7C  6EF7               	movwf	tblptrh,c
  1507  001B7E                     	endif
  1508  001B7E                     	if	1	;There are 3 active tblptr bytes
  1509  001B7E  0E30               	movlw	48
  1510  001B80  6EF8               	movwf	tblptru,c
  1511  001B82                     	endif
  1512  001B82  0008               	tblrd		*
  1513  001B84  CFF5 F0AC          	movff	tablat,??_OpenPWM2
  1514  001B88  0100               	movlb	0	; () banked
  1515  001B8A  A1AC               	btfss	??_OpenPWM2& (0+255),0,b
  1516  001B8C  D003               	goto	l2704
  1517                           
  1518                           ; BSR set to: 0
  1519  001B8E  0100               	movlb	0	; () banked
  1520  001B90  69AE               	setf	OpenPWM2@ccp2mx& (0+255),b
  1521  001B92  D003               	goto	l515
  1522  001B94                     l2704:
  1523                           
  1524                           ; BSR set to: 0
  1525  001B94  0E00               	movlw	0
  1526  001B96  0100               	movlb	0	; () banked
  1527  001B98  6FAE               	movwf	OpenPWM2@ccp2mx& (0+255),b
  1528  001B9A                     l515:
  1529                           
  1530                           ; BSR set to: 0
  1531  001B9A  0100               	movlb	0	; () banked
  1532  001B9C  51AE               	movf	OpenPWM2@ccp2mx& (0+255),w,b
  1533  001B9E  B4D8               	btfsc	status,2,c
  1534  001BA0  D002               	goto	l516
  1535                           
  1536                           ; BSR set to: 0
  1537  001BA2  9294               	bcf	3988,1,c	;volatile
  1538  001BA4  D001               	goto	l517
  1539  001BA6                     l516:
  1540                           
  1541                           ; BSR set to: 0
  1542  001BA6  9693               	bcf	3987,3,c	;volatile
  1543  001BA8                     l517:
  1544                           
  1545                           ; BSR set to: 0
  1546  001BA8  94CA               	bcf	4042,2,c	;volatile
  1547  001BAA  C0AD  FFCB         	movff	OpenPWM2@period,4043	;volatile
  1548  001BAE  84CA               	bsf	4042,2,c	;volatile
  1549                           
  1550                           ; BSR set to: 0
  1551  001BB0  0012               	return	
  1552  001BB2                     __end_of_OpenPWM2:
  1553                           	opt stack 0
  1554                           tblptru	equ	0xFF8
  1555                           tblptrh	equ	0xFF7
  1556                           tblptrl	equ	0xFF6
  1557                           tablat	equ	0xFF5
  1558                           intcon	equ	0xFF2
  1559                           postinc0	equ	0xFEE
  1560                           wreg	equ	0xFE8
  1561                           postdec1	equ	0xFE5
  1562                           fsr1l	equ	0xFE1
  1563                           status	equ	0xFD8
  1564                           
  1565 ;; *************** function _PWM_init1 *****************
  1566 ;; Defined at:
  1567 ;;		line 20 in file "pwm.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  period          1    wreg     unsigned char 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  period          1    1[BANK0 ] unsigned char 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;		None               void
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1581 ;;      Params:         0       0       0       0       0       0       0       0       0
  1582 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1584 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1585 ;;Total ram usage:        1 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    6
  1588 ;; This function calls:
  1589 ;;		_OpenPWM1
  1590 ;; This function is called by:
  1591 ;;		_Inicializa_Driveby
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text4
  1596  001CC2                     __ptext4:
  1597                           	opt stack 0
  1598  001CC2                     _PWM_init1:
  1599                           	opt stack 23
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;incstack = 0
  1603                           ;PWM_init1@period stored from wreg
  1604  001CC2  0100               	movlb	0	; () banked
  1605  001CC4  6FAD               	movwf	PWM_init1@period& (0+255),b
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;pwm.c: 21: Timer2Config = 0b11111110;
  1609  001CC6  0EFE               	movlw	254
  1610  001CC8  0100               	movlb	0	; () banked
  1611  001CCA  6FAB               	movwf	_Timer2Config& (0+255),b
  1612                           
  1613                           ; BSR set to: 0
  1614                           ;pwm.c: 22: T2CON = (0xfb & Timer2Config);
  1615  001CCC  0100               	movlb	0	; () banked
  1616  001CCE  51AB               	movf	_Timer2Config& (0+255),w,b
  1617  001CD0  0BFB               	andlw	251
  1618  001CD2  6ECA               	movwf	4042,c	;volatile
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;pwm.c: 25: TMR2 = 0;
  1622  001CD4  0E00               	movlw	0
  1623  001CD6  6ECC               	movwf	4044,c	;volatile
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;pwm.c: 26: PIR1bits.TMR2IF = 0;
  1627  001CD8  929E               	bcf	3998,1,c	;volatile
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;pwm.c: 27: PIE1bits.TMR2IE = 0;
  1631  001CDA  929D               	bcf	3997,1,c	;volatile
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;pwm.c: 28: T2CONbits.TMR2ON = 1;
  1635  001CDC  84CA               	bsf	4042,2,c	;volatile
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;pwm.c: 29: OpenPWM1(period);
  1639  001CDE  0100               	movlb	0	; () banked
  1640  001CE0  51AD               	movf	PWM_init1@period& (0+255),w,b
  1641  001CE2  ECD9  F00E         	call	_OpenPWM1
  1642                           
  1643                           ;pwm.c: 31: return;
  1644  001CE6  0012               	return	
  1645  001CE8                     __end_of_PWM_init1:
  1646                           	opt stack 0
  1647                           tblptru	equ	0xFF8
  1648                           tblptrh	equ	0xFF7
  1649                           tblptrl	equ	0xFF6
  1650                           tablat	equ	0xFF5
  1651                           intcon	equ	0xFF2
  1652                           postinc0	equ	0xFEE
  1653                           wreg	equ	0xFE8
  1654                           postdec1	equ	0xFE5
  1655                           fsr1l	equ	0xFE1
  1656                           status	equ	0xFD8
  1657                           
  1658 ;; *************** function _OpenPWM1 *****************
  1659 ;; Defined at:
  1660 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1open.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  period          1    wreg     unsigned char 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  period          1    0[BANK0 ] unsigned char 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;		None               void
  1667 ;; Registers used:
  1668 ;;		wreg, status,2, status,0
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1674 ;;      Params:         0       0       0       0       0       0       0       0       0
  1675 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1676 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1677 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1678 ;;Total ram usage:        1 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    5
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_PWM_init1
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           	psect	text5
  1689  001DB2                     __ptext5:
  1690                           	opt stack 0
  1691  001DB2                     _OpenPWM1:
  1692                           	opt stack 23
  1693                           
  1694                           ;incstack = 0
  1695                           ;OpenPWM1@period stored from wreg
  1696  001DB2  0100               	movlb	0	; () banked
  1697  001DB4  6FAC               	movwf	OpenPWM1@period& (0+255),b
  1698                           
  1699                           ; BSR set to: 0
  1700  001DB6  0E0C               	movlw	12
  1701  001DB8  12BD               	iorwf	4029,f,c	;volatile
  1702                           
  1703                           ; BSR set to: 0
  1704  001DBA  9494               	bcf	3988,2,c	;volatile
  1705                           
  1706                           ; BSR set to: 0
  1707  001DBC  94CA               	bcf	4042,2,c	;volatile
  1708                           
  1709                           ; BSR set to: 0
  1710  001DBE  C0AC  FFCB         	movff	OpenPWM1@period,4043	;volatile
  1711                           
  1712                           ; BSR set to: 0
  1713  001DC2  84CA               	bsf	4042,2,c	;volatile
  1714                           
  1715                           ; BSR set to: 0
  1716  001DC4  0012               	return	
  1717  001DC6                     __end_of_OpenPWM1:
  1718                           	opt stack 0
  1719                           tblptru	equ	0xFF8
  1720                           tblptrh	equ	0xFF7
  1721                           tblptrl	equ	0xFF6
  1722                           tablat	equ	0xFF5
  1723                           intcon	equ	0xFF2
  1724                           postinc0	equ	0xFEE
  1725                           wreg	equ	0xFE8
  1726                           postdec1	equ	0xFE5
  1727                           fsr1l	equ	0xFE1
  1728                           status	equ	0xFD8
  1729                           
  1730 ;; *************** function _BT_Init *****************
  1731 ;; Defined at:
  1732 ;;		line 16 in file "Bluetooth.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  nameBT         18   14[BANK0 ] unsigned char [18]
  1737 ;; Return value:  Size  Location     Type
  1738 ;;		None               void
  1739 ;; Registers used:
  1740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1746 ;;      Params:         0       0       0       0       0       0       0       0       0
  1747 ;;      Locals:         0      18       0       0       0       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1749 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1750 ;;Total ram usage:       18 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    9
  1753 ;; This function calls:
  1754 ;;		_Pause_seg
  1755 ;;		_SendBlueToothCommand
  1756 ;;		_UART1_Init
  1757 ;; This function is called by:
  1758 ;;		_Inicializa_Driveby
  1759 ;;		_EstadoBluetooth
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text6
  1764  00126C                     __ptext6:
  1765                           	opt stack 0
  1766  00126C                     _BT_Init:
  1767                           	opt stack 20
  1768                           
  1769                           ;Bluetooth.c: 18: UART1_Init(51);
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;incstack = 0
  1773  00126C  0E33               	movlw	51
  1774  00126E  ECA2  F00E         	call	_UART1_Init
  1775                           
  1776                           ;Bluetooth.c: 21: Pause_seg(1);
  1777  001272  0E01               	movlw	1
  1778  001274  ECB9  F00C         	call	_Pause_seg
  1779                           
  1780                           ;Bluetooth.c: 22: char nameBT[18] = {
  1781                           ;Bluetooth.c: 23: "AT+NAME=robot\r\n\0"
  1782                           ;Bluetooth.c: 24: };
  1783  001278  EE20  F0E4         	lfsr	2,BT_Init@F5675
  1784  00127C  EE10  F0BA         	lfsr	1,BT_Init@nameBT
  1785  001280  0E12               	movlw	18
  1786  001282                     u2431:
  1787  001282  CFDE FFE6          	movff	postinc2,postinc1
  1788  001286  2EE8               	decfsz	wreg,f,c
  1789  001288  D7FC               	goto	u2431
  1790                           
  1791                           ;Bluetooth.c: 27: SendBlueToothCommand("AT+ROLE=0\r\n", 11);
  1792  00128A  0E08               	movlw	high STR_1
  1793  00128C  0100               	movlb	0	; () banked
  1794  00128E  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1795  001290  0E52               	movlw	low STR_1
  1796  001292  0100               	movlb	0	; () banked
  1797  001294  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1798  001296  0E00               	movlw	0
  1799  001298  0100               	movlb	0	; () banked
  1800  00129A  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1801  00129C  0E0B               	movlw	11
  1802  00129E  0100               	movlb	0	; () banked
  1803  0012A0  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1804  0012A2  EC95  F00E         	call	_SendBlueToothCommand	;wreg free
  1805                           
  1806                           ;Bluetooth.c: 29: Pause_seg(1);
  1807  0012A6  0E01               	movlw	1
  1808  0012A8  ECB9  F00C         	call	_Pause_seg
  1809                           
  1810                           ;Bluetooth.c: 32: SendBlueToothCommand((const char * ) nameBT, sizeof(nameBT));
  1811  0012AC  0100               	movlb	0	; () banked
  1812  0012AE  0E00               	movlw	high BT_Init@nameBT
  1813  0012B0  0100               	movlb	0	; () banked
  1814  0012B2  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1815  0012B4  0100               	movlb	0	; () banked
  1816  0012B6  0EBA               	movlw	low BT_Init@nameBT
  1817  0012B8  0100               	movlb	0	; () banked
  1818  0012BA  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1819  0012BC  0E00               	movlw	0
  1820  0012BE  0100               	movlb	0	; () banked
  1821  0012C0  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1822  0012C2  0E12               	movlw	18
  1823  0012C4  0100               	movlb	0	; () banked
  1824  0012C6  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1825  0012C8  EC95  F00E         	call	_SendBlueToothCommand	;wreg free
  1826                           
  1827                           ;Bluetooth.c: 33: Pause_seg(2);
  1828  0012CC  0E02               	movlw	2
  1829  0012CE  ECB9  F00C         	call	_Pause_seg
  1830                           
  1831                           ;Bluetooth.c: 35: SendBlueToothCommand("AT+PSWD=0000\r\n", 14);
  1832  0012D2  0E08               	movlw	high STR_2
  1833  0012D4  0100               	movlb	0	; () banked
  1834  0012D6  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1835  0012D8  0E0B               	movlw	low STR_2
  1836  0012DA  0100               	movlb	0	; () banked
  1837  0012DC  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1838  0012DE  0E00               	movlw	0
  1839  0012E0  0100               	movlb	0	; () banked
  1840  0012E2  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1841  0012E4  0E0E               	movlw	14
  1842  0012E6  0100               	movlb	0	; () banked
  1843  0012E8  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1844  0012EA  EC95  F00E         	call	_SendBlueToothCommand	;wreg free
  1845                           
  1846                           ;Bluetooth.c: 36: Pause_seg(2);
  1847  0012EE  0E02               	movlw	2
  1848  0012F0  ECB9  F00C         	call	_Pause_seg
  1849                           
  1850                           ;Bluetooth.c: 40: SendBlueToothCommand("AT+INQ\r\n", 8);
  1851  0012F4  0E08               	movlw	high STR_3
  1852  0012F6  0100               	movlb	0	; () banked
  1853  0012F8  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1854  0012FA  0E5E               	movlw	low STR_3
  1855  0012FC  0100               	movlb	0	; () banked
  1856  0012FE  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1857  001300  0E00               	movlw	0
  1858  001302  0100               	movlb	0	; () banked
  1859  001304  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1860  001306  0E08               	movlw	8
  1861  001308  0100               	movlb	0	; () banked
  1862  00130A  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1863  00130C  EC95  F00E         	call	_SendBlueToothCommand	;wreg free
  1864                           
  1865                           ;Bluetooth.c: 41: Pause_seg(2);
  1866  001310  0E02               	movlw	2
  1867  001312  ECB9  F00C         	call	_Pause_seg
  1868                           
  1869                           ;Bluetooth.c: 43: SendBlueToothCommand("AT+INQ\r\n", 8);
  1870  001316  0E08               	movlw	high STR_3
  1871  001318  0100               	movlb	0	; () banked
  1872  00131A  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1873  00131C  0E5E               	movlw	low STR_3
  1874  00131E  0100               	movlb	0	; () banked
  1875  001320  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1876  001322  0E00               	movlw	0
  1877  001324  0100               	movlb	0	; () banked
  1878  001326  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1879  001328  0E08               	movlw	8
  1880  00132A  0100               	movlb	0	; () banked
  1881  00132C  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1882  00132E  EC95  F00E         	call	_SendBlueToothCommand	;wreg free
  1883                           
  1884                           ;Bluetooth.c: 44: Pause_seg(2);
  1885  001332  0E02               	movlw	2
  1886  001334  ECB9  F00C         	call	_Pause_seg
  1887                           
  1888                           ;Bluetooth.c: 45: return;
  1889  001338  0012               	return	
  1890  00133A                     __end_of_BT_Init:
  1891                           	opt stack 0
  1892                           tblptru	equ	0xFF8
  1893                           tblptrh	equ	0xFF7
  1894                           tblptrl	equ	0xFF6
  1895                           tablat	equ	0xFF5
  1896                           intcon	equ	0xFF2
  1897                           postinc0	equ	0xFEE
  1898                           wreg	equ	0xFE8
  1899                           postinc1	equ	0xFE6
  1900                           postdec1	equ	0xFE5
  1901                           fsr1l	equ	0xFE1
  1902                           postinc2	equ	0xFDE
  1903                           status	equ	0xFD8
  1904                           
  1905 ;; *************** function _SendBlueToothCommand *****************
  1906 ;; Defined at:
  1907 ;;		line 48 in file "Bluetooth.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  command         2   10[BANK0 ] PTR const unsigned char 
  1910 ;;		 -> STR_4(9), STR_3(9), STR_2(15), STR_1(12), 
  1911 ;;		 -> BT_Init@nameBT(18), 
  1912 ;;  total           2   12[BANK0 ] unsigned int 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;		None               void
  1917 ;; Registers used:
  1918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1924 ;;      Params:         0       4       0       0       0       0       0       0       0
  1925 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1927 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1928 ;;Total ram usage:        4 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    8
  1931 ;; This function calls:
  1932 ;;		_putSTRINGU1
  1933 ;; This function is called by:
  1934 ;;		_BT_Init
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text7
  1939  001D2A                     __ptext7:
  1940                           	opt stack 0
  1941  001D2A                     _SendBlueToothCommand:
  1942                           	opt stack 20
  1943                           
  1944                           ;Bluetooth.c: 49: putSTRINGU1(command, total);
  1945                           
  1946                           ;incstack = 0
  1947  001D2A  0100               	movlb	0	; () banked
  1948  001D2C  C0B7  F0AF         	movff	SendBlueToothCommand@command+1,putSTRINGU1@dato+1
  1949  001D30  0100               	movlb	0	; () banked
  1950  001D32  C0B6  F0AE         	movff	SendBlueToothCommand@command,putSTRINGU1@dato
  1951  001D36  C0B8  F0B0         	movff	SendBlueToothCommand@total,putSTRINGU1@total
  1952  001D3A  C0B9  F0B1         	movff	SendBlueToothCommand@total+1,putSTRINGU1@total+1
  1953  001D3E  EC9D  F009         	call	_putSTRINGU1	;wreg free
  1954                           
  1955                           ;Bluetooth.c: 50: return;
  1956  001D42  0012               	return	
  1957  001D44                     __end_of_SendBlueToothCommand:
  1958                           	opt stack 0
  1959                           tblptru	equ	0xFF8
  1960                           tblptrh	equ	0xFF7
  1961                           tblptrl	equ	0xFF6
  1962                           tablat	equ	0xFF5
  1963                           intcon	equ	0xFF2
  1964                           postinc0	equ	0xFEE
  1965                           wreg	equ	0xFE8
  1966                           postinc1	equ	0xFE6
  1967                           postdec1	equ	0xFE5
  1968                           fsr1l	equ	0xFE1
  1969                           postinc2	equ	0xFDE
  1970                           status	equ	0xFD8
  1971                           
  1972 ;; *************** function _putSTRINGU1 *****************
  1973 ;; Defined at:
  1974 ;;		line 18 in file "UART1.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  dato            2    2[BANK0 ] PTR const unsigned char 
  1977 ;;		 -> STR_4(9), STR_3(9), STR_2(15), STR_1(12), 
  1978 ;;		 -> BT_Init@nameBT(18), 
  1979 ;;  total           2    4[BANK0 ] unsigned int 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  cont            1    9[BANK0 ] unsigned char 
  1982 ;;  last            1    8[BANK0 ] unsigned char 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;		None               void
  1985 ;; Registers used:
  1986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1992 ;;      Params:         0       4       0       0       0       0       0       0       0
  1993 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1994 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1995 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1996 ;;Total ram usage:        8 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    7
  1999 ;; This function calls:
  2000 ;;		_putcTxU1
  2001 ;; This function is called by:
  2002 ;;		_SendBlueToothCommand
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text8
  2007  00133A                     __ptext8:
  2008                           	opt stack 0
  2009  00133A                     _putSTRINGU1:
  2010                           	opt stack 20
  2011                           
  2012                           ;UART1.c: 19: unsigned char cont,last;
  2013                           ;UART1.c: 21: for(cont=0,last=0;cont<total;cont++){
  2014                           
  2015                           ;incstack = 0
  2016  00133A  0E00               	movlw	0
  2017  00133C  0100               	movlb	0	; () banked
  2018  00133E  6FB5               	movwf	putSTRINGU1@cont& (0+255),b
  2019  001340  0E00               	movlw	0
  2020  001342  0100               	movlb	0	; () banked
  2021  001344  6FB4               	movwf	putSTRINGU1@last& (0+255),b
  2022  001346  D025               	goto	l2424
  2023  001348                     l2418:
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;UART1.c: 22: if(dato[cont]!='\0') last=cont;
  2027  001348  0100               	movlb	0	; () banked
  2028  00134A  51B5               	movf	putSTRINGU1@cont& (0+255),w,b
  2029  00134C  0D01               	mullw	1
  2030  00134E  0100               	movlb	0	; () banked
  2031  001350  C0AE  F0B2         	movff	putSTRINGU1@dato,??_putSTRINGU1
  2032  001354  0100               	movlb	0	; () banked
  2033  001356  C0AF  F0B3         	movff	putSTRINGU1@dato+1,??_putSTRINGU1+1
  2034  00135A  50F3               	movf	prodl,w,c
  2035  00135C  0100               	movlb	0	; () banked
  2036  00135E  27B2               	addwf	??_putSTRINGU1& (0+255),f,b
  2037  001360  50F4               	movf	prodh,w,c
  2038  001362  0100               	movlb	0	; () banked
  2039  001364  23B3               	addwfc	(??_putSTRINGU1+1)& (0+255),f,b
  2040  001366  C0B2  FFF6         	movff	??_putSTRINGU1,tblptrl
  2041  00136A  C0B3  FFF7         	movff	??_putSTRINGU1+1,tblptrh
  2042  00136E  6AF8               	clrf	tblptru,c
  2043  001370  0E07               	movlw	(high __ramtop+-1)
  2044  001372  64F7               	cpfsgt	tblptrh,c
  2045  001374  D003               	bra	u1877
  2046  001376  0008               	tblrd		*
  2047  001378  50F5               	movf	tablat,w,c
  2048  00137A  D005               	bra	u1870
  2049  00137C                     u1877:
  2050  00137C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2051  001380  CFF7 FFEA          	movff	tblptrh,fsr0h
  2052  001384  50EF               	movf	indf0,w,c
  2053  001386                     u1870:
  2054  001386  0900               	iorlw	0
  2055  001388  A4D8               	btfss	status,2,c
  2056  00138A  C0B5  F0B4         	movff	putSTRINGU1@cont,putSTRINGU1@last
  2057  00138E  0100               	movlb	0	; () banked
  2058  001390  2BB5               	incf	putSTRINGU1@cont& (0+255),f,b
  2059  001392                     l2424:
  2060                           
  2061                           ; BSR set to: 0
  2062  001392  0100               	movlb	0	; () banked
  2063  001394  51B5               	movf	putSTRINGU1@cont& (0+255),w,b
  2064  001396  0100               	movlb	0	; () banked
  2065  001398  6FB2               	movwf	??_putSTRINGU1& (0+255),b
  2066  00139A  6BB3               	clrf	(??_putSTRINGU1+1)& (0+255),b
  2067  00139C  0100               	movlb	0	; () banked
  2068  00139E  51B0               	movf	putSTRINGU1@total& (0+255),w,b
  2069  0013A0  0100               	movlb	0	; () banked
  2070  0013A2  5DB2               	subwf	??_putSTRINGU1& (0+255),w,b
  2071  0013A4  0100               	movlb	0	; () banked
  2072  0013A6  51B1               	movf	(putSTRINGU1@total+1)& (0+255),w,b
  2073  0013A8  0100               	movlb	0	; () banked
  2074  0013AA  59B3               	subwfb	(??_putSTRINGU1+1)& (0+255),w,b
  2075  0013AC  A0D8               	btfss	status,0,c
  2076  0013AE  D7CC               	goto	l2418
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;UART1.c: 23: }
  2080                           ;UART1.c: 25: for (cont=0;cont<=last;cont++){
  2081                           
  2082                           ; BSR set to: 0
  2083  0013B0  0E00               	movlw	0
  2084  0013B2  0100               	movlb	0	; () banked
  2085  0013B4  6FB5               	movwf	putSTRINGU1@cont& (0+255),b
  2086  0013B6  D019               	goto	l2434
  2087  0013B8                     l2428:
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;UART1.c: 26: putcTxU1(*dato++);
  2091  0013B8  0100               	movlb	0	; () banked
  2092  0013BA  C0AE  FFF6         	movff	putSTRINGU1@dato,tblptrl
  2093  0013BE  0100               	movlb	0	; () banked
  2094  0013C0  C0AF  FFF7         	movff	putSTRINGU1@dato+1,tblptrh
  2095  0013C4  6AF8               	clrf	tblptru,c
  2096  0013C6  0E07               	movlw	(high __ramtop+-1)
  2097  0013C8  64F7               	cpfsgt	tblptrh,c
  2098  0013CA  D003               	bra	u1907
  2099  0013CC  0008               	tblrd		*
  2100  0013CE  50F5               	movf	tablat,w,c
  2101  0013D0  D005               	bra	u1900
  2102  0013D2                     u1907:
  2103  0013D2  CFF6 FFE9          	movff	tblptrl,fsr0l
  2104  0013D6  CFF7 FFEA          	movff	tblptrh,fsr0h
  2105  0013DA  50EF               	movf	indf0,w,c
  2106  0013DC                     u1900:
  2107  0013DC  ECF6  F00E         	call	_putcTxU1
  2108  0013E0  0100               	movlb	0	; () banked
  2109  0013E2  4BAE               	infsnz	putSTRINGU1@dato& (0+255),f,b
  2110  0013E4  2BAF               	incf	(putSTRINGU1@dato+1)& (0+255),f,b
  2111                           
  2112                           ; BSR set to: 0
  2113  0013E6  0100               	movlb	0	; () banked
  2114  0013E8  2BB5               	incf	putSTRINGU1@cont& (0+255),f,b
  2115  0013EA                     l2434:
  2116                           
  2117                           ; BSR set to: 0
  2118  0013EA  0100               	movlb	0	; () banked
  2119  0013EC  51B5               	movf	putSTRINGU1@cont& (0+255),w,b
  2120  0013EE  0100               	movlb	0	; () banked
  2121  0013F0  5DB4               	subwf	putSTRINGU1@last& (0+255),w,b
  2122  0013F2  A0D8               	btfss	status,0,c
  2123                           
  2124                           ; BSR set to: 0
  2125                           
  2126                           ; BSR set to: 0
  2127  0013F4  0012               	return	
  2128  0013F6  D7E0               	goto	l2428
  2129  0013F8                     __end_of_putSTRINGU1:
  2130                           	opt stack 0
  2131                           tblptru	equ	0xFF8
  2132                           tblptrh	equ	0xFF7
  2133                           tblptrl	equ	0xFF6
  2134                           tablat	equ	0xFF5
  2135                           prodh	equ	0xFF4
  2136                           prodl	equ	0xFF3
  2137                           intcon	equ	0xFF2
  2138                           indf0	equ	0xFEF
  2139                           postinc0	equ	0xFEE
  2140                           fsr0h	equ	0xFEA
  2141                           fsr0l	equ	0xFE9
  2142                           wreg	equ	0xFE8
  2143                           postinc1	equ	0xFE6
  2144                           postdec1	equ	0xFE5
  2145                           fsr1l	equ	0xFE1
  2146                           postinc2	equ	0xFDE
  2147                           status	equ	0xFD8
  2148                           
  2149 ;; *************** function _putcTxU1 *****************
  2150 ;; Defined at:
  2151 ;;		line 12 in file "UART1.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  character       1    wreg     unsigned char 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  character       1    1[BANK0 ] unsigned char 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;		None               void
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2165 ;;      Params:         0       0       0       0       0       0       0       0       0
  2166 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2167 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2168 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2169 ;;Total ram usage:        1 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    6
  2172 ;; This function calls:
  2173 ;;		_WriteUSART
  2174 ;; This function is called by:
  2175 ;;		_putSTRINGU1
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text9
  2180  001DEC                     __ptext9:
  2181                           	opt stack 0
  2182  001DEC                     _putcTxU1:
  2183                           	opt stack 20
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;incstack = 0
  2187                           ;putcTxU1@character stored from wreg
  2188  001DEC  0100               	movlb	0	; () banked
  2189  001DEE  6FAD               	movwf	putcTxU1@character& (0+255),b
  2190                           
  2191                           ; BSR set to: 0
  2192                           ;UART1.c: 14: WriteUSART(character);
  2193  001DF0  0100               	movlb	0	; () banked
  2194  001DF2  51AD               	movf	putcTxU1@character& (0+255),w,b
  2195  001DF4  ECE3  F00E         	call	_WriteUSART
  2196  001DF8                     l223:
  2197  001DF8  B2AC               	btfsc	4012,1,c	;volatile
  2198  001DFA  0012               	return	
  2199  001DFC  D7FD               	goto	l223
  2200  001DFE                     __end_of_putcTxU1:
  2201                           	opt stack 0
  2202                           tblptru	equ	0xFF8
  2203                           tblptrh	equ	0xFF7
  2204                           tblptrl	equ	0xFF6
  2205                           tablat	equ	0xFF5
  2206                           prodh	equ	0xFF4
  2207                           prodl	equ	0xFF3
  2208                           intcon	equ	0xFF2
  2209                           indf0	equ	0xFEF
  2210                           postinc0	equ	0xFEE
  2211                           fsr0h	equ	0xFEA
  2212                           fsr0l	equ	0xFE9
  2213                           wreg	equ	0xFE8
  2214                           postinc1	equ	0xFE6
  2215                           postdec1	equ	0xFE5
  2216                           fsr1l	equ	0xFE1
  2217                           postinc2	equ	0xFDE
  2218                           status	equ	0xFD8
  2219                           
  2220 ;; *************** function _Pause_seg *****************
  2221 ;; Defined at:
  2222 ;;		line 18 in file "Retardos.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  x               1    wreg     unsigned char 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  x               1    5[BANK0 ] unsigned char 
  2227 ;;  i               1    6[BANK0 ] unsigned char 
  2228 ;; Return value:  Size  Location     Type
  2229 ;;		None               void
  2230 ;; Registers used:
  2231 ;;		wreg, status,2, status,0, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2237 ;;      Params:         0       0       0       0       0       0       0       0       0
  2238 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2239 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2240 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2241 ;;Total ram usage:        2 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    6
  2244 ;; This function calls:
  2245 ;;		_Pause_ms
  2246 ;; This function is called by:
  2247 ;;		_BT_Init
  2248 ;;		_Inicializa_Driveby
  2249 ;;		_EstadoBluetooth
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text10
  2254  001972                     __ptext10:
  2255                           	opt stack 0
  2256  001972                     _Pause_seg:
  2257                           	opt stack 23
  2258                           
  2259                           ;incstack = 0
  2260                           ;Pause_seg@x stored from wreg
  2261  001972  0100               	movlb	0	; () banked
  2262  001974  6FB1               	movwf	Pause_seg@x& (0+255),b
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;Retardos.c: 19: unsigned char i=0;
  2266  001976  0E00               	movlw	0
  2267  001978  0100               	movlb	0	; () banked
  2268  00197A  6FB2               	movwf	Pause_seg@i& (0+255),b
  2269                           
  2270                           ;Retardos.c: 20: for(i=0;i<=x;i++){
  2271  00197C  0E00               	movlw	0
  2272  00197E  0100               	movlb	0	; () banked
  2273  001980  6FB2               	movwf	Pause_seg@i& (0+255),b
  2274  001982  D022               	goto	l2598
  2275  001984                     l2594:
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;Retardos.c: 21: Pause_ms(250);Pause_ms(250);
  2279  001984  0E00               	movlw	0
  2280  001986  0100               	movlb	0	; () banked
  2281  001988  6FAD               	movwf	(Pause_ms@x+1)& (0+255),b
  2282  00198A  0EFA               	movlw	250
  2283  00198C  0100               	movlb	0	; () banked
  2284  00198E  6FAC               	movwf	Pause_ms@x& (0+255),b
  2285  001990  EC94  F00D         	call	_Pause_ms	;wreg free
  2286  001994  0E00               	movlw	0
  2287  001996  0100               	movlb	0	; () banked
  2288  001998  6FAD               	movwf	(Pause_ms@x+1)& (0+255),b
  2289  00199A  0EFA               	movlw	250
  2290  00199C  0100               	movlb	0	; () banked
  2291  00199E  6FAC               	movwf	Pause_ms@x& (0+255),b
  2292  0019A0  EC94  F00D         	call	_Pause_ms	;wreg free
  2293                           
  2294                           ;Retardos.c: 22: Pause_ms(250);Pause_ms(250);
  2295  0019A4  0E00               	movlw	0
  2296  0019A6  0100               	movlb	0	; () banked
  2297  0019A8  6FAD               	movwf	(Pause_ms@x+1)& (0+255),b
  2298  0019AA  0EFA               	movlw	250
  2299  0019AC  0100               	movlb	0	; () banked
  2300  0019AE  6FAC               	movwf	Pause_ms@x& (0+255),b
  2301  0019B0  EC94  F00D         	call	_Pause_ms	;wreg free
  2302  0019B4  0E00               	movlw	0
  2303  0019B6  0100               	movlb	0	; () banked
  2304  0019B8  6FAD               	movwf	(Pause_ms@x+1)& (0+255),b
  2305  0019BA  0EFA               	movlw	250
  2306  0019BC  0100               	movlb	0	; () banked
  2307  0019BE  6FAC               	movwf	Pause_ms@x& (0+255),b
  2308  0019C0  EC94  F00D         	call	_Pause_ms	;wreg free
  2309  0019C4  0100               	movlb	0	; () banked
  2310  0019C6  2BB2               	incf	Pause_seg@i& (0+255),f,b
  2311  0019C8                     l2598:
  2312                           
  2313                           ; BSR set to: 0
  2314  0019C8  0100               	movlb	0	; () banked
  2315  0019CA  51B2               	movf	Pause_seg@i& (0+255),w,b
  2316  0019CC  0100               	movlb	0	; () banked
  2317  0019CE  5DB1               	subwf	Pause_seg@x& (0+255),w,b
  2318  0019D0  A0D8               	btfss	status,0,c
  2319                           
  2320                           ; BSR set to: 0
  2321                           
  2322                           ; BSR set to: 0
  2323  0019D2  0012               	return	
  2324  0019D4  D7D7               	goto	l2594
  2325  0019D6                     __end_of_Pause_seg:
  2326                           	opt stack 0
  2327                           tblptru	equ	0xFF8
  2328                           tblptrh	equ	0xFF7
  2329                           tblptrl	equ	0xFF6
  2330                           tablat	equ	0xFF5
  2331                           prodh	equ	0xFF4
  2332                           prodl	equ	0xFF3
  2333                           intcon	equ	0xFF2
  2334                           indf0	equ	0xFEF
  2335                           postinc0	equ	0xFEE
  2336                           fsr0h	equ	0xFEA
  2337                           fsr0l	equ	0xFE9
  2338                           wreg	equ	0xFE8
  2339                           postinc1	equ	0xFE6
  2340                           postdec1	equ	0xFE5
  2341                           fsr1l	equ	0xFE1
  2342                           postinc2	equ	0xFDE
  2343                           status	equ	0xFD8
  2344                           
  2345 ;; *************** function _Pause_ms *****************
  2346 ;; Defined at:
  2347 ;;		line 11 in file "Retardos.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  x               2    0[BANK0 ] unsigned int 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  i               2    3[BANK0 ] unsigned int 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;		None               void
  2354 ;; Registers used:
  2355 ;;		wreg, status,2, status,0
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2361 ;;      Params:         0       2       0       0       0       0       0       0       0
  2362 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2363 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2364 ;;      Totals:         0       5       0       0       0       0       0       0       0
  2365 ;;Total ram usage:        5 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:    5
  2368 ;; This function calls:
  2369 ;;		Nothing
  2370 ;; This function is called by:
  2371 ;;		_Pause_seg
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text11
  2376  001B28                     __ptext11:
  2377                           	opt stack 0
  2378  001B28                     _Pause_ms:
  2379                           	opt stack 23
  2380                           
  2381                           ;Retardos.c: 12: unsigned int i=0;
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;incstack = 0
  2385  001B28  0E00               	movlw	0
  2386  001B2A  0100               	movlb	0	; () banked
  2387  001B2C  6FB0               	movwf	(Pause_ms@i+1)& (0+255),b
  2388  001B2E  0E00               	movlw	0
  2389  001B30  0100               	movlb	0	; () banked
  2390  001B32  6FAF               	movwf	Pause_ms@i& (0+255),b
  2391                           
  2392                           ;Retardos.c: 13: for(i=0;i<=x;i++){
  2393  001B34  0E00               	movlw	0
  2394  001B36  0100               	movlb	0	; () banked
  2395  001B38  6FB0               	movwf	(Pause_ms@i+1)& (0+255),b
  2396  001B3A  0E00               	movlw	0
  2397  001B3C  0100               	movlb	0	; () banked
  2398  001B3E  6FAF               	movwf	Pause_ms@i& (0+255),b
  2399  001B40  D00B               	goto	l202
  2400  001B42                     l2454:
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;Retardos.c: 14: _delay((unsigned long)((1)*(8000000/4000.0)));
  2404  001B42  0E03               	movlw	3
  2405  001B44  0100               	movlb	0	; () banked
  2406  001B46  6FAE               	movwf	??_Pause_ms& (0+255),b
  2407  001B48  0E98               	movlw	152
  2408  001B4A                     u3267:
  2409  001B4A  2EE8               	decfsz	wreg,f,c
  2410  001B4C  D7FE               	goto	u3267
  2411  001B4E  2FAE               	decfsz	??_Pause_ms& (0+255),f,b
  2412  001B50  D7FC               	goto	u3267
  2413  001B52  0100               	movlb	0	; () banked
  2414  001B54  4BAF               	infsnz	Pause_ms@i& (0+255),f,b
  2415  001B56  2BB0               	incf	(Pause_ms@i+1)& (0+255),f,b
  2416  001B58                     l202:
  2417                           
  2418                           ; BSR set to: 0
  2419  001B58  0100               	movlb	0	; () banked
  2420  001B5A  51AF               	movf	Pause_ms@i& (0+255),w,b
  2421  001B5C  0100               	movlb	0	; () banked
  2422  001B5E  5DAC               	subwf	Pause_ms@x& (0+255),w,b
  2423  001B60  0100               	movlb	0	; () banked
  2424  001B62  51B0               	movf	(Pause_ms@i+1)& (0+255),w,b
  2425  001B64  0100               	movlb	0	; () banked
  2426  001B66  59AD               	subwfb	(Pause_ms@x+1)& (0+255),w,b
  2427  001B68  A0D8               	btfss	status,0,c
  2428                           
  2429                           ; BSR set to: 0
  2430                           
  2431                           ; BSR set to: 0
  2432  001B6A  0012               	return	
  2433  001B6C  D7EA               	goto	l2454
  2434  001B6E                     __end_of_Pause_ms:
  2435                           	opt stack 0
  2436                           tblptru	equ	0xFF8
  2437                           tblptrh	equ	0xFF7
  2438                           tblptrl	equ	0xFF6
  2439                           tablat	equ	0xFF5
  2440                           prodh	equ	0xFF4
  2441                           prodl	equ	0xFF3
  2442                           intcon	equ	0xFF2
  2443                           indf0	equ	0xFEF
  2444                           postinc0	equ	0xFEE
  2445                           fsr0h	equ	0xFEA
  2446                           fsr0l	equ	0xFE9
  2447                           wreg	equ	0xFE8
  2448                           postinc1	equ	0xFE6
  2449                           postdec1	equ	0xFE5
  2450                           fsr1l	equ	0xFE1
  2451                           postinc2	equ	0xFDE
  2452                           status	equ	0xFD8
  2453                           
  2454 ;; *************** function _Comando_Tablet *****************
  2455 ;; Defined at:
  2456 ;;		line 126 in file "Funciones_Db.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  sensed          2   54[BANK0 ] int 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;		None               void
  2463 ;; Registers used:
  2464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2470 ;;      Params:         0       0       0       0       0       0       0       0       0
  2471 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2473 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2474 ;;Total ram usage:        2 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:   10
  2477 ;; This function calls:
  2478 ;;		_PWM_DutyCycle1
  2479 ;;		_PWM_DutyCycle2
  2480 ;;		_clrBufferUSART
  2481 ;;		_getCNY70Value
  2482 ;;		_putcBluetoothInt
  2483 ;;		_putcBluetoothString
  2484 ;; This function is called by:
  2485 ;;		_main
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text12
  2490  001828                     __ptext12:
  2491                           	opt stack 0
  2492  001828                     _Comando_Tablet:
  2493                           	opt stack 20
  2494                           
  2495                           ;Funciones_Db.c: 128: int sensed=0;
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;incstack = 0
  2499  001828  0E00               	movlw	0
  2500  00182A  0100               	movlb	0	; () banked
  2501  00182C  6FE3               	movwf	(Comando_Tablet@sensed+1)& (0+255),b
  2502  00182E  0E00               	movlw	0
  2503  001830  0100               	movlb	0	; () banked
  2504  001832  6FE2               	movwf	Comando_Tablet@sensed& (0+255),b
  2505                           
  2506                           ;Funciones_Db.c: 129: switch (BluetoothDato[1]) {
  2507  001834  D020               	goto	l3178
  2508  001836                     l3168:
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;Funciones_Db.c: 143: sensed = getCNY70Value();
  2512  001836  ECFA  F006         	call	_getCNY70Value	;wreg free
  2513  00183A  0100               	movlb	0	; () banked
  2514  00183C  C0DF  F0E2         	movff	?_getCNY70Value,Comando_Tablet@sensed
  2515  001840  0100               	movlb	0	; () banked
  2516  001842  C0E0  F0E3         	movff	?_getCNY70Value+1,Comando_Tablet@sensed+1
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;Funciones_Db.c: 145: putcBluetoothInt(sensed);
  2520  001846  C0E2  F0CA         	movff	Comando_Tablet@sensed,putcBluetoothInt@a
  2521  00184A  C0E3  F0CB         	movff	Comando_Tablet@sensed+1,putcBluetoothInt@a+1
  2522  00184E  ECD9  F00A         	call	_putcBluetoothInt	;wreg free
  2523                           
  2524                           ;Funciones_Db.c: 146: putcBluetoothString("\n");
  2525  001852  0E08               	movlw	high (STR_2+13)
  2526  001854  0100               	movlb	0	; () banked
  2527  001856  6FB4               	movwf	(putcBluetoothString@a+1)& (0+255),b
  2528  001858  0E18               	movlw	low (STR_2+13)
  2529  00185A  0100               	movlb	0	; () banked
  2530  00185C  6FB3               	movwf	putcBluetoothString@a& (0+255),b
  2531  00185E  EC95  F00A         	call	_putcBluetoothString	;wreg free
  2532                           
  2533                           ;Funciones_Db.c: 147: break;
  2534  001862  D01A               	goto	l3180
  2535  001864                     l3174:
  2536                           
  2537                           ;Funciones_Db.c: 153: PWM_DutyCycle1(BluetoothDato[3]);
  2538  001864  0100               	movlb	0	; () banked
  2539  001866  5168               	movf	(_BluetoothDato+3)& (0+255),w,b
  2540  001868  EC9A  F00B         	call	_PWM_DutyCycle1
  2541                           
  2542                           ;Funciones_Db.c: 154: PWM_DutyCycle2(BluetoothDato[4]);
  2543  00186C  0100               	movlb	0	; () banked
  2544  00186E  5169               	movf	(_BluetoothDato+4)& (0+255),w,b
  2545  001870  EC5C  F00B         	call	_PWM_DutyCycle2
  2546                           
  2547                           ;Funciones_Db.c: 155: break;
  2548  001874  D011               	goto	l3180
  2549  001876                     l3178:
  2550  001876  0100               	movlb	0	; () banked
  2551  001878  5166               	movf	(_BluetoothDato+1)& (0+255),w,b
  2552                           
  2553                           ; Switch size 1, requested type "space"
  2554                           ; Number of cases is 5, Range of values is 1 to 5
  2555                           ; switch strategies available:
  2556                           ; Name         Instructions Cycles
  2557                           ; simple_byte           16     9 (average)
  2558                           ;	Chosen strategy is simple_byte
  2559  00187A  0A01               	xorlw	1	; case 1
  2560  00187C  B4D8               	btfsc	status,2,c
  2561  00187E  D00C               	goto	l3180
  2562  001880  0A03               	xorlw	3	; case 2
  2563  001882  B4D8               	btfsc	status,2,c
  2564  001884  D009               	goto	l3180
  2565  001886  0A01               	xorlw	1	; case 3
  2566  001888  B4D8               	btfsc	status,2,c
  2567  00188A  D006               	goto	l3180
  2568  00188C  0A07               	xorlw	7	; case 4
  2569  00188E  B4D8               	btfsc	status,2,c
  2570  001890  D7D2               	goto	l3168
  2571  001892  0A01               	xorlw	1	; case 5
  2572  001894  B4D8               	btfsc	status,2,c
  2573  001896  D7E6               	goto	l3174
  2574  001898                     l3180:
  2575                           
  2576                           ;Funciones_Db.c: 160: clrBufferUSART();
  2577  001898  ECD9  F00D         	call	_clrBufferUSART	;wreg free
  2578                           
  2579                           ;Funciones_Db.c: 161: return;
  2580  00189C  0012               	return	
  2581  00189E                     __end_of_Comando_Tablet:
  2582                           	opt stack 0
  2583                           tblptru	equ	0xFF8
  2584                           tblptrh	equ	0xFF7
  2585                           tblptrl	equ	0xFF6
  2586                           tablat	equ	0xFF5
  2587                           prodh	equ	0xFF4
  2588                           prodl	equ	0xFF3
  2589                           intcon	equ	0xFF2
  2590                           indf0	equ	0xFEF
  2591                           postinc0	equ	0xFEE
  2592                           fsr0h	equ	0xFEA
  2593                           fsr0l	equ	0xFE9
  2594                           wreg	equ	0xFE8
  2595                           postinc1	equ	0xFE6
  2596                           postdec1	equ	0xFE5
  2597                           fsr1l	equ	0xFE1
  2598                           postinc2	equ	0xFDE
  2599                           status	equ	0xFD8
  2600                           
  2601 ;; *************** function _putcBluetoothString *****************
  2602 ;; Defined at:
  2603 ;;		line 90 in file "Bluetooth.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  a               2    7[BANK0 ] PTR unsigned char 
  2606 ;;		 -> STR_10(2), 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;  i               2   11[BANK0 ] int 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;		None               void
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2618 ;;      Params:         0       2       0       0       0       0       0       0       0
  2619 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2620 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2621 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2622 ;;Total ram usage:        6 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    7
  2625 ;; This function calls:
  2626 ;;		_UART1_Init
  2627 ;;		_WriteUSART
  2628 ;; This function is called by:
  2629 ;;		_Comando_Tablet
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text13
  2634  00152A                     __ptext13:
  2635                           	opt stack 0
  2636  00152A                     _putcBluetoothString:
  2637                           	opt stack 22
  2638                           
  2639                           ;Bluetooth.c: 92: int i;
  2640                           ;Bluetooth.c: 93: UART1_Init(51);
  2641                           
  2642                           ;incstack = 0
  2643  00152A  0E33               	movlw	51
  2644  00152C  ECA2  F00E         	call	_UART1_Init
  2645                           
  2646                           ;Bluetooth.c: 95: for (i = 0; a[i] != '\0'; i++){
  2647  001530  0E00               	movlw	0
  2648  001532  0100               	movlb	0	; () banked
  2649  001534  6FB8               	movwf	(putcBluetoothString@i+1)& (0+255),b
  2650  001536  0E00               	movlw	0
  2651  001538  0100               	movlb	0	; () banked
  2652  00153A  6FB7               	movwf	putcBluetoothString@i& (0+255),b
  2653  00153C  D01C               	goto	l2864
  2654  00153E                     l2860:
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;Bluetooth.c: 96: WriteUSART(a[i]);
  2658  00153E  0100               	movlb	0	; () banked
  2659  001540  C0B3  F0B5         	movff	putcBluetoothString@a,??_putcBluetoothString
  2660  001544  0100               	movlb	0	; () banked
  2661  001546  C0B4  F0B6         	movff	putcBluetoothString@a+1,??_putcBluetoothString+1
  2662  00154A  0100               	movlb	0	; () banked
  2663  00154C  51B7               	movf	putcBluetoothString@i& (0+255),w,b
  2664  00154E  0100               	movlb	0	; () banked
  2665  001550  27B5               	addwf	??_putcBluetoothString& (0+255),f,b
  2666  001552  0100               	movlb	0	; () banked
  2667  001554  51B8               	movf	(putcBluetoothString@i+1)& (0+255),w,b
  2668  001556  0100               	movlb	0	; () banked
  2669  001558  23B6               	addwfc	(??_putcBluetoothString+1)& (0+255),f,b
  2670  00155A  C0B5  FFF6         	movff	??_putcBluetoothString,tblptrl
  2671  00155E  C0B6  FFF7         	movff	??_putcBluetoothString+1,tblptrh
  2672  001562                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2673  001562  6AF8               	clrf	tblptru,c
  2674  001564                     	endif
  2675  001564                     	if	0	;tblptru may be non-zero
  2676  001564                     	endif
  2677  001564  0008               	tblrd		*
  2678  001566  50F5               	movf	tablat,w,c
  2679  001568  ECE3  F00E         	call	_WriteUSART
  2680  00156C                     l59:
  2681  00156C  A2AC               	btfss	4012,1,c	;volatile
  2682  00156E  D7FE               	goto	l59
  2683  001570  0100               	movlb	0	; () banked
  2684  001572  4BB7               	infsnz	putcBluetoothString@i& (0+255),f,b
  2685  001574  2BB8               	incf	(putcBluetoothString@i+1)& (0+255),f,b
  2686  001576                     l2864:
  2687                           
  2688                           ; BSR set to: 0
  2689  001576  0100               	movlb	0	; () banked
  2690  001578  C0B3  F0B5         	movff	putcBluetoothString@a,??_putcBluetoothString
  2691  00157C  0100               	movlb	0	; () banked
  2692  00157E  C0B4  F0B6         	movff	putcBluetoothString@a+1,??_putcBluetoothString+1
  2693  001582  0100               	movlb	0	; () banked
  2694  001584  51B7               	movf	putcBluetoothString@i& (0+255),w,b
  2695  001586  0100               	movlb	0	; () banked
  2696  001588  27B5               	addwf	??_putcBluetoothString& (0+255),f,b
  2697  00158A  0100               	movlb	0	; () banked
  2698  00158C  51B8               	movf	(putcBluetoothString@i+1)& (0+255),w,b
  2699  00158E  0100               	movlb	0	; () banked
  2700  001590  23B6               	addwfc	(??_putcBluetoothString+1)& (0+255),f,b
  2701  001592  C0B5  FFF6         	movff	??_putcBluetoothString,tblptrl
  2702  001596  C0B6  FFF7         	movff	??_putcBluetoothString+1,tblptrh
  2703  00159A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2704  00159A  6AF8               	clrf	tblptru,c
  2705  00159C                     	endif
  2706  00159C                     	if	0	;tblptru may be non-zero
  2707  00159C                     	endif
  2708  00159C  0008               	tblrd		*
  2709  00159E  50F5               	movf	tablat,w,c
  2710  0015A0  0900               	iorlw	0
  2711  0015A2  A4D8               	btfss	status,2,c
  2712  0015A4  D7CC               	goto	l2860
  2713                           
  2714                           ; BSR set to: 0
  2715                           ;Bluetooth.c: 98: }
  2716                           ;Bluetooth.c: 99: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  2717                           
  2718                           ; BSR set to: 0
  2719  0015A6  0E4F               	movlw	79
  2720  0015A8  16AB               	andwf	4011,f,c	;volatile
  2721                           
  2722                           ; BSR set to: 0
  2723  0015AA  9AAC               	bcf	4012,5,c	;volatile
  2724  0015AC  0ECF               	movlw	207
  2725  0015AE  169D               	andwf	3997,f,c	;volatile
  2726                           
  2727                           ; BSR set to: 0
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;Bluetooth.c: 100: return;
  2731  0015B0  0012               	return	
  2732  0015B2                     __end_of_putcBluetoothString:
  2733                           	opt stack 0
  2734                           tblptru	equ	0xFF8
  2735                           tblptrh	equ	0xFF7
  2736                           tblptrl	equ	0xFF6
  2737                           tablat	equ	0xFF5
  2738                           prodh	equ	0xFF4
  2739                           prodl	equ	0xFF3
  2740                           intcon	equ	0xFF2
  2741                           indf0	equ	0xFEF
  2742                           postinc0	equ	0xFEE
  2743                           fsr0h	equ	0xFEA
  2744                           fsr0l	equ	0xFE9
  2745                           wreg	equ	0xFE8
  2746                           postinc1	equ	0xFE6
  2747                           postdec1	equ	0xFE5
  2748                           fsr1l	equ	0xFE1
  2749                           postinc2	equ	0xFDE
  2750                           status	equ	0xFD8
  2751                           
  2752 ;; *************** function _putcBluetoothInt *****************
  2753 ;; Defined at:
  2754 ;;		line 102 in file "Bluetooth.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;  a               2   30[BANK0 ] int 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  s              20   32[BANK0 ] unsigned char [20]
  2759 ;;  i               2   52[BANK0 ] int 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;		None               void
  2762 ;; Registers used:
  2763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2769 ;;      Params:         0       2       0       0       0       0       0       0       0
  2770 ;;      Locals:         0      22       0       0       0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2772 ;;      Totals:         0      24       0       0       0       0       0       0       0
  2773 ;;Total ram usage:       24 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    7
  2776 ;; This function calls:
  2777 ;;		_UART1_Init
  2778 ;;		_WriteUSART
  2779 ;;		_sprintf
  2780 ;; This function is called by:
  2781 ;;		_Comando_Tablet
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text14
  2786  0015B2                     __ptext14:
  2787                           	opt stack 0
  2788  0015B2                     _putcBluetoothInt:
  2789                           	opt stack 22
  2790                           
  2791                           ;Bluetooth.c: 104: int i;
  2792                           ;Bluetooth.c: 105: unsigned char s[20];
  2793                           ;Bluetooth.c: 106: UART1_Init(51);
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;incstack = 0
  2797  0015B2  0E33               	movlw	51
  2798  0015B4  ECA2  F00E         	call	_UART1_Init
  2799                           
  2800                           ;Bluetooth.c: 108: sprintf(s,"%d",a);
  2801  0015B8  0100               	movlb	0	; () banked
  2802  0015BA  0E00               	movlw	high putcBluetoothInt@s
  2803  0015BC  0100               	movlb	0	; () banked
  2804  0015BE  6FB9               	movwf	(sprintf@sp+1)& (0+255),b
  2805  0015C0  0100               	movlb	0	; () banked
  2806  0015C2  0ECC               	movlw	low putcBluetoothInt@s
  2807  0015C4  0100               	movlb	0	; () banked
  2808  0015C6  6FB8               	movwf	sprintf@sp& (0+255),b
  2809  0015C8  0E08               	movlw	high STR_5
  2810  0015CA  0100               	movlb	0	; () banked
  2811  0015CC  6FBB               	movwf	(sprintf@f+1)& (0+255),b
  2812  0015CE  0E67               	movlw	low STR_5
  2813  0015D0  0100               	movlb	0	; () banked
  2814  0015D2  6FBA               	movwf	sprintf@f& (0+255),b
  2815  0015D4  C0CA  F0BC         	movff	putcBluetoothInt@a,?_sprintf+4
  2816  0015D8  C0CB  F0BD         	movff	putcBluetoothInt@a+1,?_sprintf+5
  2817  0015DC  EC36  F004         	call	_sprintf	;wreg free
  2818                           
  2819                           ;Bluetooth.c: 109: for (i = 0; s[i] != '\0'; i++){
  2820  0015E0  0E00               	movlw	0
  2821  0015E2  0100               	movlb	0	; () banked
  2822  0015E4  6FE1               	movwf	(putcBluetoothInt@i+1)& (0+255),b
  2823  0015E6  0E00               	movlw	0
  2824  0015E8  0100               	movlb	0	; () banked
  2825  0015EA  6FE0               	movwf	putcBluetoothInt@i& (0+255),b
  2826  0015EC  D012               	goto	l2882
  2827  0015EE                     l2878:
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;Bluetooth.c: 110: WriteUSART(s[i]);
  2831  0015EE  0100               	movlb	0	; () banked
  2832  0015F0  0ECC               	movlw	low putcBluetoothInt@s
  2833  0015F2  0100               	movlb	0	; () banked
  2834  0015F4  25E0               	addwf	putcBluetoothInt@i& (0+255),w,b
  2835  0015F6  6ED9               	movwf	fsr2l,c
  2836  0015F8  0100               	movlb	0	; () banked
  2837  0015FA  0E00               	movlw	high putcBluetoothInt@s
  2838  0015FC  0100               	movlb	0	; () banked
  2839  0015FE  21E1               	addwfc	(putcBluetoothInt@i+1)& (0+255),w,b
  2840  001600  6EDA               	movwf	fsr2h,c
  2841  001602  50DF               	movf	indf2,w,c
  2842  001604  ECE3  F00E         	call	_WriteUSART
  2843  001608                     l68:
  2844  001608  A2AC               	btfss	4012,1,c	;volatile
  2845  00160A  D7FE               	goto	l68
  2846  00160C  0100               	movlb	0	; () banked
  2847  00160E  4BE0               	infsnz	putcBluetoothInt@i& (0+255),f,b
  2848  001610  2BE1               	incf	(putcBluetoothInt@i+1)& (0+255),f,b
  2849  001612                     l2882:
  2850                           
  2851                           ; BSR set to: 0
  2852  001612  0100               	movlb	0	; () banked
  2853  001614  0ECC               	movlw	low putcBluetoothInt@s
  2854  001616  0100               	movlb	0	; () banked
  2855  001618  25E0               	addwf	putcBluetoothInt@i& (0+255),w,b
  2856  00161A  6ED9               	movwf	fsr2l,c
  2857  00161C  0100               	movlb	0	; () banked
  2858  00161E  0E00               	movlw	high putcBluetoothInt@s
  2859  001620  0100               	movlb	0	; () banked
  2860  001622  21E1               	addwfc	(putcBluetoothInt@i+1)& (0+255),w,b
  2861  001624  6EDA               	movwf	fsr2h,c
  2862  001626  50DF               	movf	indf2,w,c
  2863  001628  A4D8               	btfss	status,2,c
  2864  00162A  D7E1               	goto	l2878
  2865                           
  2866                           ; BSR set to: 0
  2867                           ;Bluetooth.c: 112: }
  2868                           ;Bluetooth.c: 113: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  2869                           
  2870                           ; BSR set to: 0
  2871  00162C  0E4F               	movlw	79
  2872  00162E  16AB               	andwf	4011,f,c	;volatile
  2873                           
  2874                           ; BSR set to: 0
  2875  001630  9AAC               	bcf	4012,5,c	;volatile
  2876  001632  0ECF               	movlw	207
  2877  001634  169D               	andwf	3997,f,c	;volatile
  2878                           
  2879                           ; BSR set to: 0
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;Bluetooth.c: 114: return;
  2883  001636  0012               	return	
  2884  001638                     __end_of_putcBluetoothInt:
  2885                           	opt stack 0
  2886                           tblptru	equ	0xFF8
  2887                           tblptrh	equ	0xFF7
  2888                           tblptrl	equ	0xFF6
  2889                           tablat	equ	0xFF5
  2890                           prodh	equ	0xFF4
  2891                           prodl	equ	0xFF3
  2892                           intcon	equ	0xFF2
  2893                           indf0	equ	0xFEF
  2894                           postinc0	equ	0xFEE
  2895                           fsr0h	equ	0xFEA
  2896                           fsr0l	equ	0xFE9
  2897                           wreg	equ	0xFE8
  2898                           postinc1	equ	0xFE6
  2899                           postdec1	equ	0xFE5
  2900                           fsr1l	equ	0xFE1
  2901                           indf2	equ	0xFDF
  2902                           postinc2	equ	0xFDE
  2903                           fsr2h	equ	0xFDA
  2904                           fsr2l	equ	0xFD9
  2905                           status	equ	0xFD8
  2906                           
  2907 ;; *************** function _sprintf *****************
  2908 ;; Defined at:
  2909 ;;		line 492 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  2912 ;;		 -> putcBluetoothInt@s(20), 
  2913 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  2914 ;;		 -> STR_5(3), 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  _val            5   24[BANK0 ] struct .
  2917 ;;  ap              2   20[BANK0 ] PTR void [1]
  2918 ;;		 -> ?_sprintf(2), 
  2919 ;;  c               1   29[BANK0 ] char 
  2920 ;;  prec            1   23[BANK0 ] char 
  2921 ;;  flag            1   22[BANK0 ] unsigned char 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  2   12[BANK0 ] int 
  2924 ;; Registers used:
  2925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2931 ;;      Params:         0       6       0       0       0       0       0       0       0
  2932 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2933 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2934 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2935 ;;Total ram usage:       18 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:    6
  2938 ;; This function calls:
  2939 ;;		___lwdiv
  2940 ;;		___lwmod
  2941 ;; This function is called by:
  2942 ;;		_putcBluetoothInt
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text15
  2947  00086C                     __ptext15:
  2948                           	opt stack 0
  2949  00086C                     _sprintf:
  2950                           	opt stack 22
  2951                           
  2952                           ;doprnt.c: 494: va_list ap;
  2953                           ;doprnt.c: 499: signed char c;
  2954                           ;doprnt.c: 506: signed char prec;
  2955                           ;doprnt.c: 508: unsigned char flag;
  2956                           ;doprnt.c: 527: union {
  2957                           ;doprnt.c: 528: unsigned int _val;
  2958                           ;doprnt.c: 529: struct {
  2959                           ;doprnt.c: 530: const char * _cp;
  2960                           ;doprnt.c: 531: unsigned _len;
  2961                           ;doprnt.c: 532: } _str;
  2962                           ;doprnt.c: 533: } _val;
  2963                           ;doprnt.c: 542: *ap = __va_start();
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;incstack = 0
  2967  00086C  0100               	movlb	0	; () banked
  2968  00086E  0E00               	movlw	high (?_sprintf+4)
  2969  000870  0100               	movlb	0	; () banked
  2970  000872  6FC1               	movwf	(sprintf@ap+1)& (0+255),b
  2971  000874  0100               	movlb	0	; () banked
  2972  000876  0EBC               	movlw	low (?_sprintf+4)
  2973  000878  0100               	movlb	0	; () banked
  2974  00087A  6FC0               	movwf	sprintf@ap& (0+255),b
  2975                           
  2976                           ;doprnt.c: 545: while(c = *f++) {
  2977  00087C  D0C7               	goto	l2658
  2978  00087E                     l2606:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;doprnt.c: 547: if(c != '%')
  2982  00087E  0100               	movlb	0	; () banked
  2983  000880  51C9               	movf	sprintf@c& (0+255),w,b
  2984  000882  0A25               	xorlw	37
  2985  000884  B4D8               	btfsc	status,2,c
  2986  000886  D00B               	goto	l2612
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;doprnt.c: 549: {
  2990                           ;doprnt.c: 550: ((*sp++ = (c)));
  2991  000888  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  2992  00088C  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  2993  000890  0100               	movlb	0	; () banked
  2994  000892  C0C9  FFDF         	movff	sprintf@c,indf2
  2995                           
  2996                           ; BSR set to: 0
  2997  000896  0100               	movlb	0	; () banked
  2998  000898  4BB8               	infsnz	sprintf@sp& (0+255),f,b
  2999  00089A  2BB9               	incf	(sprintf@sp+1)& (0+255),f,b
  3000                           
  3001                           ;doprnt.c: 551: continue;
  3002  00089C  D0B7               	goto	l2658
  3003  00089E                     l2612:
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;doprnt.c: 552: }
  3007                           ;doprnt.c: 557: flag = 0;
  3008  00089E  0E00               	movlw	0
  3009  0008A0  0100               	movlb	0	; () banked
  3010  0008A2  6FC2               	movwf	sprintf@flag& (0+255),b
  3011                           
  3012                           ; BSR set to: 0
  3013                           
  3014                           ; BSR set to: 0
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;doprnt.c: 831: }
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;doprnt.c: 822: continue;
  3021                           
  3022                           ;doprnt.c: 811: default:
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;doprnt.c: 707: case 'i':
  3026                           ;doprnt.c: 708: break;
  3027                           
  3028                           ; BSR set to: 0
  3029                           
  3030                           ;doprnt.c: 706: case 'd':
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;doprnt.c: 647: goto alldone;
  3034                           
  3035                           ;doprnt.c: 646: case 0:
  3036                           
  3037                           ;doprnt.c: 644: switch(c = *f++) {
  3038  0008A4  0100               	movlb	0	; () banked
  3039  0008A6  C0BA  FFF6         	movff	sprintf@f,tblptrl
  3040  0008AA  0100               	movlb	0	; () banked
  3041  0008AC  C0BB  FFF7         	movff	sprintf@f+1,tblptrh
  3042  0008B0  0100               	movlb	0	; () banked
  3043  0008B2  4BBA               	infsnz	sprintf@f& (0+255),f,b
  3044  0008B4  2BBB               	incf	(sprintf@f+1)& (0+255),f,b
  3045  0008B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3046  0008B6  6AF8               	clrf	tblptru,c
  3047  0008B8                     	endif
  3048  0008B8                     	if	0	;tblptru may be non-zero
  3049  0008B8                     	endif
  3050  0008B8  0008               	tblrd		*
  3051  0008BA  0100               	movlb	0	; () banked
  3052  0008BC  CFF5 F0C9          	movff	tablat,sprintf@c
  3053  0008C0  0100               	movlb	0	; () banked
  3054  0008C2  51C9               	movf	sprintf@c& (0+255),w,b
  3055                           
  3056                           ; Switch size 1, requested type "space"
  3057                           ; Number of cases is 3, Range of values is 0 to 105
  3058                           ; switch strategies available:
  3059                           ; Name         Instructions Cycles
  3060                           ; simple_byte           10     6 (average)
  3061                           ;	Chosen strategy is simple_byte
  3062  0008C4  0A00               	xorlw	0	; case 0
  3063  0008C6  B4D8               	btfsc	status,2,c
  3064  0008C8  D0B2               	goto	l2660
  3065  0008CA  0A64               	xorlw	100	; case 100
  3066  0008CC  B4D8               	btfsc	status,2,c
  3067  0008CE  D003               	goto	l2618
  3068  0008D0  0A0D               	xorlw	13	; case 105
  3069  0008D2  A4D8               	btfss	status,2,c
  3070  0008D4  D09B               	goto	l2658
  3071  0008D6                     l2618:
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;doprnt.c: 1262: {
  3075                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3076  0008D6  C0C0  FFD9         	movff	sprintf@ap,fsr2l
  3077  0008DA  C0C1  FFDA         	movff	sprintf@ap+1,fsr2h
  3078  0008DE  0100               	movlb	0	; () banked
  3079  0008E0  CFDE F0C4          	movff	postinc2,sprintf@_val
  3080  0008E4  0100               	movlb	0	; () banked
  3081  0008E6  CFDD F0C5          	movff	postdec2,sprintf@_val+1
  3082                           
  3083                           ; BSR set to: 0
  3084  0008EA  0E02               	movlw	2
  3085  0008EC  0100               	movlb	0	; () banked
  3086  0008EE  27C0               	addwf	sprintf@ap& (0+255),f,b
  3087  0008F0  0E00               	movlw	0
  3088  0008F2  0100               	movlb	0	; () banked
  3089  0008F4  23C1               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  3093  0008F6  0100               	movlb	0	; () banked
  3094  0008F8  51C5               	movf	(sprintf@_val+1)& (0+255),w,b
  3095  0008FA  0A80               	xorlw	128
  3096  0008FC  6EF3               	movwf	prodl,c
  3097  0008FE  0E80               	movlw	128
  3098  000900  5CF3               	subwf	prodl,w,c
  3099  000902  0E00               	movlw	0
  3100  000904  B4D8               	btfsc	status,2,c
  3101  000906  5DC4               	subwf	sprintf@_val& (0+255),w,b
  3102  000908  B0D8               	btfsc	status,0,c
  3103  00090A  D009               	goto	l2628
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;doprnt.c: 1271: flag |= 0x03;
  3107  00090C  0E03               	movlw	3
  3108  00090E  0100               	movlb	0	; () banked
  3109  000910  13C2               	iorwf	sprintf@flag& (0+255),f,b
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;doprnt.c: 1272: _val._val = -_val._val;
  3113  000912  0100               	movlb	0	; () banked
  3114  000914  6DC4               	negf	sprintf@_val& (0+255),b
  3115  000916  0100               	movlb	0	; () banked
  3116  000918  1FC5               	comf	(sprintf@_val+1)& (0+255),f,b
  3117  00091A  B0D8               	btfsc	status,0,c
  3118  00091C  2BC5               	incf	(sprintf@_val+1)& (0+255),f,b
  3119  00091E                     l2628:
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;doprnt.c: 1273: }
  3123                           ;doprnt.c: 1275: }
  3124                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3125  00091E  0E01               	movlw	1
  3126  000920  0100               	movlb	0	; () banked
  3127  000922  6FC9               	movwf	sprintf@c& (0+255),b
  3128  000924                     
  3129                           ; BSR set to: 0
  3130  000924  0100               	movlb	0	; () banked
  3131  000926  51C9               	movf	sprintf@c& (0+255),w,b
  3132  000928  0A05               	xorlw	5
  3133  00092A  B4D8               	btfsc	status,2,c
  3134  00092C  D01F               	goto	l2642
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  3138                           
  3139                           ; BSR set to: 0
  3140                           
  3141                           ; BSR set to: 0
  3142  00092E  0100               	movlb	0	; () banked
  3143  000930  51C9               	movf	sprintf@c& (0+255),w,b
  3144  000932  0D02               	mullw	2
  3145  000934  0E01               	movlw	low _dpowers
  3146  000936  24F3               	addwf	prodl,w,c
  3147  000938  6EF6               	movwf	tblptrl,c
  3148  00093A  0E08               	movlw	high _dpowers
  3149  00093C  20F4               	addwfc	prodh,w,c
  3150  00093E  6EF7               	movwf	tblptrh,c
  3151  000940                     	if	1	;There are 3 active tblptr bytes
  3152  000940  6AF8               	clrf	tblptru,c
  3153  000942  0E00               	movlw	low (__mediumconst shr (0+16))
  3154  000944  22F8               	addwfc	tblptru,f,c
  3155  000946                     	endif
  3156  000946  0009               	tblrd		*+
  3157  000948  CFF5 F0BE          	movff	tablat,??_sprintf
  3158  00094C  0009               	tblrd		*+
  3159  00094E  CFF5 F0BF          	movff	tablat,??_sprintf+1
  3160  000952  0100               	movlb	0	; () banked
  3161  000954  51BE               	movf	??_sprintf& (0+255),w,b
  3162  000956  0100               	movlb	0	; () banked
  3163  000958  5DC4               	subwf	sprintf@_val& (0+255),w,b
  3164  00095A  0100               	movlb	0	; () banked
  3165  00095C  51BF               	movf	(??_sprintf+1)& (0+255),w,b
  3166  00095E  0100               	movlb	0	; () banked
  3167  000960  59C5               	subwfb	(sprintf@_val+1)& (0+255),w,b
  3168  000962  A0D8               	btfss	status,0,c
  3169  000964  D003               	goto	l2642
  3170                           
  3171                           ; BSR set to: 0
  3172                           
  3173                           ; BSR set to: 0
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;doprnt.c: 1316: break;
  3177  000966  0100               	movlb	0	; () banked
  3178  000968  2BC9               	incf	sprintf@c& (0+255),f,b
  3179  00096A  D7DC               	goto	L2
  3180  00096C                     l2642:
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;doprnt.c: 1431: {
  3184                           ;doprnt.c: 1447: if(flag & 0x03)
  3185  00096C  C0C2  F0BE         	movff	sprintf@flag,??_sprintf
  3186  000970  0E03               	movlw	3
  3187  000972  0100               	movlb	0	; () banked
  3188  000974  17BE               	andwf	??_sprintf& (0+255),f,b
  3189  000976  B4D8               	btfsc	status,2,c
  3190  000978  D009               	goto	l2648
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  3194  00097A  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  3195  00097E  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  3196  000982  0E2D               	movlw	45
  3197  000984  6EDF               	movwf	indf2,c
  3198                           
  3199                           ; BSR set to: 0
  3200  000986  0100               	movlb	0	; () banked
  3201  000988  4BB8               	infsnz	sprintf@sp& (0+255),f,b
  3202  00098A  2BB9               	incf	(sprintf@sp+1)& (0+255),f,b
  3203  00098C                     l2648:
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;doprnt.c: 1478: }
  3207                           ;doprnt.c: 1481: prec = c;
  3208  00098C  C0C9  F0C3         	movff	sprintf@c,sprintf@prec
  3209                           
  3210                           ;doprnt.c: 1483: while(prec--) {
  3211  000990  D037               	goto	l2656
  3212  000992                     l2650:
  3213                           
  3214                           ; BSR set to: 0
  3215                           ;doprnt.c: 1487: {
  3216                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  3217  000992  0100               	movlb	0	; () banked
  3218  000994  51C3               	movf	sprintf@prec& (0+255),w,b
  3219  000996  0D02               	mullw	2
  3220  000998  0E01               	movlw	low _dpowers
  3221  00099A  24F3               	addwf	prodl,w,c
  3222  00099C  6EF6               	movwf	tblptrl,c
  3223  00099E  0E08               	movlw	high _dpowers
  3224  0009A0  20F4               	addwfc	prodh,w,c
  3225  0009A2  6EF7               	movwf	tblptrh,c
  3226  0009A4                     	if	1	;There are 3 active tblptr bytes
  3227  0009A4  6AF8               	clrf	tblptru,c
  3228  0009A6  0E00               	movlw	low (__mediumconst shr (0+16))
  3229  0009A8  22F8               	addwfc	tblptru,f,c
  3230  0009AA                     	endif
  3231  0009AA  0009               	tblrd		*+
  3232  0009AC  0100               	movlb	0	; () banked
  3233  0009AE  CFF5 F0AE          	movff	tablat,___lwdiv@divisor
  3234  0009B2  000A               	tblrd		*-
  3235  0009B4  0100               	movlb	0	; () banked
  3236  0009B6  CFF5 F0AF          	movff	tablat,___lwdiv@divisor+1
  3237  0009BA  C0C4  F0AC         	movff	sprintf@_val,___lwdiv@dividend
  3238  0009BE  C0C5  F0AD         	movff	sprintf@_val+1,___lwdiv@dividend+1
  3239  0009C2  ECD8  F00B         	call	___lwdiv	;wreg free
  3240  0009C6  0100               	movlb	0	; () banked
  3241  0009C8  C0AC  F0B3         	movff	?___lwdiv,___lwmod@dividend
  3242  0009CC  0100               	movlb	0	; () banked
  3243  0009CE  C0AD  F0B4         	movff	?___lwdiv+1,___lwmod@dividend+1
  3244  0009D2  0E00               	movlw	0
  3245  0009D4  0100               	movlb	0	; () banked
  3246  0009D6  6FB6               	movwf	(___lwmod@divisor+1)& (0+255),b
  3247  0009D8  0E0A               	movlw	10
  3248  0009DA  0100               	movlb	0	; () banked
  3249  0009DC  6FB5               	movwf	___lwmod@divisor& (0+255),b
  3250  0009DE  EC1C  F00D         	call	___lwmod	;wreg free
  3251  0009E2  0100               	movlb	0	; () banked
  3252  0009E4  51B3               	movf	?___lwmod& (0+255),w,b
  3253  0009E6  0F30               	addlw	48
  3254  0009E8  0100               	movlb	0	; () banked
  3255  0009EA  6FC9               	movwf	sprintf@c& (0+255),b
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;doprnt.c: 1532: }
  3259                           ;doprnt.c: 1533: ((*sp++ = (c)));
  3260  0009EC  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  3261  0009F0  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  3262  0009F4  0100               	movlb	0	; () banked
  3263  0009F6  C0C9  FFDF         	movff	sprintf@c,indf2
  3264                           
  3265                           ; BSR set to: 0
  3266  0009FA  0100               	movlb	0	; () banked
  3267  0009FC  4BB8               	infsnz	sprintf@sp& (0+255),f,b
  3268  0009FE  2BB9               	incf	(sprintf@sp+1)& (0+255),f,b
  3269  000A00                     l2656:
  3270                           
  3271                           ; BSR set to: 0
  3272  000A00  0100               	movlb	0	; () banked
  3273  000A02  07C3               	decf	sprintf@prec& (0+255),f,b
  3274  000A04  0100               	movlb	0	; () banked
  3275  000A06  29C3               	incf	sprintf@prec& (0+255),w,b
  3276  000A08  A4D8               	btfss	status,2,c
  3277  000A0A  D7C3               	goto	l2650
  3278  000A0C                     l2658:
  3279                           
  3280                           ; BSR set to: 0
  3281  000A0C  0100               	movlb	0	; () banked
  3282  000A0E  C0BA  FFF6         	movff	sprintf@f,tblptrl
  3283  000A12  0100               	movlb	0	; () banked
  3284  000A14  C0BB  FFF7         	movff	sprintf@f+1,tblptrh
  3285  000A18  0100               	movlb	0	; () banked
  3286  000A1A  4BBA               	infsnz	sprintf@f& (0+255),f,b
  3287  000A1C  2BBB               	incf	(sprintf@f+1)& (0+255),f,b
  3288  000A1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3289  000A1E  6AF8               	clrf	tblptru,c
  3290  000A20                     	endif
  3291  000A20                     	if	0	;tblptru may be non-zero
  3292  000A20                     	endif
  3293  000A20  0008               	tblrd		*
  3294  000A22  0100               	movlb	0	; () banked
  3295  000A24  CFF5 F0C9          	movff	tablat,sprintf@c
  3296  000A28  0100               	movlb	0	; () banked
  3297  000A2A  67C9               	tstfsz	sprintf@c& (0+255),b
  3298  000A2C  D728               	goto	l2606
  3299  000A2E                     l2660:
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;doprnt.c: 1547: *sp = 0;
  3303  000A2E  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  3304  000A32  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  3305  000A36  0E00               	movlw	0
  3306  000A38  6EDF               	movwf	indf2,c
  3307                           
  3308                           ; BSR set to: 0
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;doprnt.c: 1549: return 0;
  3312                           ;	Return value of _sprintf is never used
  3313  000A3A  0012               	return	
  3314  000A3C                     __end_of_sprintf:
  3315                           	opt stack 0
  3316                           tblptru	equ	0xFF8
  3317                           tblptrh	equ	0xFF7
  3318                           tblptrl	equ	0xFF6
  3319                           tablat	equ	0xFF5
  3320                           prodh	equ	0xFF4
  3321                           prodl	equ	0xFF3
  3322                           intcon	equ	0xFF2
  3323                           indf0	equ	0xFEF
  3324                           postinc0	equ	0xFEE
  3325                           fsr0h	equ	0xFEA
  3326                           fsr0l	equ	0xFE9
  3327                           wreg	equ	0xFE8
  3328                           postinc1	equ	0xFE6
  3329                           postdec1	equ	0xFE5
  3330                           fsr1l	equ	0xFE1
  3331                           indf2	equ	0xFDF
  3332                           postinc2	equ	0xFDE
  3333                           postdec2	equ	0xFDD
  3334                           fsr2h	equ	0xFDA
  3335                           fsr2l	equ	0xFD9
  3336                           status	equ	0xFD8
  3337                           
  3338 ;; *************** function ___lwmod *****************
  3339 ;; Defined at:
  3340 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwmod.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  dividend        2    7[BANK0 ] unsigned int 
  3343 ;;  divisor         2    9[BANK0 ] unsigned int 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  counter         1   11[BANK0 ] unsigned char 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  2    7[BANK0 ] unsigned int 
  3348 ;; Registers used:
  3349 ;;		wreg, status,2, status,0
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3355 ;;      Params:         0       4       0       0       0       0       0       0       0
  3356 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3357 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3358 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3359 ;;Total ram usage:        5 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    5
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_sprintf
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text16
  3370  001A38                     __ptext16:
  3371                           	opt stack 0
  3372  001A38                     ___lwmod:
  3373                           	opt stack 22
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;incstack = 0
  3377  001A38  0100               	movlb	0	; () banked
  3378  001A3A  51B6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3379  001A3C  11B5               	iorwf	___lwmod@divisor& (0+255),w,b
  3380  001A3E  B4D8               	btfsc	status,2,c
  3381  001A40  D026               	goto	l1107
  3382                           
  3383                           ; BSR set to: 0
  3384  001A42  0E01               	movlw	1
  3385  001A44  0100               	movlb	0	; () banked
  3386  001A46  6FB7               	movwf	___lwmod@counter& (0+255),b
  3387  001A48  D006               	goto	l2546
  3388  001A4A                     l2544:
  3389                           
  3390                           ; BSR set to: 0
  3391  001A4A  0100               	movlb	0	; () banked
  3392  001A4C  90D8               	bcf	status,0,c
  3393  001A4E  37B5               	rlcf	___lwmod@divisor& (0+255),f,b
  3394  001A50  37B6               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3395  001A52  0100               	movlb	0	; () banked
  3396  001A54  2BB7               	incf	___lwmod@counter& (0+255),f,b
  3397  001A56                     l2546:
  3398                           
  3399                           ; BSR set to: 0
  3400  001A56  0100               	movlb	0	; () banked
  3401  001A58  AFB6               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3402  001A5A  D7F7               	goto	l2544
  3403  001A5C                     l2548:
  3404                           
  3405                           ; BSR set to: 0
  3406  001A5C  0100               	movlb	0	; () banked
  3407  001A5E  51B5               	movf	___lwmod@divisor& (0+255),w,b
  3408  001A60  0100               	movlb	0	; () banked
  3409  001A62  5DB3               	subwf	___lwmod@dividend& (0+255),w,b
  3410  001A64  0100               	movlb	0	; () banked
  3411  001A66  51B6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3412  001A68  0100               	movlb	0	; () banked
  3413  001A6A  59B4               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3414  001A6C  A0D8               	btfss	status,0,c
  3415  001A6E  D008               	goto	l2552
  3416                           
  3417                           ; BSR set to: 0
  3418  001A70  0100               	movlb	0	; () banked
  3419  001A72  51B5               	movf	___lwmod@divisor& (0+255),w,b
  3420  001A74  0100               	movlb	0	; () banked
  3421  001A76  5FB3               	subwf	___lwmod@dividend& (0+255),f,b
  3422  001A78  0100               	movlb	0	; () banked
  3423  001A7A  51B6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3424  001A7C  0100               	movlb	0	; () banked
  3425  001A7E  5BB4               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3426  001A80                     l2552:
  3427                           
  3428                           ; BSR set to: 0
  3429  001A80  0100               	movlb	0	; () banked
  3430  001A82  90D8               	bcf	status,0,c
  3431  001A84  33B6               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3432  001A86  33B5               	rrcf	___lwmod@divisor& (0+255),f,b
  3433                           
  3434                           ; BSR set to: 0
  3435  001A88  0100               	movlb	0	; () banked
  3436  001A8A  2FB7               	decfsz	___lwmod@counter& (0+255),f,b
  3437  001A8C  D7E7               	goto	l2548
  3438  001A8E                     l1107:
  3439                           
  3440                           ; BSR set to: 0
  3441  001A8E  C0B3  F0B3         	movff	___lwmod@dividend,?___lwmod
  3442  001A92  C0B4  F0B4         	movff	___lwmod@dividend+1,?___lwmod+1
  3443                           
  3444                           ; BSR set to: 0
  3445  001A96  0012               	return	
  3446  001A98                     __end_of___lwmod:
  3447                           	opt stack 0
  3448                           tblptru	equ	0xFF8
  3449                           tblptrh	equ	0xFF7
  3450                           tblptrl	equ	0xFF6
  3451                           tablat	equ	0xFF5
  3452                           prodh	equ	0xFF4
  3453                           prodl	equ	0xFF3
  3454                           intcon	equ	0xFF2
  3455                           indf0	equ	0xFEF
  3456                           postinc0	equ	0xFEE
  3457                           fsr0h	equ	0xFEA
  3458                           fsr0l	equ	0xFE9
  3459                           wreg	equ	0xFE8
  3460                           postinc1	equ	0xFE6
  3461                           postdec1	equ	0xFE5
  3462                           fsr1l	equ	0xFE1
  3463                           indf2	equ	0xFDF
  3464                           postinc2	equ	0xFDE
  3465                           postdec2	equ	0xFDD
  3466                           fsr2h	equ	0xFDA
  3467                           fsr2l	equ	0xFD9
  3468                           status	equ	0xFD8
  3469                           
  3470 ;; *************** function ___lwdiv *****************
  3471 ;; Defined at:
  3472 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  dividend        2    0[BANK0 ] unsigned int 
  3475 ;;  divisor         2    2[BANK0 ] unsigned int 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  quotient        2    4[BANK0 ] unsigned int 
  3478 ;;  counter         1    6[BANK0 ] unsigned char 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  2    0[BANK0 ] unsigned int 
  3481 ;; Registers used:
  3482 ;;		wreg, status,2, status,0
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3488 ;;      Params:         0       4       0       0       0       0       0       0       0
  3489 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3491 ;;      Totals:         0       7       0       0       0       0       0       0       0
  3492 ;;Total ram usage:        7 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    5
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_sprintf
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text17
  3503  0017B0                     __ptext17:
  3504                           	opt stack 0
  3505  0017B0                     ___lwdiv:
  3506                           	opt stack 22
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;incstack = 0
  3510  0017B0  0E00               	movlw	0
  3511  0017B2  0100               	movlb	0	; () banked
  3512  0017B4  6FB1               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3513  0017B6  0E00               	movlw	0
  3514  0017B8  0100               	movlb	0	; () banked
  3515  0017BA  6FB0               	movwf	___lwdiv@quotient& (0+255),b
  3516                           
  3517                           ; BSR set to: 0
  3518  0017BC  0100               	movlb	0	; () banked
  3519  0017BE  51AF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3520  0017C0  11AE               	iorwf	___lwdiv@divisor& (0+255),w,b
  3521  0017C2  B4D8               	btfsc	status,2,c
  3522  0017C4  D02C               	goto	l1097
  3523                           
  3524                           ; BSR set to: 0
  3525  0017C6  0E01               	movlw	1
  3526  0017C8  0100               	movlb	0	; () banked
  3527  0017CA  6FB2               	movwf	___lwdiv@counter& (0+255),b
  3528  0017CC  D006               	goto	l2526
  3529  0017CE                     l2524:
  3530                           
  3531                           ; BSR set to: 0
  3532  0017CE  0100               	movlb	0	; () banked
  3533  0017D0  90D8               	bcf	status,0,c
  3534  0017D2  37AE               	rlcf	___lwdiv@divisor& (0+255),f,b
  3535  0017D4  37AF               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  3536  0017D6  0100               	movlb	0	; () banked
  3537  0017D8  2BB2               	incf	___lwdiv@counter& (0+255),f,b
  3538  0017DA                     l2526:
  3539                           
  3540                           ; BSR set to: 0
  3541  0017DA  0100               	movlb	0	; () banked
  3542  0017DC  AFAF               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  3543  0017DE  D7F7               	goto	l2524
  3544  0017E0                     l2528:
  3545                           
  3546                           ; BSR set to: 0
  3547  0017E0  0100               	movlb	0	; () banked
  3548  0017E2  90D8               	bcf	status,0,c
  3549  0017E4  37B0               	rlcf	___lwdiv@quotient& (0+255),f,b
  3550  0017E6  37B1               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3551                           
  3552                           ; BSR set to: 0
  3553  0017E8  0100               	movlb	0	; () banked
  3554  0017EA  51AE               	movf	___lwdiv@divisor& (0+255),w,b
  3555  0017EC  0100               	movlb	0	; () banked
  3556  0017EE  5DAC               	subwf	___lwdiv@dividend& (0+255),w,b
  3557  0017F0  0100               	movlb	0	; () banked
  3558  0017F2  51AF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3559  0017F4  0100               	movlb	0	; () banked
  3560  0017F6  59AD               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  3561  0017F8  A0D8               	btfss	status,0,c
  3562  0017FA  D00A               	goto	l2536
  3563                           
  3564                           ; BSR set to: 0
  3565  0017FC  0100               	movlb	0	; () banked
  3566  0017FE  51AE               	movf	___lwdiv@divisor& (0+255),w,b
  3567  001800  0100               	movlb	0	; () banked
  3568  001802  5FAC               	subwf	___lwdiv@dividend& (0+255),f,b
  3569  001804  0100               	movlb	0	; () banked
  3570  001806  51AF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3571  001808  0100               	movlb	0	; () banked
  3572  00180A  5BAD               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  3573                           
  3574                           ; BSR set to: 0
  3575  00180C  0100               	movlb	0	; () banked
  3576  00180E  81B0               	bsf	___lwdiv@quotient& (0+255),0,b
  3577  001810                     l2536:
  3578                           
  3579                           ; BSR set to: 0
  3580  001810  0100               	movlb	0	; () banked
  3581  001812  90D8               	bcf	status,0,c
  3582  001814  33AF               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  3583  001816  33AE               	rrcf	___lwdiv@divisor& (0+255),f,b
  3584                           
  3585                           ; BSR set to: 0
  3586  001818  0100               	movlb	0	; () banked
  3587  00181A  2FB2               	decfsz	___lwdiv@counter& (0+255),f,b
  3588  00181C  D7E1               	goto	l2528
  3589  00181E                     l1097:
  3590                           
  3591                           ; BSR set to: 0
  3592  00181E  C0B0  F0AC         	movff	___lwdiv@quotient,?___lwdiv
  3593  001822  C0B1  F0AD         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3594                           
  3595                           ; BSR set to: 0
  3596  001826  0012               	return	
  3597  001828                     __end_of___lwdiv:
  3598                           	opt stack 0
  3599                           tblptru	equ	0xFF8
  3600                           tblptrh	equ	0xFF7
  3601                           tblptrl	equ	0xFF6
  3602                           tablat	equ	0xFF5
  3603                           prodh	equ	0xFF4
  3604                           prodl	equ	0xFF3
  3605                           intcon	equ	0xFF2
  3606                           indf0	equ	0xFEF
  3607                           postinc0	equ	0xFEE
  3608                           fsr0h	equ	0xFEA
  3609                           fsr0l	equ	0xFE9
  3610                           wreg	equ	0xFE8
  3611                           postinc1	equ	0xFE6
  3612                           postdec1	equ	0xFE5
  3613                           fsr1l	equ	0xFE1
  3614                           indf2	equ	0xFDF
  3615                           postinc2	equ	0xFDE
  3616                           postdec2	equ	0xFDD
  3617                           fsr2h	equ	0xFDA
  3618                           fsr2l	equ	0xFD9
  3619                           status	equ	0xFD8
  3620                           
  3621 ;; *************** function _WriteUSART *****************
  3622 ;; Defined at:
  3623 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uwrite.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  data            1    wreg     unsigned char 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  data            1    0[BANK0 ] unsigned char 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;		None               void
  3630 ;; Registers used:
  3631 ;;		wreg
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3637 ;;      Params:         0       0       0       0       0       0       0       0       0
  3638 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3639 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3640 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3641 ;;Total ram usage:        1 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; Hardware stack levels required when called:    5
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		_putcBluetoothString
  3648 ;;		_putcBluetoothInt
  3649 ;;		_putcTxU1
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text18
  3654  001DC6                     __ptext18:
  3655                           	opt stack 0
  3656  001DC6                     _WriteUSART:
  3657                           	opt stack 20
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;incstack = 0
  3661                           ;WriteUSART@data stored from wreg
  3662  001DC6  0100               	movlb	0	; () banked
  3663  001DC8  6FAC               	movwf	WriteUSART@data& (0+255),b
  3664                           
  3665                           ; BSR set to: 0
  3666  001DCA  ACAC               	btfss	4012,6,c	;volatile
  3667  001DCC  D003               	goto	l2272
  3668                           
  3669                           ; BSR set to: 0
  3670  001DCE  90AC               	bcf	4012,0,c	;volatile
  3671  001DD0  B254               	btfsc	_USART_Status,1,c
  3672                           
  3673                           ; BSR set to: 0
  3674  001DD2  80AC               	bsf	4012,0,c	;volatile
  3675  001DD4                     l2272:
  3676                           
  3677                           ; BSR set to: 0
  3678  001DD4  C0AC  FFAD         	movff	WriteUSART@data,4013	;volatile
  3679                           
  3680                           ; BSR set to: 0
  3681  001DD8  0012               	return	
  3682  001DDA                     __end_of_WriteUSART:
  3683                           	opt stack 0
  3684                           tblptru	equ	0xFF8
  3685                           tblptrh	equ	0xFF7
  3686                           tblptrl	equ	0xFF6
  3687                           tablat	equ	0xFF5
  3688                           prodh	equ	0xFF4
  3689                           prodl	equ	0xFF3
  3690                           intcon	equ	0xFF2
  3691                           indf0	equ	0xFEF
  3692                           postinc0	equ	0xFEE
  3693                           fsr0h	equ	0xFEA
  3694                           fsr0l	equ	0xFE9
  3695                           wreg	equ	0xFE8
  3696                           postinc1	equ	0xFE6
  3697                           postdec1	equ	0xFE5
  3698                           fsr1l	equ	0xFE1
  3699                           indf2	equ	0xFDF
  3700                           postinc2	equ	0xFDE
  3701                           postdec2	equ	0xFDD
  3702                           fsr2h	equ	0xFDA
  3703                           fsr2l	equ	0xFD9
  3704                           status	equ	0xFD8
  3705                           
  3706 ;; *************** function _UART1_Init *****************
  3707 ;; Defined at:
  3708 ;;		line 5 in file "UART1.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;  bdr             1    wreg     unsigned char 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;  bdr             1    6[BANK0 ] unsigned char 
  3713 ;; Return value:  Size  Location     Type
  3714 ;;		None               void
  3715 ;; Registers used:
  3716 ;;		wreg, status,2, cstack
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3722 ;;      Params:         0       0       0       0       0       0       0       0       0
  3723 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3724 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3725 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3726 ;;Total ram usage:        1 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; Hardware stack levels required when called:    6
  3729 ;; This function calls:
  3730 ;;		_OpenUSART
  3731 ;; This function is called by:
  3732 ;;		_BT_Init
  3733 ;;		_putcBluetoothString
  3734 ;;		_putcBluetoothInt
  3735 ;;		_main
  3736 ;;		_EstadoBluetooth
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           	psect	text19
  3741  001D44                     __ptext19:
  3742                           	opt stack 0
  3743  001D44                     _UART1_Init:
  3744                           	opt stack 24
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;incstack = 0
  3748                           ;UART1_Init@bdr stored from wreg
  3749  001D44  0100               	movlb	0	; () banked
  3750  001D46  6FB2               	movwf	UART1_Init@bdr& (0+255),b
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;UART1.c: 8: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b11111111 & 
      +                          0b11111111,bdr);
  3754  001D48  0100               	movlb	0	; () banked
  3755  001D4A  C0B2  F0AC         	movff	UART1_Init@bdr,OpenUSART@spbrg
  3756  001D4E  0100               	movlb	0	; () banked
  3757  001D50  6BAD               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  3758  001D52  0E7C               	movlw	124
  3759  001D54  EC1C  F00B         	call	_OpenUSART
  3760  001D58  0012               	return	
  3761  001D5A                     __end_of_UART1_Init:
  3762                           	opt stack 0
  3763                           tblptru	equ	0xFF8
  3764                           tblptrh	equ	0xFF7
  3765                           tblptrl	equ	0xFF6
  3766                           tablat	equ	0xFF5
  3767                           prodh	equ	0xFF4
  3768                           prodl	equ	0xFF3
  3769                           intcon	equ	0xFF2
  3770                           indf0	equ	0xFEF
  3771                           postinc0	equ	0xFEE
  3772                           fsr0h	equ	0xFEA
  3773                           fsr0l	equ	0xFE9
  3774                           wreg	equ	0xFE8
  3775                           postinc1	equ	0xFE6
  3776                           postdec1	equ	0xFE5
  3777                           fsr1l	equ	0xFE1
  3778                           indf2	equ	0xFDF
  3779                           postinc2	equ	0xFDE
  3780                           postdec2	equ	0xFDD
  3781                           fsr2h	equ	0xFDA
  3782                           fsr2l	equ	0xFD9
  3783                           status	equ	0xFD8
  3784                           
  3785 ;; *************** function _OpenUSART *****************
  3786 ;; Defined at:
  3787 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uopen.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;  config          1    wreg     unsigned char 
  3790 ;;  spbrg           2    0[BANK0 ] unsigned int 
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;  config          1    5[BANK0 ] unsigned char 
  3793 ;; Return value:  Size  Location     Type
  3794 ;;		None               void
  3795 ;; Registers used:
  3796 ;;		wreg, status,2
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3802 ;;      Params:         0       2       0       0       0       0       0       0       0
  3803 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3804 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3805 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3806 ;;Total ram usage:        6 bytes
  3807 ;; Hardware stack levels used:    1
  3808 ;; Hardware stack levels required when called:    5
  3809 ;; This function calls:
  3810 ;;		Nothing
  3811 ;; This function is called by:
  3812 ;;		_UART1_Init
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	text20
  3817  001638                     __ptext20:
  3818                           	opt stack 0
  3819  001638                     _OpenUSART:
  3820                           	opt stack 24
  3821                           
  3822                           ;incstack = 0
  3823                           ;OpenUSART@config stored from wreg
  3824  001638  0100               	movlb	0	; () banked
  3825  00163A  6FB1               	movwf	OpenUSART@config& (0+255),b
  3826                           
  3827                           ; BSR set to: 0
  3828  00163C  0E00               	movlw	0
  3829  00163E  6EAC               	movwf	4012,c	;volatile
  3830  001640  0E00               	movlw	0
  3831  001642  6EAB               	movwf	4011,c	;volatile
  3832                           
  3833                           ; BSR set to: 0
  3834  001644  0100               	movlb	0	; () banked
  3835  001646  B1B1               	btfsc	OpenUSART@config& (0+255),0,b
  3836                           
  3837                           ; BSR set to: 0
  3838  001648  88AC               	bsf	4012,4,c	;volatile
  3839                           
  3840                           ; BSR set to: 0
  3841                           
  3842                           ; BSR set to: 0
  3843  00164A  0100               	movlb	0	; () banked
  3844  00164C  A3B1               	btfss	OpenUSART@config& (0+255),1,b
  3845  00164E  D002               	goto	l2468
  3846                           
  3847                           ; BSR set to: 0
  3848  001650  8CAC               	bsf	4012,6,c	;volatile
  3849  001652  8CAB               	bsf	4011,6,c	;volatile
  3850  001654                     l2468:
  3851                           
  3852                           ; BSR set to: 0
  3853  001654  0100               	movlb	0	; () banked
  3854  001656  B5B1               	btfsc	OpenUSART@config& (0+255),2,b
  3855                           
  3856                           ; BSR set to: 0
  3857  001658  8EAC               	bsf	4012,7,c	;volatile
  3858                           
  3859                           ; BSR set to: 0
  3860                           
  3861                           ; BSR set to: 0
  3862  00165A  0100               	movlb	0	; () banked
  3863  00165C  A7B1               	btfss	OpenUSART@config& (0+255),3,b
  3864  00165E  D002               	goto	l549
  3865                           
  3866                           ; BSR set to: 0
  3867  001660  88AB               	bsf	4011,4,c	;volatile
  3868  001662  D001               	goto	l2476
  3869  001664                     l549:
  3870                           
  3871                           ; BSR set to: 0
  3872  001664  8AAB               	bsf	4011,5,c	;volatile
  3873  001666                     l2476:
  3874                           
  3875                           ; BSR set to: 0
  3876  001666  0100               	movlb	0	; () banked
  3877  001668  B9B1               	btfsc	OpenUSART@config& (0+255),4,b
  3878                           
  3879                           ; BSR set to: 0
  3880  00166A  84AC               	bsf	4012,2,c	;volatile
  3881                           
  3882                           ; BSR set to: 0
  3883  00166C  989E               	bcf	3998,4,c	;volatile
  3884                           
  3885                           ; BSR set to: 0
  3886  00166E  0100               	movlb	0	; () banked
  3887  001670  BBB1               	btfsc	OpenUSART@config& (0+255),5,b
  3888                           
  3889                           ; BSR set to: 0
  3890  001672  86AB               	bsf	4011,3,c	;volatile
  3891                           
  3892                           ; BSR set to: 0
  3893                           
  3894                           ; BSR set to: 0
  3895  001674  0100               	movlb	0	; () banked
  3896  001676  ADB1               	btfss	OpenUSART@config& (0+255),6,b
  3897  001678  D002               	goto	l553
  3898                           
  3899                           ; BSR set to: 0
  3900  00167A  8A9D               	bsf	3997,5,c	;volatile
  3901  00167C  D001               	goto	l554
  3902  00167E                     l553:
  3903                           
  3904                           ; BSR set to: 0
  3905  00167E  9A9D               	bcf	3997,5,c	;volatile
  3906  001680                     l554:
  3907                           
  3908                           ; BSR set to: 0
  3909  001680  9A9E               	bcf	3998,5,c	;volatile
  3910                           
  3911                           ; BSR set to: 0
  3912  001682  0100               	movlb	0	; () banked
  3913  001684  AFB1               	btfss	OpenUSART@config& (0+255),7,b
  3914  001686  D002               	goto	l555
  3915                           
  3916                           ; BSR set to: 0
  3917  001688  889D               	bsf	3997,4,c	;volatile
  3918  00168A  D001               	goto	l556
  3919  00168C                     l555:
  3920                           
  3921                           ; BSR set to: 0
  3922  00168C  989D               	bcf	3997,4,c	;volatile
  3923  00168E                     l556:
  3924                           
  3925                           ; BSR set to: 0
  3926  00168E  C0AC  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  3927                           
  3928                           ; BSR set to: 0
  3929  001692  0100               	movlb	0	; () banked
  3930  001694  C0AD  F0AE         	movff	OpenUSART@spbrg+1,??_OpenUSART
  3931  001698  C0AE  F0AF         	movff	??_OpenUSART,??_OpenUSART+1
  3932  00169C  0100               	movlb	0	; () banked
  3933  00169E  6BB0               	clrf	(??_OpenUSART+2)& (0+255),b
  3934  0016A0  0100               	movlb	0	; () banked
  3935  0016A2  51AF               	movf	(??_OpenUSART+1)& (0+255),w,b
  3936  0016A4  6EB0               	movwf	4016,c	;volatile
  3937                           
  3938                           ; BSR set to: 0
  3939  0016A6  8AAC               	bsf	4012,5,c	;volatile
  3940                           
  3941                           ; BSR set to: 0
  3942  0016A8  8EAB               	bsf	4011,7,c	;volatile
  3943                           
  3944                           ; BSR set to: 0
  3945  0016AA  9C94               	bcf	3988,6,c	;volatile
  3946                           
  3947                           ; BSR set to: 0
  3948  0016AC  8E94               	bsf	3988,7,c	;volatile
  3949                           
  3950                           ; BSR set to: 0
  3951  0016AE  B8AC               	btfsc	4012,4,c	;volatile
  3952                           
  3953                           ; BSR set to: 0
  3954  0016B0  BEAC               	btfsc	4012,7,c	;volatile
  3955  0016B2  D001               	goto	l558
  3956                           
  3957                           ; BSR set to: 0
  3958  0016B4  8C94               	bsf	3988,6,c	;volatile
  3959  0016B6                     l558:
  3960                           
  3961                           ; BSR set to: 0
  3962  0016B6  0012               	return	
  3963  0016B8                     __end_of_OpenUSART:
  3964                           	opt stack 0
  3965                           tblptru	equ	0xFF8
  3966                           tblptrh	equ	0xFF7
  3967                           tblptrl	equ	0xFF6
  3968                           tablat	equ	0xFF5
  3969                           prodh	equ	0xFF4
  3970                           prodl	equ	0xFF3
  3971                           intcon	equ	0xFF2
  3972                           indf0	equ	0xFEF
  3973                           postinc0	equ	0xFEE
  3974                           fsr0h	equ	0xFEA
  3975                           fsr0l	equ	0xFE9
  3976                           wreg	equ	0xFE8
  3977                           postinc1	equ	0xFE6
  3978                           postdec1	equ	0xFE5
  3979                           fsr1l	equ	0xFE1
  3980                           indf2	equ	0xFDF
  3981                           postinc2	equ	0xFDE
  3982                           postdec2	equ	0xFDD
  3983                           fsr2h	equ	0xFDA
  3984                           fsr2l	equ	0xFD9
  3985                           status	equ	0xFD8
  3986                           
  3987 ;; *************** function _getCNY70Value *****************
  3988 ;; Defined at:
  3989 ;;		line 5 in file "cny70.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;		None
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;		None
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  2   51[BANK0 ] int 
  3996 ;; Registers used:
  3997 ;;		wreg, status,2, status,0, cstack
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4003 ;;      Params:         0       2       0       0       0       0       0       0       0
  4004 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4005 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4006 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4007 ;;Total ram usage:        2 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:    9
  4010 ;; This function calls:
  4011 ;;		_go_straight
  4012 ;;		_left
  4013 ;;		_right
  4014 ;; This function is called by:
  4015 ;;		_Comando_Tablet
  4016 ;;		_main
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text21
  4021  000DF4                     __ptext21:
  4022                           	opt stack 0
  4023  000DF4                     _getCNY70Value:
  4024                           	opt stack 21
  4025                           
  4026                           ;cny70.c: 25: if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 0 && PORTB
      +                          bits.RB4 == 1 && PORTBbits.RB1 == 1){
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;incstack = 0
  4030  000DF4  B481               	btfsc	3969,2,c	;volatile
  4031  000DF6  A681               	btfss	3969,3,c	;volatile
  4032  000DF8  D008               	goto	l402
  4033  000DFA  A081               	btfss	3969,0,c	;volatile
  4034  000DFC  A881               	btfss	3969,4,c	;volatile
  4035  000DFE  D005               	goto	l402
  4036  000E00  A281               	btfss	3969,1,c	;volatile
  4037  000E02  D003               	goto	l402
  4038                           
  4039                           ;cny70.c: 26: go_straight();
  4040  000E04  ECFF  F00E         	call	_go_straight	;wreg free
  4041  000E08  D068               	goto	l3068
  4042  000E0A                     l402:
  4043                           
  4044                           ;cny70.c: 30: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 0 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  4045  000E0A  B481               	btfsc	3969,2,c	;volatile
  4046  000E0C  B681               	btfsc	3969,3,c	;volatile
  4047  000E0E  D008               	goto	l405
  4048  000E10  B081               	btfsc	3969,0,c	;volatile
  4049  000E12  A881               	btfss	3969,4,c	;volatile
  4050  000E14  D005               	goto	l405
  4051  000E16  A281               	btfss	3969,1,c	;volatile
  4052  000E18  D003               	goto	l405
  4053                           
  4054                           ;cny70.c: 31: left();
  4055  000E1A  ECB8  F00E         	call	_left	;wreg free
  4056  000E1E  D049               	goto	L4
  4057  000E20                     l405:
  4058                           
  4059                           ;cny70.c: 35: else if(PORTBbits.RB2 == 0 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  4060  000E20  A481               	btfss	3969,2,c	;volatile
  4061  000E22  A681               	btfss	3969,3,c	;volatile
  4062  000E24  D00C               	goto	l407
  4063  000E26  B081               	btfsc	3969,0,c	;volatile
  4064  000E28  A881               	btfss	3969,4,c	;volatile
  4065  000E2A  D009               	goto	l407
  4066  000E2C  A281               	btfss	3969,1,c	;volatile
  4067  000E2E  D007               	goto	l407
  4068                           
  4069                           ;cny70.c: 36: left();
  4070  000E30  ECB8  F00E         	call	_left	;wreg free
  4071  000E34                     
  4072                           ;cny70.c: 37: return -2;
  4073  000E34  0EFF               	movlw	255
  4074  000E36  0100               	movlb	0	; () banked
  4075  000E38  6FE0               	movwf	(?_getCNY70Value+1)& (0+255),b
  4076  000E3A  0EFE               	movlw	254
  4077  000E3C  D052               	goto	L9
  4078  000E3E                     l407:
  4079                           
  4080                           ;cny70.c: 40: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 0 && PORTBbits.RB1 == 1){
  4081  000E3E  B481               	btfsc	3969,2,c	;volatile
  4082  000E40  A681               	btfss	3969,3,c	;volatile
  4083  000E42  D008               	goto	l409
  4084  000E44  B081               	btfsc	3969,0,c	;volatile
  4085  000E46  B881               	btfsc	3969,4,c	;volatile
  4086  000E48  D005               	goto	l409
  4087  000E4A  A281               	btfss	3969,1,c	;volatile
  4088  000E4C  D003               	goto	l409
  4089                           
  4090                           ;cny70.c: 41: right();
  4091  000E4E  ECAD  F00E         	call	_right	;wreg free
  4092  000E52  D03E               	goto	L8
  4093  000E54                     l409:
  4094                           
  4095                           ;cny70.c: 45: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 0){
  4096  000E54  B481               	btfsc	3969,2,c	;volatile
  4097  000E56  A681               	btfss	3969,3,c	;volatile
  4098  000E58  D008               	goto	l411
  4099  000E5A  B081               	btfsc	3969,0,c	;volatile
  4100  000E5C  A881               	btfss	3969,4,c	;volatile
  4101  000E5E  D005               	goto	l411
  4102  000E60  B281               	btfsc	3969,1,c	;volatile
  4103  000E62  D003               	goto	l411
  4104                           
  4105                           ;cny70.c: 46: right();
  4106  000E64  ECAD  F00E         	call	_right	;wreg free
  4107  000E68  D00A               	goto	L7
  4108  000E6A                     l411:
  4109                           
  4110                           ;cny70.c: 51: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 0 && PORTBbits.RB1 == 0){
  4111  000E6A  B481               	btfsc	3969,2,c	;volatile
  4112  000E6C  A681               	btfss	3969,3,c	;volatile
  4113  000E6E  D00C               	goto	l413
  4114  000E70  B081               	btfsc	3969,0,c	;volatile
  4115  000E72  B881               	btfsc	3969,4,c	;volatile
  4116  000E74  D009               	goto	l413
  4117  000E76  B281               	btfsc	3969,1,c	;volatile
  4118  000E78  D007               	goto	l413
  4119                           
  4120                           ;cny70.c: 52: right();
  4121  000E7A  ECAD  F00E         	call	_right	;wreg free
  4122  000E7E                     L7:
  4123                           
  4124                           ;cny70.c: 53: return 2;
  4125  000E7E  0E00               	movlw	0
  4126  000E80  0100               	movlb	0	; () banked
  4127  000E82  6FE0               	movwf	(?_getCNY70Value+1)& (0+255),b
  4128  000E84  0E02               	movlw	2
  4129  000E86  D02D               	goto	L9
  4130  000E88                     l413:
  4131                           
  4132                           ;cny70.c: 56: else if(PORTBbits.RB2 == 0 && PORTBbits.RB3 == 0 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  4133  000E88  A481               	btfss	3969,2,c	;volatile
  4134  000E8A  B681               	btfsc	3969,3,c	;volatile
  4135  000E8C  D008               	goto	l415
  4136  000E8E  B081               	btfsc	3969,0,c	;volatile
  4137  000E90  A881               	btfss	3969,4,c	;volatile
  4138  000E92  D005               	goto	l415
  4139  000E94  A281               	btfss	3969,1,c	;volatile
  4140  000E96  D003               	goto	l415
  4141                           
  4142                           ;cny70.c: 57: left();
  4143  000E98  ECB8  F00E         	call	_left	;wreg free
  4144  000E9C  D7CB               	goto	L10
  4145  000E9E                     l415:
  4146                           
  4147                           ;cny70.c: 61: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 0 && PORTBbits.RB0 == 0 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  4148  000E9E  B481               	btfsc	3969,2,c	;volatile
  4149  000EA0  B681               	btfsc	3969,3,c	;volatile
  4150  000EA2  D00C               	goto	l417
  4151  000EA4  A081               	btfss	3969,0,c	;volatile
  4152  000EA6  A881               	btfss	3969,4,c	;volatile
  4153  000EA8  D009               	goto	l417
  4154  000EAA  A281               	btfss	3969,1,c	;volatile
  4155  000EAC  D007               	goto	l417
  4156                           
  4157                           ;cny70.c: 62: go_straight();
  4158  000EAE  ECFF  F00E         	call	_go_straight	;wreg free
  4159  000EB2                     L4:
  4160                           
  4161                           ;cny70.c: 63: return -1;
  4162  000EB2  0100               	movlb	0	; () banked
  4163  000EB4  69DF               	setf	?_getCNY70Value& (0+255),b
  4164  000EB6  0100               	movlb	0	; () banked
  4165  000EB8  69E0               	setf	(?_getCNY70Value+1)& (0+255),b
  4166  000EBA  D015               	goto	l403
  4167  000EBC                     l417:
  4168                           
  4169                           ;cny70.c: 66: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 0 && 
      +                          PORTBbits.RB4 == 0 && PORTBbits.RB1 == 1){
  4170  000EBC  B481               	btfsc	3969,2,c	;volatile
  4171  000EBE  A681               	btfss	3969,3,c	;volatile
  4172  000EC0  D00C               	goto	l3068
  4173  000EC2  A081               	btfss	3969,0,c	;volatile
  4174  000EC4  B881               	btfsc	3969,4,c	;volatile
  4175  000EC6  D009               	goto	l3068
  4176  000EC8  A281               	btfss	3969,1,c	;volatile
  4177  000ECA  D007               	goto	l3068
  4178                           
  4179                           ;cny70.c: 67: go_straight();
  4180  000ECC  ECFF  F00E         	call	_go_straight	;wreg free
  4181  000ED0                     L8:
  4182                           
  4183                           ;cny70.c: 68: return 1;
  4184  000ED0  0E00               	movlw	0
  4185  000ED2  0100               	movlb	0	; () banked
  4186  000ED4  6FE0               	movwf	(?_getCNY70Value+1)& (0+255),b
  4187  000ED6  0E01               	movlw	1
  4188  000ED8  D004               	goto	L9
  4189  000EDA                     l3068:
  4190                           
  4191                           ;cny70.c: 76: else
  4192                           ;cny70.c: 77: return 0;
  4193  000EDA  0E00               	movlw	0
  4194  000EDC  0100               	movlb	0	; () banked
  4195  000EDE  6FE0               	movwf	(?_getCNY70Value+1)& (0+255),b
  4196  000EE0  0E00               	movlw	0
  4197  000EE2                     L9:
  4198  000EE2  0100               	movlb	0	; () banked
  4199  000EE4  6FDF               	movwf	?_getCNY70Value& (0+255),b
  4200  000EE6                     l403:
  4201                           
  4202                           ; BSR set to: 0
  4203  000EE6  0012               	return	
  4204  000EE8                     __end_of_getCNY70Value:
  4205                           	opt stack 0
  4206                           tblptru	equ	0xFF8
  4207                           tblptrh	equ	0xFF7
  4208                           tblptrl	equ	0xFF6
  4209                           tablat	equ	0xFF5
  4210                           prodh	equ	0xFF4
  4211                           prodl	equ	0xFF3
  4212                           intcon	equ	0xFF2
  4213                           indf0	equ	0xFEF
  4214                           postinc0	equ	0xFEE
  4215                           fsr0h	equ	0xFEA
  4216                           fsr0l	equ	0xFE9
  4217                           wreg	equ	0xFE8
  4218                           postinc1	equ	0xFE6
  4219                           postdec1	equ	0xFE5
  4220                           fsr1l	equ	0xFE1
  4221                           indf2	equ	0xFDF
  4222                           postinc2	equ	0xFDE
  4223                           postdec2	equ	0xFDD
  4224                           fsr2h	equ	0xFDA
  4225                           fsr2l	equ	0xFD9
  4226                           status	equ	0xFD8
  4227                           
  4228 ;; *************** function _right *****************
  4229 ;; Defined at:
  4230 ;;		line 100 in file "cny70.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;		None
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;		None
  4235 ;; Return value:  Size  Location     Type
  4236 ;;		None               void
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0, cstack
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4244 ;;      Params:         0       0       0       0       0       0       0       0       0
  4245 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4247 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4248 ;;Total ram usage:        0 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; Hardware stack levels required when called:    8
  4251 ;; This function calls:
  4252 ;;		_PWM_DutyCycle1
  4253 ;;		_PWM_DutyCycle2
  4254 ;;		_motor_Backforward1
  4255 ;;		_motor_forward1
  4256 ;; This function is called by:
  4257 ;;		_getCNY70Value
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text22
  4262  001D5A                     __ptext22:
  4263                           	opt stack 0
  4264  001D5A                     _right:
  4265                           	opt stack 21
  4266                           
  4267                           ;cny70.c: 102: motor_forward1();
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;incstack = 0
  4271  001D5A  EC1B  F00F         	call	_motor_forward1	;wreg free
  4272                           
  4273                           ;cny70.c: 103: motor_Backforward1();
  4274  001D5E  EC1E  F00F         	call	_motor_Backforward1	;wreg free
  4275                           
  4276                           ;cny70.c: 104: PWM_DutyCycle1(100);
  4277  001D62  0E64               	movlw	100
  4278  001D64  EC9A  F00B         	call	_PWM_DutyCycle1
  4279                           
  4280                           ;cny70.c: 105: PWM_DutyCycle2(100);
  4281  001D68  0E64               	movlw	100
  4282  001D6A  EC5C  F00B         	call	_PWM_DutyCycle2
  4283                           
  4284                           ;cny70.c: 106: return;
  4285  001D6E  0012               	return	
  4286  001D70                     __end_of_right:
  4287                           	opt stack 0
  4288                           tblptru	equ	0xFF8
  4289                           tblptrh	equ	0xFF7
  4290                           tblptrl	equ	0xFF6
  4291                           tablat	equ	0xFF5
  4292                           prodh	equ	0xFF4
  4293                           prodl	equ	0xFF3
  4294                           intcon	equ	0xFF2
  4295                           indf0	equ	0xFEF
  4296                           postinc0	equ	0xFEE
  4297                           fsr0h	equ	0xFEA
  4298                           fsr0l	equ	0xFE9
  4299                           wreg	equ	0xFE8
  4300                           postinc1	equ	0xFE6
  4301                           postdec1	equ	0xFE5
  4302                           fsr1l	equ	0xFE1
  4303                           indf2	equ	0xFDF
  4304                           postinc2	equ	0xFDE
  4305                           postdec2	equ	0xFDD
  4306                           fsr2h	equ	0xFDA
  4307                           fsr2l	equ	0xFD9
  4308                           status	equ	0xFD8
  4309                           
  4310 ;; *************** function _motor_forward1 *****************
  4311 ;; Defined at:
  4312 ;;		line 11 in file "motor.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;		None
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;		None
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  2  385[COMRAM] int 
  4319 ;; Registers used:
  4320 ;;		None
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4326 ;;      Params:         0       0       0       0       0       0       0       0       0
  4327 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4328 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4329 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4330 ;;Total ram usage:        0 bytes
  4331 ;; Hardware stack levels used:    1
  4332 ;; Hardware stack levels required when called:    5
  4333 ;; This function calls:
  4334 ;;		Nothing
  4335 ;; This function is called by:
  4336 ;;		_right
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text23
  4341  001E36                     __ptext23:
  4342                           	opt stack 0
  4343  001E36                     _motor_forward1:
  4344                           	opt stack 23
  4345                           
  4346                           ;motor.c: 13: PORTDbits.RD7 = 1;
  4347                           
  4348                           ;incstack = 0
  4349  001E36  8E83               	bsf	3971,7,c	;volatile
  4350                           
  4351                           ;motor.c: 14: PORTDbits.RD4 = 0;
  4352  001E38  9883               	bcf	3971,4,c	;volatile
  4353                           
  4354                           ;motor.c: 17: return;
  4355  001E3A  0012               	return	
  4356  001E3C                     __end_of_motor_forward1:
  4357                           	opt stack 0
  4358                           tblptru	equ	0xFF8
  4359                           tblptrh	equ	0xFF7
  4360                           tblptrl	equ	0xFF6
  4361                           tablat	equ	0xFF5
  4362                           prodh	equ	0xFF4
  4363                           prodl	equ	0xFF3
  4364                           intcon	equ	0xFF2
  4365                           indf0	equ	0xFEF
  4366                           postinc0	equ	0xFEE
  4367                           fsr0h	equ	0xFEA
  4368                           fsr0l	equ	0xFE9
  4369                           wreg	equ	0xFE8
  4370                           postinc1	equ	0xFE6
  4371                           postdec1	equ	0xFE5
  4372                           fsr1l	equ	0xFE1
  4373                           indf2	equ	0xFDF
  4374                           postinc2	equ	0xFDE
  4375                           postdec2	equ	0xFDD
  4376                           fsr2h	equ	0xFDA
  4377                           fsr2l	equ	0xFD9
  4378                           status	equ	0xFD8
  4379                           
  4380 ;; *************** function _motor_Backforward1 *****************
  4381 ;; Defined at:
  4382 ;;		line 20 in file "motor.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  2  387[COMRAM] int 
  4389 ;; Registers used:
  4390 ;;		None
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4396 ;;      Params:         0       0       0       0       0       0       0       0       0
  4397 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4399 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4400 ;;Total ram usage:        0 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    5
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_right
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text24
  4411  001E3C                     __ptext24:
  4412                           	opt stack 0
  4413  001E3C                     _motor_Backforward1:
  4414                           	opt stack 23
  4415                           
  4416                           ;motor.c: 22: PORTDbits.RD7 = 0;
  4417                           
  4418                           ;incstack = 0
  4419  001E3C  9E83               	bcf	3971,7,c	;volatile
  4420                           
  4421                           ;motor.c: 23: PORTDbits.RD4 = 1;
  4422  001E3E  8883               	bsf	3971,4,c	;volatile
  4423                           
  4424                           ;motor.c: 26: return;
  4425  001E40  0012               	return	
  4426  001E42                     __end_of_motor_Backforward1:
  4427                           	opt stack 0
  4428                           tblptru	equ	0xFF8
  4429                           tblptrh	equ	0xFF7
  4430                           tblptrl	equ	0xFF6
  4431                           tablat	equ	0xFF5
  4432                           prodh	equ	0xFF4
  4433                           prodl	equ	0xFF3
  4434                           intcon	equ	0xFF2
  4435                           indf0	equ	0xFEF
  4436                           postinc0	equ	0xFEE
  4437                           fsr0h	equ	0xFEA
  4438                           fsr0l	equ	0xFE9
  4439                           wreg	equ	0xFE8
  4440                           postinc1	equ	0xFE6
  4441                           postdec1	equ	0xFE5
  4442                           fsr1l	equ	0xFE1
  4443                           indf2	equ	0xFDF
  4444                           postinc2	equ	0xFDE
  4445                           postdec2	equ	0xFDD
  4446                           fsr2h	equ	0xFDA
  4447                           fsr2l	equ	0xFD9
  4448                           status	equ	0xFD8
  4449                           
  4450 ;; *************** function _left *****************
  4451 ;; Defined at:
  4452 ;;		line 109 in file "cny70.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;		None
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;		None
  4457 ;; Return value:  Size  Location     Type
  4458 ;;		None               void
  4459 ;; Registers used:
  4460 ;;		wreg, status,2, status,0, cstack
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4466 ;;      Params:         0       0       0       0       0       0       0       0       0
  4467 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4468 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4469 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4470 ;;Total ram usage:        0 bytes
  4471 ;; Hardware stack levels used:    1
  4472 ;; Hardware stack levels required when called:    8
  4473 ;; This function calls:
  4474 ;;		_PWM_DutyCycle1
  4475 ;;		_PWM_DutyCycle2
  4476 ;;		_motor_Backforward2
  4477 ;;		_motor_forward2
  4478 ;; This function is called by:
  4479 ;;		_getCNY70Value
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           	psect	text25
  4484  001D70                     __ptext25:
  4485                           	opt stack 0
  4486  001D70                     _left:
  4487                           	opt stack 21
  4488                           
  4489                           ;cny70.c: 111: motor_forward2();
  4490                           
  4491                           ;incstack = 0
  4492  001D70  EC21  F00F         	call	_motor_forward2	;wreg free
  4493                           
  4494                           ;cny70.c: 112: motor_Backforward2();
  4495  001D74  EC24  F00F         	call	_motor_Backforward2	;wreg free
  4496                           
  4497                           ;cny70.c: 113: PWM_DutyCycle1(100);
  4498  001D78  0E64               	movlw	100
  4499  001D7A  EC9A  F00B         	call	_PWM_DutyCycle1
  4500                           
  4501                           ;cny70.c: 114: PWM_DutyCycle2(100);
  4502  001D7E  0E64               	movlw	100
  4503  001D80  EC5C  F00B         	call	_PWM_DutyCycle2
  4504                           
  4505                           ;cny70.c: 115: return;
  4506  001D84  0012               	return	
  4507  001D86                     __end_of_left:
  4508                           	opt stack 0
  4509                           tblptru	equ	0xFF8
  4510                           tblptrh	equ	0xFF7
  4511                           tblptrl	equ	0xFF6
  4512                           tablat	equ	0xFF5
  4513                           prodh	equ	0xFF4
  4514                           prodl	equ	0xFF3
  4515                           intcon	equ	0xFF2
  4516                           indf0	equ	0xFEF
  4517                           postinc0	equ	0xFEE
  4518                           fsr0h	equ	0xFEA
  4519                           fsr0l	equ	0xFE9
  4520                           wreg	equ	0xFE8
  4521                           postinc1	equ	0xFE6
  4522                           postdec1	equ	0xFE5
  4523                           fsr1l	equ	0xFE1
  4524                           indf2	equ	0xFDF
  4525                           postinc2	equ	0xFDE
  4526                           postdec2	equ	0xFDD
  4527                           fsr2h	equ	0xFDA
  4528                           fsr2l	equ	0xFD9
  4529                           status	equ	0xFD8
  4530                           
  4531 ;; *************** function _motor_forward2 *****************
  4532 ;; Defined at:
  4533 ;;		line 29 in file "motor.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;		None
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;		None
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  2  393[COMRAM] int 
  4540 ;; Registers used:
  4541 ;;		None
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4547 ;;      Params:         0       0       0       0       0       0       0       0       0
  4548 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4549 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4550 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4551 ;;Total ram usage:        0 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    5
  4554 ;; This function calls:
  4555 ;;		Nothing
  4556 ;; This function is called by:
  4557 ;;		_left
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text26
  4562  001E42                     __ptext26:
  4563                           	opt stack 0
  4564  001E42                     _motor_forward2:
  4565                           	opt stack 23
  4566                           
  4567                           ;motor.c: 32: PORTDbits.RD2 = 1;
  4568                           
  4569                           ;incstack = 0
  4570  001E42  8483               	bsf	3971,2,c	;volatile
  4571                           
  4572                           ;motor.c: 33: PORTDbits.RD3 = 0;
  4573  001E44  9683               	bcf	3971,3,c	;volatile
  4574                           
  4575                           ;motor.c: 35: return;
  4576  001E46  0012               	return	
  4577  001E48                     __end_of_motor_forward2:
  4578                           	opt stack 0
  4579                           tblptru	equ	0xFF8
  4580                           tblptrh	equ	0xFF7
  4581                           tblptrl	equ	0xFF6
  4582                           tablat	equ	0xFF5
  4583                           prodh	equ	0xFF4
  4584                           prodl	equ	0xFF3
  4585                           intcon	equ	0xFF2
  4586                           indf0	equ	0xFEF
  4587                           postinc0	equ	0xFEE
  4588                           fsr0h	equ	0xFEA
  4589                           fsr0l	equ	0xFE9
  4590                           wreg	equ	0xFE8
  4591                           postinc1	equ	0xFE6
  4592                           postdec1	equ	0xFE5
  4593                           fsr1l	equ	0xFE1
  4594                           indf2	equ	0xFDF
  4595                           postinc2	equ	0xFDE
  4596                           postdec2	equ	0xFDD
  4597                           fsr2h	equ	0xFDA
  4598                           fsr2l	equ	0xFD9
  4599                           status	equ	0xFD8
  4600                           
  4601 ;; *************** function _motor_Backforward2 *****************
  4602 ;; Defined at:
  4603 ;;		line 38 in file "motor.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;		None
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;		None
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  2  395[COMRAM] int 
  4610 ;; Registers used:
  4611 ;;		None
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4617 ;;      Params:         0       0       0       0       0       0       0       0       0
  4618 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4619 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4620 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4621 ;;Total ram usage:        0 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; Hardware stack levels required when called:    5
  4624 ;; This function calls:
  4625 ;;		Nothing
  4626 ;; This function is called by:
  4627 ;;		_left
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           	psect	text27
  4632  001E48                     __ptext27:
  4633                           	opt stack 0
  4634  001E48                     _motor_Backforward2:
  4635                           	opt stack 23
  4636                           
  4637                           ;motor.c: 41: PORTDbits.RD2 = 0;
  4638                           
  4639                           ;incstack = 0
  4640  001E48  9483               	bcf	3971,2,c	;volatile
  4641                           
  4642                           ;motor.c: 42: PORTDbits.RD3 = 1;
  4643  001E4A  8683               	bsf	3971,3,c	;volatile
  4644                           
  4645                           ;motor.c: 44: return;
  4646  001E4C  0012               	return	
  4647  001E4E                     __end_of_motor_Backforward2:
  4648                           	opt stack 0
  4649                           tblptru	equ	0xFF8
  4650                           tblptrh	equ	0xFF7
  4651                           tblptrl	equ	0xFF6
  4652                           tablat	equ	0xFF5
  4653                           prodh	equ	0xFF4
  4654                           prodl	equ	0xFF3
  4655                           intcon	equ	0xFF2
  4656                           indf0	equ	0xFEF
  4657                           postinc0	equ	0xFEE
  4658                           fsr0h	equ	0xFEA
  4659                           fsr0l	equ	0xFE9
  4660                           wreg	equ	0xFE8
  4661                           postinc1	equ	0xFE6
  4662                           postdec1	equ	0xFE5
  4663                           fsr1l	equ	0xFE1
  4664                           indf2	equ	0xFDF
  4665                           postinc2	equ	0xFDE
  4666                           postdec2	equ	0xFDD
  4667                           fsr2h	equ	0xFDA
  4668                           fsr2l	equ	0xFD9
  4669                           status	equ	0xFD8
  4670                           
  4671 ;; *************** function _go_straight *****************
  4672 ;; Defined at:
  4673 ;;		line 118 in file "cny70.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;		None
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;		None               void
  4680 ;; Registers used:
  4681 ;;		wreg, status,2, status,0, cstack
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4687 ;;      Params:         0       0       0       0       0       0       0       0       0
  4688 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4689 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4690 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4691 ;;Total ram usage:        0 bytes
  4692 ;; Hardware stack levels used:    1
  4693 ;; Hardware stack levels required when called:    8
  4694 ;; This function calls:
  4695 ;;		_PWM_DutyCycle1
  4696 ;;		_PWM_DutyCycle2
  4697 ;;		_motor_forward
  4698 ;; This function is called by:
  4699 ;;		_getCNY70Value
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text28
  4704  001DFE                     __ptext28:
  4705                           	opt stack 0
  4706  001DFE                     _go_straight:
  4707                           	opt stack 21
  4708                           
  4709                           ;cny70.c: 120: motor_forward();
  4710                           
  4711                           ;incstack = 0
  4712  001DFE  EC11  F00F         	call	_motor_forward	;wreg free
  4713                           
  4714                           ;cny70.c: 121: PWM_DutyCycle1(100);
  4715  001E02  0E64               	movlw	100
  4716  001E04  EC9A  F00B         	call	_PWM_DutyCycle1
  4717                           
  4718                           ;cny70.c: 122: PWM_DutyCycle2(100);
  4719  001E08  0E64               	movlw	100
  4720  001E0A  EC5C  F00B         	call	_PWM_DutyCycle2
  4721                           
  4722                           ;cny70.c: 123: return;
  4723  001E0E  0012               	return	
  4724  001E10                     __end_of_go_straight:
  4725                           	opt stack 0
  4726                           tblptru	equ	0xFF8
  4727                           tblptrh	equ	0xFF7
  4728                           tblptrl	equ	0xFF6
  4729                           tablat	equ	0xFF5
  4730                           prodh	equ	0xFF4
  4731                           prodl	equ	0xFF3
  4732                           intcon	equ	0xFF2
  4733                           indf0	equ	0xFEF
  4734                           postinc0	equ	0xFEE
  4735                           fsr0h	equ	0xFEA
  4736                           fsr0l	equ	0xFE9
  4737                           wreg	equ	0xFE8
  4738                           postinc1	equ	0xFE6
  4739                           postdec1	equ	0xFE5
  4740                           fsr1l	equ	0xFE1
  4741                           indf2	equ	0xFDF
  4742                           postinc2	equ	0xFDE
  4743                           postdec2	equ	0xFDD
  4744                           fsr2h	equ	0xFDA
  4745                           fsr2l	equ	0xFD9
  4746                           status	equ	0xFD8
  4747                           
  4748 ;; *************** function _motor_forward *****************
  4749 ;; Defined at:
  4750 ;;		line 47 in file "motor.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;		None
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;		None
  4755 ;; Return value:  Size  Location     Type
  4756 ;;		None               void
  4757 ;; Registers used:
  4758 ;;		None
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4764 ;;      Params:         0       0       0       0       0       0       0       0       0
  4765 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4767 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4768 ;;Total ram usage:        0 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; Hardware stack levels required when called:    5
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_go_straight
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           	psect	text29
  4779  001E22                     __ptext29:
  4780                           	opt stack 0
  4781  001E22                     _motor_forward:
  4782                           	opt stack 23
  4783                           
  4784                           ;motor.c: 49: PORTDbits.RD7 = 1;
  4785                           
  4786                           ;incstack = 0
  4787  001E22  8E83               	bsf	3971,7,c	;volatile
  4788                           
  4789                           ;motor.c: 50: PORTDbits.RD4 = 0;
  4790  001E24  9883               	bcf	3971,4,c	;volatile
  4791                           
  4792                           ;motor.c: 51: PORTDbits.RD2 = 1;
  4793  001E26  8483               	bsf	3971,2,c	;volatile
  4794                           
  4795                           ;motor.c: 52: PORTDbits.RD3 = 0;
  4796  001E28  9683               	bcf	3971,3,c	;volatile
  4797                           
  4798                           ;motor.c: 54: return;
  4799  001E2A  0012               	return	
  4800  001E2C                     __end_of_motor_forward:
  4801                           	opt stack 0
  4802                           tblptru	equ	0xFF8
  4803                           tblptrh	equ	0xFF7
  4804                           tblptrl	equ	0xFF6
  4805                           tablat	equ	0xFF5
  4806                           prodh	equ	0xFF4
  4807                           prodl	equ	0xFF3
  4808                           intcon	equ	0xFF2
  4809                           indf0	equ	0xFEF
  4810                           postinc0	equ	0xFEE
  4811                           fsr0h	equ	0xFEA
  4812                           fsr0l	equ	0xFE9
  4813                           wreg	equ	0xFE8
  4814                           postinc1	equ	0xFE6
  4815                           postdec1	equ	0xFE5
  4816                           fsr1l	equ	0xFE1
  4817                           indf2	equ	0xFDF
  4818                           postinc2	equ	0xFDE
  4819                           postdec2	equ	0xFDD
  4820                           fsr2h	equ	0xFDA
  4821                           fsr2l	equ	0xFD9
  4822                           status	equ	0xFD8
  4823                           
  4824 ;; *************** function _PWM_DutyCycle2 *****************
  4825 ;; Defined at:
  4826 ;;		line 55 in file "pwm.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;  percentageDu    1    wreg     unsigned char 
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;  percentageDu    1   48[BANK0 ] unsigned char 
  4831 ;;  DC              2   49[BANK0 ] unsigned int 
  4832 ;;  DutyCycle       2   46[BANK0 ] unsigned int 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;		None               void
  4835 ;; Registers used:
  4836 ;;		wreg, status,2, status,0, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4842 ;;      Params:         0       0       0       0       0       0       0       0       0
  4843 ;;      Locals:         0       5       0       0       0       0       0       0       0
  4844 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4845 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4846 ;;Total ram usage:        9 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:    7
  4849 ;; This function calls:
  4850 ;;		_SetDCPWM2
  4851 ;;		___ftmul
  4852 ;;		___fttol
  4853 ;;		___lbtoft
  4854 ;; This function is called by:
  4855 ;;		_Inicializa_Driveby
  4856 ;;		_Comando_Tablet
  4857 ;;		_right
  4858 ;;		_left
  4859 ;;		_go_straight
  4860 ;;		_go_back
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           	psect	text30
  4865  0016B8                     __ptext30:
  4866                           	opt stack 0
  4867  0016B8                     _PWM_DutyCycle2:
  4868                           	opt stack 21
  4869                           
  4870                           ;incstack = 0
  4871                           ;PWM_DutyCycle2@percentageDuty stored from wreg
  4872  0016B8  0100               	movlb	0	; () banked
  4873  0016BA  6FDC               	movwf	PWM_DutyCycle2@percentageDuty& (0+255),b
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;pwm.c: 57: unsigned int DC = 0, DutyCycle = 0;
  4877  0016BC  0E00               	movlw	0
  4878  0016BE  0100               	movlb	0	; () banked
  4879  0016C0  6FDE               	movwf	(PWM_DutyCycle2@DC+1)& (0+255),b
  4880  0016C2  0E00               	movlw	0
  4881  0016C4  0100               	movlb	0	; () banked
  4882  0016C6  6FDD               	movwf	PWM_DutyCycle2@DC& (0+255),b
  4883  0016C8  0E00               	movlw	0
  4884  0016CA  0100               	movlb	0	; () banked
  4885  0016CC  6FDB               	movwf	(PWM_DutyCycle2@DutyCycle+1)& (0+255),b
  4886  0016CE  0E00               	movlw	0
  4887  0016D0  0100               	movlb	0	; () banked
  4888  0016D2  6FDA               	movwf	PWM_DutyCycle2@DutyCycle& (0+255),b
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;pwm.c: 59: DC = (unsigned int)(percentageDuty * 10.23);
  4892  0016D4  0EAE               	movlw	174
  4893  0016D6  0100               	movlb	0	; () banked
  4894  0016D8  6FBB               	movwf	___ftmul@f2& (0+255),b
  4895  0016DA  0E23               	movlw	35
  4896  0016DC  0100               	movlb	0	; () banked
  4897  0016DE  6FBC               	movwf	(___ftmul@f2+1)& (0+255),b
  4898  0016E0  0E41               	movlw	65
  4899  0016E2  0100               	movlb	0	; () banked
  4900  0016E4  6FBD               	movwf	(___ftmul@f2+2)& (0+255),b
  4901  0016E6  0100               	movlb	0	; () banked
  4902  0016E8  51DC               	movf	PWM_DutyCycle2@percentageDuty& (0+255),w,b
  4903  0016EA  EC35  F00E         	call	___lbtoft
  4904  0016EE  C0B4  F0B8         	movff	?___lbtoft,___ftmul@f1
  4905  0016F2  C0B5  F0B9         	movff	?___lbtoft+1,___ftmul@f1+1
  4906  0016F6  C0B6  F0BA         	movff	?___lbtoft+2,___ftmul@f1+2
  4907  0016FA  EC1E  F005         	call	___ftmul	;wreg free
  4908  0016FE  C0B8  F0C7         	movff	?___ftmul,___fttol@f1
  4909  001702  C0B9  F0C8         	movff	?___ftmul+1,___fttol@f1+1
  4910  001706  C0BA  F0C9         	movff	?___ftmul+2,___fttol@f1+2
  4911  00170A  ECD0  F005         	call	___fttol	;wreg free
  4912  00170E  C0C7  F0D6         	movff	?___fttol,??_PWM_DutyCycle2
  4913  001712  C0C8  F0D7         	movff	?___fttol+1,??_PWM_DutyCycle2+1
  4914  001716  C0C9  F0D8         	movff	?___fttol+2,??_PWM_DutyCycle2+2
  4915  00171A  C0CA  F0D9         	movff	?___fttol+3,??_PWM_DutyCycle2+3
  4916  00171E  C0D6  F0DD         	movff	??_PWM_DutyCycle2,PWM_DutyCycle2@DC
  4917  001722  C0D7  F0DE         	movff	??_PWM_DutyCycle2+1,PWM_DutyCycle2@DC+1
  4918                           
  4919                           ;pwm.c: 60: SetDCPWM2(DC);
  4920  001726  C0DD  F0AC         	movff	PWM_DutyCycle2@DC,SetDCPWM2@dutycycle
  4921  00172A  C0DE  F0AD         	movff	PWM_DutyCycle2@DC+1,SetDCPWM2@dutycycle+1
  4922  00172E  EC4C  F00D         	call	_SetDCPWM2	;wreg free
  4923                           
  4924                           ;pwm.c: 61: return;
  4925  001732  0012               	return	
  4926  001734                     __end_of_PWM_DutyCycle2:
  4927                           	opt stack 0
  4928                           tblptru	equ	0xFF8
  4929                           tblptrh	equ	0xFF7
  4930                           tblptrl	equ	0xFF6
  4931                           tablat	equ	0xFF5
  4932                           prodh	equ	0xFF4
  4933                           prodl	equ	0xFF3
  4934                           intcon	equ	0xFF2
  4935                           indf0	equ	0xFEF
  4936                           postinc0	equ	0xFEE
  4937                           fsr0h	equ	0xFEA
  4938                           fsr0l	equ	0xFE9
  4939                           wreg	equ	0xFE8
  4940                           postinc1	equ	0xFE6
  4941                           postdec1	equ	0xFE5
  4942                           fsr1l	equ	0xFE1
  4943                           indf2	equ	0xFDF
  4944                           postinc2	equ	0xFDE
  4945                           postdec2	equ	0xFDD
  4946                           fsr2h	equ	0xFDA
  4947                           fsr2l	equ	0xFD9
  4948                           status	equ	0xFD8
  4949                           
  4950 ;; *************** function _SetDCPWM2 *****************
  4951 ;; Defined at:
  4952 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2setdc.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  4957 ;; Return value:  Size  Location     Type
  4958 ;;		None               void
  4959 ;; Registers used:
  4960 ;;		wreg, status,2, status,0
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4966 ;;      Params:         0       2       0       0       0       0       0       0       0
  4967 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4968 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4969 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4970 ;;Total ram usage:        6 bytes
  4971 ;; Hardware stack levels used:    1
  4972 ;; Hardware stack levels required when called:    5
  4973 ;; This function calls:
  4974 ;;		Nothing
  4975 ;; This function is called by:
  4976 ;;		_PWM_DutyCycle2
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text31
  4981  001A98                     __ptext31:
  4982                           	opt stack 0
  4983  001A98                     _SetDCPWM2:
  4984                           	opt stack 22
  4985                           
  4986                           ;incstack = 0
  4987  001A98  0100               	movlb	0	; () banked
  4988  001A9A  C0AC  F0AE         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  4989  001A9E  0100               	movlb	0	; () banked
  4990  001AA0  C0AD  F0AF         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  4991  001AA4  0E06               	movlw	6
  4992  001AA6                     u1725:
  4993  001AA6  90D8               	bcf	status,0,c
  4994  001AA8  0100               	movlb	0	; () banked
  4995  001AAA  37AE               	rlcf	??_SetDCPWM2& (0+255),f,b
  4996  001AAC  37AF               	rlcf	(??_SetDCPWM2+1)& (0+255),f,b
  4997  001AAE  2EE8               	decfsz	wreg,f,c
  4998  001AB0  D7FA               	goto	u1725
  4999  001AB2  C0AE  F0B0         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  5000  001AB6  C0AF  F0B1         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  5001                           
  5002                           ; BSR set to: 0
  5003  001ABA  C0B1  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  5004  001ABE  C0B0  F0AE         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  5005  001AC2  0100               	movlb	0	; () banked
  5006  001AC4  90D8               	bcf	status,0,c
  5007  001AC6  33AE               	rrcf	??_SetDCPWM2& (0+255),f,b
  5008  001AC8  0100               	movlb	0	; () banked
  5009  001ACA  90D8               	bcf	status,0,c
  5010  001ACC  33AE               	rrcf	??_SetDCPWM2& (0+255),f,b
  5011  001ACE  0E30               	movlw	48
  5012  001AD0  0100               	movlb	0	; () banked
  5013  001AD2  17AE               	andwf	??_SetDCPWM2& (0+255),f,b
  5014  001AD4  50BA               	movf	4026,w,c	;volatile
  5015  001AD6  0BCF               	andlw	207
  5016  001AD8  0100               	movlb	0	; () banked
  5017  001ADA  11AE               	iorwf	??_SetDCPWM2& (0+255),w,b
  5018  001ADC  6EBA               	movwf	4026,c	;volatile
  5019                           
  5020                           ; BSR set to: 0
  5021  001ADE  0012               	return	
  5022  001AE0                     __end_of_SetDCPWM2:
  5023                           	opt stack 0
  5024                           tblptru	equ	0xFF8
  5025                           tblptrh	equ	0xFF7
  5026                           tblptrl	equ	0xFF6
  5027                           tablat	equ	0xFF5
  5028                           prodh	equ	0xFF4
  5029                           prodl	equ	0xFF3
  5030                           intcon	equ	0xFF2
  5031                           indf0	equ	0xFEF
  5032                           postinc0	equ	0xFEE
  5033                           fsr0h	equ	0xFEA
  5034                           fsr0l	equ	0xFE9
  5035                           wreg	equ	0xFE8
  5036                           postinc1	equ	0xFE6
  5037                           postdec1	equ	0xFE5
  5038                           fsr1l	equ	0xFE1
  5039                           indf2	equ	0xFDF
  5040                           postinc2	equ	0xFDE
  5041                           postdec2	equ	0xFDD
  5042                           fsr2h	equ	0xFDA
  5043                           fsr2l	equ	0xFD9
  5044                           status	equ	0xFD8
  5045                           
  5046 ;; *************** function _PWM_DutyCycle1 *****************
  5047 ;; Defined at:
  5048 ;;		line 33 in file "pwm.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;  percentageDu    1    wreg     unsigned char 
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;  percentageDu    1   48[BANK0 ] unsigned char 
  5053 ;;  DC              2   49[BANK0 ] unsigned int 
  5054 ;;  DutyCycle       2   46[BANK0 ] unsigned int 
  5055 ;; Return value:  Size  Location     Type
  5056 ;;		None               void
  5057 ;; Registers used:
  5058 ;;		wreg, status,2, status,0, cstack
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5064 ;;      Params:         0       0       0       0       0       0       0       0       0
  5065 ;;      Locals:         0       5       0       0       0       0       0       0       0
  5066 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5067 ;;      Totals:         0       9       0       0       0       0       0       0       0
  5068 ;;Total ram usage:        9 bytes
  5069 ;; Hardware stack levels used:    1
  5070 ;; Hardware stack levels required when called:    7
  5071 ;; This function calls:
  5072 ;;		_SetDCPWM1
  5073 ;;		___ftmul
  5074 ;;		___fttol
  5075 ;;		___lbtoft
  5076 ;; This function is called by:
  5077 ;;		_Inicializa_Driveby
  5078 ;;		_Comando_Tablet
  5079 ;;		_right
  5080 ;;		_left
  5081 ;;		_go_straight
  5082 ;;		_go_back
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           	psect	text32
  5087  001734                     __ptext32:
  5088                           	opt stack 0
  5089  001734                     _PWM_DutyCycle1:
  5090                           	opt stack 21
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;incstack = 0
  5094                           ;PWM_DutyCycle1@percentageDuty stored from wreg
  5095  001734  0100               	movlb	0	; () banked
  5096  001736  6FDC               	movwf	PWM_DutyCycle1@percentageDuty& (0+255),b
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;pwm.c: 35: unsigned int DC = 0, DutyCycle = 0;
  5100  001738  0E00               	movlw	0
  5101  00173A  0100               	movlb	0	; () banked
  5102  00173C  6FDE               	movwf	(PWM_DutyCycle1@DC+1)& (0+255),b
  5103  00173E  0E00               	movlw	0
  5104  001740  0100               	movlb	0	; () banked
  5105  001742  6FDD               	movwf	PWM_DutyCycle1@DC& (0+255),b
  5106  001744  0E00               	movlw	0
  5107  001746  0100               	movlb	0	; () banked
  5108  001748  6FDB               	movwf	(PWM_DutyCycle1@DutyCycle+1)& (0+255),b
  5109  00174A  0E00               	movlw	0
  5110  00174C  0100               	movlb	0	; () banked
  5111  00174E  6FDA               	movwf	PWM_DutyCycle1@DutyCycle& (0+255),b
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;pwm.c: 37: DC = (unsigned int)(percentageDuty * 10.23);
  5115  001750  0EAE               	movlw	174
  5116  001752  0100               	movlb	0	; () banked
  5117  001754  6FBB               	movwf	___ftmul@f2& (0+255),b
  5118  001756  0E23               	movlw	35
  5119  001758  0100               	movlb	0	; () banked
  5120  00175A  6FBC               	movwf	(___ftmul@f2+1)& (0+255),b
  5121  00175C  0E41               	movlw	65
  5122  00175E  0100               	movlb	0	; () banked
  5123  001760  6FBD               	movwf	(___ftmul@f2+2)& (0+255),b
  5124  001762  0100               	movlb	0	; () banked
  5125  001764  51DC               	movf	PWM_DutyCycle1@percentageDuty& (0+255),w,b
  5126  001766  EC35  F00E         	call	___lbtoft
  5127  00176A  C0B4  F0B8         	movff	?___lbtoft,___ftmul@f1
  5128  00176E  C0B5  F0B9         	movff	?___lbtoft+1,___ftmul@f1+1
  5129  001772  C0B6  F0BA         	movff	?___lbtoft+2,___ftmul@f1+2
  5130  001776  EC1E  F005         	call	___ftmul	;wreg free
  5131  00177A  C0B8  F0C7         	movff	?___ftmul,___fttol@f1
  5132  00177E  C0B9  F0C8         	movff	?___ftmul+1,___fttol@f1+1
  5133  001782  C0BA  F0C9         	movff	?___ftmul+2,___fttol@f1+2
  5134  001786  ECD0  F005         	call	___fttol	;wreg free
  5135  00178A  C0C7  F0D6         	movff	?___fttol,??_PWM_DutyCycle1
  5136  00178E  C0C8  F0D7         	movff	?___fttol+1,??_PWM_DutyCycle1+1
  5137  001792  C0C9  F0D8         	movff	?___fttol+2,??_PWM_DutyCycle1+2
  5138  001796  C0CA  F0D9         	movff	?___fttol+3,??_PWM_DutyCycle1+3
  5139  00179A  C0D6  F0DD         	movff	??_PWM_DutyCycle1,PWM_DutyCycle1@DC
  5140  00179E  C0D7  F0DE         	movff	??_PWM_DutyCycle1+1,PWM_DutyCycle1@DC+1
  5141                           
  5142                           ;pwm.c: 38: SetDCPWM1(DC);
  5143  0017A2  C0DD  F0AC         	movff	PWM_DutyCycle1@DC,SetDCPWM1@dutycycle
  5144  0017A6  C0DE  F0AD         	movff	PWM_DutyCycle1@DC+1,SetDCPWM1@dutycycle+1
  5145  0017AA  EC70  F00D         	call	_SetDCPWM1	;wreg free
  5146                           
  5147                           ;pwm.c: 39: return;
  5148  0017AE  0012               	return	
  5149  0017B0                     __end_of_PWM_DutyCycle1:
  5150                           	opt stack 0
  5151                           tblptru	equ	0xFF8
  5152                           tblptrh	equ	0xFF7
  5153                           tblptrl	equ	0xFF6
  5154                           tablat	equ	0xFF5
  5155                           prodh	equ	0xFF4
  5156                           prodl	equ	0xFF3
  5157                           intcon	equ	0xFF2
  5158                           indf0	equ	0xFEF
  5159                           postinc0	equ	0xFEE
  5160                           fsr0h	equ	0xFEA
  5161                           fsr0l	equ	0xFE9
  5162                           wreg	equ	0xFE8
  5163                           postinc1	equ	0xFE6
  5164                           postdec1	equ	0xFE5
  5165                           fsr1l	equ	0xFE1
  5166                           indf2	equ	0xFDF
  5167                           postinc2	equ	0xFDE
  5168                           postdec2	equ	0xFDD
  5169                           fsr2h	equ	0xFDA
  5170                           fsr2l	equ	0xFD9
  5171                           status	equ	0xFD8
  5172                           
  5173 ;; *************** function ___lbtoft *****************
  5174 ;; Defined at:
  5175 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lbtoft.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;  c               1    wreg     unsigned char 
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;  c               1   11[BANK0 ] unsigned char 
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  3    8[BANK0 ] float 
  5182 ;; Registers used:
  5183 ;;		wreg, status,2, status,0, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5189 ;;      Params:         0       3       0       0       0       0       0       0       0
  5190 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5192 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5193 ;;Total ram usage:        4 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:    6
  5196 ;; This function calls:
  5197 ;;		___ftpack
  5198 ;; This function is called by:
  5199 ;;		_PWM_DutyCycle1
  5200 ;;		_PWM_DutyCycle2
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           	psect	text33
  5205  001C6A                     __ptext33:
  5206                           	opt stack 0
  5207  001C6A                     ___lbtoft:
  5208                           	opt stack 21
  5209                           
  5210                           ;incstack = 0
  5211                           ;___lbtoft@c stored from wreg
  5212  001C6A  0100               	movlb	0	; () banked
  5213  001C6C  6FB7               	movwf	___lbtoft@c& (0+255),b
  5214                           
  5215                           ; BSR set to: 0
  5216  001C6E  0100               	movlb	0	; () banked
  5217  001C70  51B7               	movf	___lbtoft@c& (0+255),w,b
  5218  001C72  0100               	movlb	0	; () banked
  5219  001C74  6FAC               	movwf	___ftpack@arg& (0+255),b
  5220  001C76  0100               	movlb	0	; () banked
  5221  001C78  6BAD               	clrf	(___ftpack@arg+1)& (0+255),b
  5222  001C7A  0100               	movlb	0	; () banked
  5223  001C7C  6BAE               	clrf	(___ftpack@arg+2)& (0+255),b
  5224  001C7E  0E8E               	movlw	142
  5225  001C80  0100               	movlb	0	; () banked
  5226  001C82  6FAF               	movwf	___ftpack@exp& (0+255),b
  5227  001C84  0E00               	movlw	0
  5228  001C86  0100               	movlb	0	; () banked
  5229  001C88  6FB0               	movwf	___ftpack@sign& (0+255),b
  5230  001C8A  EC75  F006         	call	___ftpack	;wreg free
  5231  001C8E  C0AC  F0B4         	movff	?___ftpack,?___lbtoft
  5232  001C92  C0AD  F0B5         	movff	?___ftpack+1,?___lbtoft+1
  5233  001C96  C0AE  F0B6         	movff	?___ftpack+2,?___lbtoft+2
  5234  001C9A  0012               	return	
  5235  001C9C                     __end_of___lbtoft:
  5236                           	opt stack 0
  5237                           tblptru	equ	0xFF8
  5238                           tblptrh	equ	0xFF7
  5239                           tblptrl	equ	0xFF6
  5240                           tablat	equ	0xFF5
  5241                           prodh	equ	0xFF4
  5242                           prodl	equ	0xFF3
  5243                           intcon	equ	0xFF2
  5244                           indf0	equ	0xFEF
  5245                           postinc0	equ	0xFEE
  5246                           fsr0h	equ	0xFEA
  5247                           fsr0l	equ	0xFE9
  5248                           wreg	equ	0xFE8
  5249                           postinc1	equ	0xFE6
  5250                           postdec1	equ	0xFE5
  5251                           fsr1l	equ	0xFE1
  5252                           indf2	equ	0xFDF
  5253                           postinc2	equ	0xFDE
  5254                           postdec2	equ	0xFDD
  5255                           fsr2h	equ	0xFDA
  5256                           fsr2l	equ	0xFD9
  5257                           status	equ	0xFD8
  5258                           
  5259 ;; *************** function ___fttol *****************
  5260 ;; Defined at:
  5261 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  f1              3   27[BANK0 ] float 
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;  lval            4   37[BANK0 ] unsigned long 
  5266 ;;  exp1            1   41[BANK0 ] unsigned char 
  5267 ;;  sign1           1   36[BANK0 ] unsigned char 
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  4   27[BANK0 ] long 
  5270 ;; Registers used:
  5271 ;;		wreg, status,2, status,0
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5277 ;;      Params:         0       4       0       0       0       0       0       0       0
  5278 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5279 ;;      Temps:          0       5       0       0       0       0       0       0       0
  5280 ;;      Totals:         0      15       0       0       0       0       0       0       0
  5281 ;;Total ram usage:       15 bytes
  5282 ;; Hardware stack levels used:    1
  5283 ;; Hardware stack levels required when called:    5
  5284 ;; This function calls:
  5285 ;;		Nothing
  5286 ;; This function is called by:
  5287 ;;		_PWM_DutyCycle1
  5288 ;;		_PWM_DutyCycle2
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           	psect	text34
  5293  000BA0                     __ptext34:
  5294                           	opt stack 0
  5295  000BA0                     ___fttol:
  5296                           	opt stack 22
  5297                           
  5298                           ;incstack = 0
  5299  000BA0  0100               	movlb	0	; () banked
  5300  000BA2  C0C9  F0CB         	movff	___fttol@f1+2,??___fttol
  5301  000BA6  0100               	movlb	0	; () banked
  5302  000BA8  6BCC               	clrf	(??___fttol+1)& (0+255),b
  5303  000BAA  6BCD               	clrf	(??___fttol+2)& (0+255),b
  5304  000BAC  0100               	movlb	0	; () banked
  5305  000BAE  35C8               	rlcf	(___fttol@f1+1)& (0+255),w,b
  5306  000BB0  0100               	movlb	0	; () banked
  5307  000BB2  37CB               	rlcf	??___fttol& (0+255),f,b
  5308  000BB4  E301               	bnc	u1791
  5309  000BB6  81CC               	bsf	(??___fttol+1)& (0+255),0,b
  5310  000BB8                     u1791:
  5311  000BB8  0100               	movlb	0	; () banked
  5312  000BBA  51CB               	movf	??___fttol& (0+255),w,b
  5313  000BBC  0100               	movlb	0	; () banked
  5314  000BBE  6FD5               	movwf	___fttol@exp1& (0+255),b
  5315  000BC0  0100               	movlb	0	; () banked
  5316  000BC2  67D5               	tstfsz	___fttol@exp1& (0+255),b
  5317  000BC4  D001               	goto	l2372
  5318  000BC6  D059               	goto	u1840
  5319  000BC8                     l2372:
  5320                           
  5321                           ; BSR set to: 0
  5322  000BC8  0E17               	movlw	23
  5323  000BCA  0100               	movlb	0	; () banked
  5324  000BCC  6FCB               	movwf	??___fttol& (0+255),b
  5325  000BCE  0100               	movlb	0	; () banked
  5326  000BD0  C0C7  F0CC         	movff	___fttol@f1,??___fttol+1
  5327  000BD4  0100               	movlb	0	; () banked
  5328  000BD6  C0C8  F0CD         	movff	___fttol@f1+1,??___fttol+2
  5329  000BDA  0100               	movlb	0	; () banked
  5330  000BDC  C0C9  F0CE         	movff	___fttol@f1+2,??___fttol+3
  5331  000BE0  0100               	movlb	0	; () banked
  5332  000BE2  29CB               	incf	??___fttol& (0+255),w,b
  5333  000BE4  0100               	movlb	0	; () banked
  5334  000BE6  6FCF               	movwf	(??___fttol+4)& (0+255),b
  5335  000BE8  D005               	goto	u1810
  5336  000BEA                     u1815:
  5337  000BEA  0100               	movlb	0	; () banked
  5338  000BEC  90D8               	bcf	status,0,c
  5339  000BEE  33CE               	rrcf	(??___fttol+3)& (0+255),f,b
  5340  000BF0  33CD               	rrcf	(??___fttol+2)& (0+255),f,b
  5341  000BF2  33CC               	rrcf	(??___fttol+1)& (0+255),f,b
  5342  000BF4                     u1810:
  5343  000BF4  0100               	movlb	0	; () banked
  5344  000BF6  2FCF               	decfsz	(??___fttol+4)& (0+255),f,b
  5345  000BF8  D7F8               	goto	u1815
  5346  000BFA  0100               	movlb	0	; () banked
  5347  000BFC  51CC               	movf	(??___fttol+1)& (0+255),w,b
  5348  000BFE  0100               	movlb	0	; () banked
  5349  000C00  6FD0               	movwf	___fttol@sign1& (0+255),b
  5350                           
  5351                           ; BSR set to: 0
  5352  000C02  0100               	movlb	0	; () banked
  5353  000C04  8FC8               	bsf	(___fttol@f1+1)& (0+255),7,b
  5354                           
  5355                           ; BSR set to: 0
  5356  000C06  0EFF               	movlw	255
  5357  000C08  0100               	movlb	0	; () banked
  5358  000C0A  17C7               	andwf	___fttol@f1& (0+255),f,b
  5359  000C0C  0EFF               	movlw	255
  5360  000C0E  0100               	movlb	0	; () banked
  5361  000C10  17C8               	andwf	(___fttol@f1+1)& (0+255),f,b
  5362  000C12  0E00               	movlw	0
  5363  000C14  0100               	movlb	0	; () banked
  5364  000C16  17C9               	andwf	(___fttol@f1+2)& (0+255),f,b
  5365                           
  5366                           ; BSR set to: 0
  5367  000C18  0100               	movlb	0	; () banked
  5368  000C1A  51C7               	movf	___fttol@f1& (0+255),w,b
  5369  000C1C  0100               	movlb	0	; () banked
  5370  000C1E  6FD1               	movwf	___fttol@lval& (0+255),b
  5371  000C20  0100               	movlb	0	; () banked
  5372  000C22  51C8               	movf	(___fttol@f1+1)& (0+255),w,b
  5373  000C24  0100               	movlb	0	; () banked
  5374  000C26  6FD2               	movwf	(___fttol@lval+1)& (0+255),b
  5375  000C28  0100               	movlb	0	; () banked
  5376  000C2A  51C9               	movf	(___fttol@f1+2)& (0+255),w,b
  5377  000C2C  0100               	movlb	0	; () banked
  5378  000C2E  6FD3               	movwf	(___fttol@lval+2)& (0+255),b
  5379  000C30  0100               	movlb	0	; () banked
  5380  000C32  6BD4               	clrf	(___fttol@lval+3)& (0+255),b
  5381                           
  5382                           ; BSR set to: 0
  5383  000C34  0E8E               	movlw	142
  5384  000C36  0100               	movlb	0	; () banked
  5385  000C38  5FD5               	subwf	___fttol@exp1& (0+255),f,b
  5386                           
  5387                           ; BSR set to: 0
  5388  000C3A  0100               	movlb	0	; () banked
  5389  000C3C  AFD5               	btfss	___fttol@exp1& (0+255),7,b
  5390  000C3E  D019               	goto	l2394
  5391                           
  5392                           ; BSR set to: 0
  5393  000C40  0100               	movlb	0	; () banked
  5394  000C42  51D5               	movf	___fttol@exp1& (0+255),w,b
  5395  000C44  0A80               	xorlw	128
  5396  000C46  0100               	movlb	0	; () banked
  5397  000C48  6FCB               	movwf	??___fttol& (0+255),b
  5398  000C4A  0EF1               	movlw	241
  5399  000C4C  0A80               	xorlw	128
  5400  000C4E  0100               	movlb	0	; () banked
  5401  000C50  5DCB               	subwf	??___fttol& (0+255),w,b
  5402  000C52  A0D8               	btfss	status,0,c
  5403  000C54  D012               	goto	u1840
  5404  000C56                     l2390:
  5405                           
  5406                           ; BSR set to: 0
  5407  000C56  0100               	movlb	0	; () banked
  5408  000C58  90D8               	bcf	status,0,c
  5409  000C5A  0100               	movlb	0	; () banked
  5410  000C5C  33D4               	rrcf	(___fttol@lval+3)& (0+255),f,b
  5411  000C5E  0100               	movlb	0	; () banked
  5412  000C60  33D3               	rrcf	(___fttol@lval+2)& (0+255),f,b
  5413  000C62  0100               	movlb	0	; () banked
  5414  000C64  33D2               	rrcf	(___fttol@lval+1)& (0+255),f,b
  5415  000C66  0100               	movlb	0	; () banked
  5416  000C68  33D1               	rrcf	___fttol@lval& (0+255),f,b
  5417                           
  5418                           ; BSR set to: 0
  5419  000C6A  0100               	movlb	0	; () banked
  5420  000C6C  3FD5               	incfsz	___fttol@exp1& (0+255),f,b
  5421  000C6E  D7F3               	goto	l2390
  5422  000C70  D020               	goto	l2404
  5423  000C72                     l2394:
  5424                           
  5425                           ; BSR set to: 0
  5426  000C72  0E17               	movlw	23
  5427  000C74  0100               	movlb	0	; () banked
  5428  000C76  65D5               	cpfsgt	___fttol@exp1& (0+255),b
  5429  000C78  D019               	goto	l2402
  5430  000C7A                     u1840:
  5431                           
  5432                           ; BSR set to: 0
  5433  000C7A  0E00               	movlw	0
  5434  000C7C  0100               	movlb	0	; () banked
  5435  000C7E  6FC7               	movwf	?___fttol& (0+255),b
  5436  000C80  0E00               	movlw	0
  5437  000C82  0100               	movlb	0	; () banked
  5438  000C84  6FC8               	movwf	(?___fttol+1)& (0+255),b
  5439  000C86  0E00               	movlw	0
  5440  000C88  0100               	movlb	0	; () banked
  5441  000C8A  6FC9               	movwf	(?___fttol+2)& (0+255),b
  5442  000C8C  0E00               	movlw	0
  5443  000C8E  0100               	movlb	0	; () banked
  5444  000C90  6FCA               	movwf	(?___fttol+3)& (0+255),b
  5445  000C92  D02A               	goto	l995
  5446  000C94                     l2400:
  5447                           
  5448                           ; BSR set to: 0
  5449  000C94  0100               	movlb	0	; () banked
  5450  000C96  90D8               	bcf	status,0,c
  5451  000C98  0100               	movlb	0	; () banked
  5452  000C9A  37D1               	rlcf	___fttol@lval& (0+255),f,b
  5453  000C9C  0100               	movlb	0	; () banked
  5454  000C9E  37D2               	rlcf	(___fttol@lval+1)& (0+255),f,b
  5455  000CA0  0100               	movlb	0	; () banked
  5456  000CA2  37D3               	rlcf	(___fttol@lval+2)& (0+255),f,b
  5457  000CA4  0100               	movlb	0	; () banked
  5458  000CA6  37D4               	rlcf	(___fttol@lval+3)& (0+255),f,b
  5459  000CA8  0100               	movlb	0	; () banked
  5460  000CAA  07D5               	decf	___fttol@exp1& (0+255),f,b
  5461  000CAC                     l2402:
  5462                           
  5463                           ; BSR set to: 0
  5464  000CAC  0100               	movlb	0	; () banked
  5465  000CAE  67D5               	tstfsz	___fttol@exp1& (0+255),b
  5466  000CB0  D7F1               	goto	l2400
  5467  000CB2                     l2404:
  5468                           
  5469                           ; BSR set to: 0
  5470  000CB2  0100               	movlb	0	; () banked
  5471  000CB4  51D0               	movf	___fttol@sign1& (0+255),w,b
  5472  000CB6  B4D8               	btfsc	status,2,c
  5473  000CB8  D00F               	goto	l2408
  5474                           
  5475                           ; BSR set to: 0
  5476  000CBA  0100               	movlb	0	; () banked
  5477  000CBC  1FD4               	comf	(___fttol@lval+3)& (0+255),f,b
  5478  000CBE  0100               	movlb	0	; () banked
  5479  000CC0  1FD3               	comf	(___fttol@lval+2)& (0+255),f,b
  5480  000CC2  0100               	movlb	0	; () banked
  5481  000CC4  1FD2               	comf	(___fttol@lval+1)& (0+255),f,b
  5482  000CC6  0100               	movlb	0	; () banked
  5483  000CC8  6DD1               	negf	___fttol@lval& (0+255),b
  5484  000CCA  0E00               	movlw	0
  5485  000CCC  0100               	movlb	0	; () banked
  5486  000CCE  23D2               	addwfc	(___fttol@lval+1)& (0+255),f,b
  5487  000CD0  0100               	movlb	0	; () banked
  5488  000CD2  23D3               	addwfc	(___fttol@lval+2)& (0+255),f,b
  5489  000CD4  0100               	movlb	0	; () banked
  5490  000CD6  23D4               	addwfc	(___fttol@lval+3)& (0+255),f,b
  5491  000CD8                     l2408:
  5492                           
  5493                           ; BSR set to: 0
  5494  000CD8  C0D1  F0C7         	movff	___fttol@lval,?___fttol
  5495  000CDC  C0D2  F0C8         	movff	___fttol@lval+1,?___fttol+1
  5496  000CE0  C0D3  F0C9         	movff	___fttol@lval+2,?___fttol+2
  5497  000CE4  C0D4  F0CA         	movff	___fttol@lval+3,?___fttol+3
  5498  000CE8                     l995:
  5499                           
  5500                           ; BSR set to: 0
  5501  000CE8  0012               	return	
  5502  000CEA                     __end_of___fttol:
  5503                           	opt stack 0
  5504                           tblptru	equ	0xFF8
  5505                           tblptrh	equ	0xFF7
  5506                           tblptrl	equ	0xFF6
  5507                           tablat	equ	0xFF5
  5508                           prodh	equ	0xFF4
  5509                           prodl	equ	0xFF3
  5510                           intcon	equ	0xFF2
  5511                           indf0	equ	0xFEF
  5512                           postinc0	equ	0xFEE
  5513                           fsr0h	equ	0xFEA
  5514                           fsr0l	equ	0xFE9
  5515                           wreg	equ	0xFE8
  5516                           postinc1	equ	0xFE6
  5517                           postdec1	equ	0xFE5
  5518                           fsr1l	equ	0xFE1
  5519                           indf2	equ	0xFDF
  5520                           postinc2	equ	0xFDE
  5521                           postdec2	equ	0xFDD
  5522                           fsr2h	equ	0xFDA
  5523                           fsr2l	equ	0xFD9
  5524                           status	equ	0xFD8
  5525                           
  5526 ;; *************** function ___ftmul *****************
  5527 ;; Defined at:
  5528 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;  f1              3   12[BANK0 ] float 
  5531 ;;  f2              3   15[BANK0 ] float 
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  5534 ;;  sign            1   26[BANK0 ] unsigned char 
  5535 ;;  cntr            1   25[BANK0 ] unsigned char 
  5536 ;;  exp             1   21[BANK0 ] unsigned char 
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  3   12[BANK0 ] float 
  5539 ;; Registers used:
  5540 ;;		wreg, status,2, status,0, cstack
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5546 ;;      Params:         0       6       0       0       0       0       0       0       0
  5547 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5548 ;;      Temps:          0       3       0       0       0       0       0       0       0
  5549 ;;      Totals:         0      15       0       0       0       0       0       0       0
  5550 ;;Total ram usage:       15 bytes
  5551 ;; Hardware stack levels used:    1
  5552 ;; Hardware stack levels required when called:    6
  5553 ;; This function calls:
  5554 ;;		___ftpack
  5555 ;; This function is called by:
  5556 ;;		_PWM_DutyCycle1
  5557 ;;		_PWM_DutyCycle2
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           	psect	text35
  5562  000A3C                     __ptext35:
  5563                           	opt stack 0
  5564  000A3C                     ___ftmul:
  5565                           	opt stack 21
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;incstack = 0
  5569  000A3C  0100               	movlb	0	; () banked
  5570  000A3E  C0BA  F0BE         	movff	___ftmul@f1+2,??___ftmul
  5571  000A42  0100               	movlb	0	; () banked
  5572  000A44  6BBF               	clrf	(??___ftmul+1)& (0+255),b
  5573  000A46  6BC0               	clrf	(??___ftmul+2)& (0+255),b
  5574  000A48  0100               	movlb	0	; () banked
  5575  000A4A  35B9               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  5576  000A4C  0100               	movlb	0	; () banked
  5577  000A4E  37BE               	rlcf	??___ftmul& (0+255),f,b
  5578  000A50  E301               	bnc	u1731
  5579  000A52  81BF               	bsf	(??___ftmul+1)& (0+255),0,b
  5580  000A54                     u1731:
  5581  000A54  0100               	movlb	0	; () banked
  5582  000A56  51BE               	movf	??___ftmul& (0+255),w,b
  5583  000A58  0100               	movlb	0	; () banked
  5584  000A5A  6FC1               	movwf	___ftmul@exp& (0+255),b
  5585  000A5C  0100               	movlb	0	; () banked
  5586  000A5E  67C1               	tstfsz	___ftmul@exp& (0+255),b
  5587  000A60  D001               	goto	l2324
  5588  000A62  D013               	goto	u1760
  5589  000A64                     l2324:
  5590                           
  5591                           ; BSR set to: 0
  5592  000A64  0100               	movlb	0	; () banked
  5593  000A66  C0BD  F0BE         	movff	___ftmul@f2+2,??___ftmul
  5594  000A6A  0100               	movlb	0	; () banked
  5595  000A6C  6BBF               	clrf	(??___ftmul+1)& (0+255),b
  5596  000A6E  6BC0               	clrf	(??___ftmul+2)& (0+255),b
  5597  000A70  0100               	movlb	0	; () banked
  5598  000A72  35BC               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  5599  000A74  0100               	movlb	0	; () banked
  5600  000A76  37BE               	rlcf	??___ftmul& (0+255),f,b
  5601  000A78  E301               	bnc	u1751
  5602  000A7A  81BF               	bsf	(??___ftmul+1)& (0+255),0,b
  5603  000A7C                     u1751:
  5604  000A7C  0100               	movlb	0	; () banked
  5605  000A7E  51BE               	movf	??___ftmul& (0+255),w,b
  5606  000A80  0100               	movlb	0	; () banked
  5607  000A82  6FC6               	movwf	___ftmul@sign& (0+255),b
  5608  000A84  0100               	movlb	0	; () banked
  5609  000A86  67C6               	tstfsz	___ftmul@sign& (0+255),b
  5610  000A88  D00A               	goto	l2330
  5611  000A8A                     u1760:
  5612                           
  5613                           ; BSR set to: 0
  5614  000A8A  0E00               	movlw	0
  5615  000A8C  0100               	movlb	0	; () banked
  5616  000A8E  6FB8               	movwf	?___ftmul& (0+255),b
  5617  000A90  0E00               	movlw	0
  5618  000A92  0100               	movlb	0	; () banked
  5619  000A94  6FB9               	movwf	(?___ftmul+1)& (0+255),b
  5620  000A96  0E00               	movlw	0
  5621  000A98  0100               	movlb	0	; () banked
  5622  000A9A  6FBA               	movwf	(?___ftmul+2)& (0+255),b
  5623  000A9C  D080               	goto	l975
  5624  000A9E                     l2330:
  5625                           
  5626                           ; BSR set to: 0
  5627  000A9E  0100               	movlb	0	; () banked
  5628  000AA0  51C6               	movf	___ftmul@sign& (0+255),w,b
  5629  000AA2  0F7B               	addlw	123
  5630  000AA4  0100               	movlb	0	; () banked
  5631  000AA6  27C1               	addwf	___ftmul@exp& (0+255),f,b
  5632                           
  5633                           ; BSR set to: 0
  5634  000AA8  C0BA  F0C6         	movff	___ftmul@f1+2,___ftmul@sign
  5635  000AAC  0100               	movlb	0	; () banked
  5636  000AAE  51BD               	movf	(___ftmul@f2+2)& (0+255),w,b
  5637  000AB0  0100               	movlb	0	; () banked
  5638  000AB2  1BC6               	xorwf	___ftmul@sign& (0+255),f,b
  5639  000AB4  0E80               	movlw	128
  5640  000AB6  0100               	movlb	0	; () banked
  5641  000AB8  17C6               	andwf	___ftmul@sign& (0+255),f,b
  5642                           
  5643                           ; BSR set to: 0
  5644  000ABA  0100               	movlb	0	; () banked
  5645  000ABC  8FB9               	bsf	(___ftmul@f1+1)& (0+255),7,b
  5646                           
  5647                           ; BSR set to: 0
  5648  000ABE  0100               	movlb	0	; () banked
  5649  000AC0  8FBC               	bsf	(___ftmul@f2+1)& (0+255),7,b
  5650                           
  5651                           ; BSR set to: 0
  5652  000AC2  0EFF               	movlw	255
  5653  000AC4  0100               	movlb	0	; () banked
  5654  000AC6  17BB               	andwf	___ftmul@f2& (0+255),f,b
  5655  000AC8  0EFF               	movlw	255
  5656  000ACA  0100               	movlb	0	; () banked
  5657  000ACC  17BC               	andwf	(___ftmul@f2+1)& (0+255),f,b
  5658  000ACE  0E00               	movlw	0
  5659  000AD0  0100               	movlb	0	; () banked
  5660  000AD2  17BD               	andwf	(___ftmul@f2+2)& (0+255),f,b
  5661                           
  5662                           ; BSR set to: 0
  5663  000AD4  0E00               	movlw	0
  5664  000AD6  0100               	movlb	0	; () banked
  5665  000AD8  6FC2               	movwf	___ftmul@f3_as_product& (0+255),b
  5666  000ADA  0E00               	movlw	0
  5667  000ADC  0100               	movlb	0	; () banked
  5668  000ADE  6FC3               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  5669  000AE0  0E00               	movlw	0
  5670  000AE2  0100               	movlb	0	; () banked
  5671  000AE4  6FC4               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  5672                           
  5673                           ; BSR set to: 0
  5674  000AE6  0E07               	movlw	7
  5675  000AE8  0100               	movlb	0	; () banked
  5676  000AEA  6FC5               	movwf	___ftmul@cntr& (0+255),b
  5677  000AEC                     l2344:
  5678                           
  5679                           ; BSR set to: 0
  5680  000AEC  0100               	movlb	0	; () banked
  5681  000AEE  A1B8               	btfss	___ftmul@f1& (0+255),0,b
  5682  000AF0  D00C               	goto	l2348
  5683                           
  5684                           ; BSR set to: 0
  5685  000AF2  0100               	movlb	0	; () banked
  5686  000AF4  51BB               	movf	___ftmul@f2& (0+255),w,b
  5687  000AF6  0100               	movlb	0	; () banked
  5688  000AF8  27C2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5689  000AFA  0100               	movlb	0	; () banked
  5690  000AFC  51BC               	movf	(___ftmul@f2+1)& (0+255),w,b
  5691  000AFE  0100               	movlb	0	; () banked
  5692  000B00  23C3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5693  000B02  0100               	movlb	0	; () banked
  5694  000B04  51BD               	movf	(___ftmul@f2+2)& (0+255),w,b
  5695  000B06  0100               	movlb	0	; () banked
  5696  000B08  23C4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5697  000B0A                     l2348:
  5698                           
  5699                           ; BSR set to: 0
  5700  000B0A  0100               	movlb	0	; () banked
  5701  000B0C  90D8               	bcf	status,0,c
  5702  000B0E  0100               	movlb	0	; () banked
  5703  000B10  33BA               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5704  000B12  0100               	movlb	0	; () banked
  5705  000B14  33B9               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5706  000B16  0100               	movlb	0	; () banked
  5707  000B18  33B8               	rrcf	___ftmul@f1& (0+255),f,b
  5708  000B1A  0100               	movlb	0	; () banked
  5709  000B1C  90D8               	bcf	status,0,c
  5710  000B1E  0100               	movlb	0	; () banked
  5711  000B20  37BB               	rlcf	___ftmul@f2& (0+255),f,b
  5712  000B22  0100               	movlb	0	; () banked
  5713  000B24  37BC               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  5714  000B26  0100               	movlb	0	; () banked
  5715  000B28  37BD               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  5716                           
  5717                           ; BSR set to: 0
  5718  000B2A  0100               	movlb	0	; () banked
  5719  000B2C  2FC5               	decfsz	___ftmul@cntr& (0+255),f,b
  5720  000B2E  D7DE               	goto	l2344
  5721                           
  5722                           ; BSR set to: 0
  5723                           
  5724                           ; BSR set to: 0
  5725  000B30  0E09               	movlw	9
  5726  000B32  0100               	movlb	0	; () banked
  5727  000B34  6FC5               	movwf	___ftmul@cntr& (0+255),b
  5728  000B36                     l2354:
  5729                           
  5730                           ; BSR set to: 0
  5731  000B36  0100               	movlb	0	; () banked
  5732  000B38  A1B8               	btfss	___ftmul@f1& (0+255),0,b
  5733  000B3A  D00C               	goto	l2358
  5734                           
  5735                           ; BSR set to: 0
  5736  000B3C  0100               	movlb	0	; () banked
  5737  000B3E  51BB               	movf	___ftmul@f2& (0+255),w,b
  5738  000B40  0100               	movlb	0	; () banked
  5739  000B42  27C2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5740  000B44  0100               	movlb	0	; () banked
  5741  000B46  51BC               	movf	(___ftmul@f2+1)& (0+255),w,b
  5742  000B48  0100               	movlb	0	; () banked
  5743  000B4A  23C3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5744  000B4C  0100               	movlb	0	; () banked
  5745  000B4E  51BD               	movf	(___ftmul@f2+2)& (0+255),w,b
  5746  000B50  0100               	movlb	0	; () banked
  5747  000B52  23C4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5748  000B54                     l2358:
  5749                           
  5750                           ; BSR set to: 0
  5751  000B54  0100               	movlb	0	; () banked
  5752  000B56  90D8               	bcf	status,0,c
  5753  000B58  0100               	movlb	0	; () banked
  5754  000B5A  33BA               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5755  000B5C  0100               	movlb	0	; () banked
  5756  000B5E  33B9               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5757  000B60  0100               	movlb	0	; () banked
  5758  000B62  33B8               	rrcf	___ftmul@f1& (0+255),f,b
  5759  000B64  0100               	movlb	0	; () banked
  5760  000B66  90D8               	bcf	status,0,c
  5761  000B68  0100               	movlb	0	; () banked
  5762  000B6A  33C4               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  5763  000B6C  0100               	movlb	0	; () banked
  5764  000B6E  33C3               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  5765  000B70  0100               	movlb	0	; () banked
  5766  000B72  33C2               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  5767                           
  5768                           ; BSR set to: 0
  5769  000B74  0100               	movlb	0	; () banked
  5770  000B76  2FC5               	decfsz	___ftmul@cntr& (0+255),f,b
  5771  000B78  D7DE               	goto	l2354
  5772                           
  5773                           ; BSR set to: 0
  5774                           
  5775                           ; BSR set to: 0
  5776  000B7A  C0C2  F0AC         	movff	___ftmul@f3_as_product,___ftpack@arg
  5777  000B7E  C0C3  F0AD         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5778  000B82  C0C4  F0AE         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5779  000B86  C0C1  F0AF         	movff	___ftmul@exp,___ftpack@exp
  5780  000B8A  C0C6  F0B0         	movff	___ftmul@sign,___ftpack@sign
  5781  000B8E  EC75  F006         	call	___ftpack	;wreg free
  5782  000B92  C0AC  F0B8         	movff	?___ftpack,?___ftmul
  5783  000B96  C0AD  F0B9         	movff	?___ftpack+1,?___ftmul+1
  5784  000B9A  C0AE  F0BA         	movff	?___ftpack+2,?___ftmul+2
  5785  000B9E                     l975:
  5786  000B9E  0012               	return	
  5787  000BA0                     __end_of___ftmul:
  5788                           	opt stack 0
  5789                           tblptru	equ	0xFF8
  5790                           tblptrh	equ	0xFF7
  5791                           tblptrl	equ	0xFF6
  5792                           tablat	equ	0xFF5
  5793                           prodh	equ	0xFF4
  5794                           prodl	equ	0xFF3
  5795                           intcon	equ	0xFF2
  5796                           indf0	equ	0xFEF
  5797                           postinc0	equ	0xFEE
  5798                           fsr0h	equ	0xFEA
  5799                           fsr0l	equ	0xFE9
  5800                           wreg	equ	0xFE8
  5801                           postinc1	equ	0xFE6
  5802                           postdec1	equ	0xFE5
  5803                           fsr1l	equ	0xFE1
  5804                           indf2	equ	0xFDF
  5805                           postinc2	equ	0xFDE
  5806                           postdec2	equ	0xFDD
  5807                           fsr2h	equ	0xFDA
  5808                           fsr2l	equ	0xFD9
  5809                           status	equ	0xFD8
  5810                           
  5811 ;; *************** function ___ftpack *****************
  5812 ;; Defined at:
  5813 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;  arg             3    0[BANK0 ] unsigned um
  5816 ;;  exp             1    3[BANK0 ] unsigned char 
  5817 ;;  sign            1    4[BANK0 ] unsigned char 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;		None
  5820 ;; Return value:  Size  Location     Type
  5821 ;;                  3    0[BANK0 ] float 
  5822 ;; Registers used:
  5823 ;;		wreg, status,2, status,0
  5824 ;; Tracked objects:
  5825 ;;		On entry : 0/0
  5826 ;;		On exit  : 0/0
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5829 ;;      Params:         0       5       0       0       0       0       0       0       0
  5830 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5831 ;;      Temps:          0       3       0       0       0       0       0       0       0
  5832 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5833 ;;Total ram usage:        8 bytes
  5834 ;; Hardware stack levels used:    1
  5835 ;; Hardware stack levels required when called:    5
  5836 ;; This function calls:
  5837 ;;		Nothing
  5838 ;; This function is called by:
  5839 ;;		___ftmul
  5840 ;;		___lbtoft
  5841 ;; This function uses a non-reentrant model
  5842 ;;
  5843                           
  5844                           	psect	text36
  5845  000CEA                     __ptext36:
  5846                           	opt stack 0
  5847  000CEA                     ___ftpack:
  5848                           	opt stack 21
  5849                           
  5850                           ;incstack = 0
  5851  000CEA  0100               	movlb	0	; () banked
  5852  000CEC  51AF               	movf	___ftpack@exp& (0+255),w,b
  5853  000CEE  B4D8               	btfsc	status,2,c
  5854  000CF0  D008               	goto	l2278
  5855                           
  5856                           ; BSR set to: 0
  5857  000CF2  0100               	movlb	0	; () banked
  5858  000CF4  51AC               	movf	___ftpack@arg& (0+255),w,b
  5859  000CF6  0100               	movlb	0	; () banked
  5860  000CF8  11AD               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  5861  000CFA  0100               	movlb	0	; () banked
  5862  000CFC  11AE               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  5863  000CFE  A4D8               	btfss	status,2,c
  5864  000D00  D014               	goto	l2284
  5865  000D02                     l2278:
  5866                           
  5867                           ; BSR set to: 0
  5868  000D02  0E00               	movlw	0
  5869  000D04  0100               	movlb	0	; () banked
  5870  000D06  6FAC               	movwf	?___ftpack& (0+255),b
  5871  000D08  0E00               	movlw	0
  5872  000D0A  0100               	movlb	0	; () banked
  5873  000D0C  6FAD               	movwf	(?___ftpack+1)& (0+255),b
  5874  000D0E  0E00               	movlw	0
  5875  000D10  0100               	movlb	0	; () banked
  5876  000D12  6FAE               	movwf	(?___ftpack+2)& (0+255),b
  5877  000D14  D06E               	goto	l891
  5878  000D16                     l2282:
  5879                           
  5880                           ; BSR set to: 0
  5881  000D16  0100               	movlb	0	; () banked
  5882  000D18  2BAF               	incf	___ftpack@exp& (0+255),f,b
  5883  000D1A  0100               	movlb	0	; () banked
  5884  000D1C  90D8               	bcf	status,0,c
  5885  000D1E  0100               	movlb	0	; () banked
  5886  000D20  33AE               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  5887  000D22  0100               	movlb	0	; () banked
  5888  000D24  33AD               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  5889  000D26  0100               	movlb	0	; () banked
  5890  000D28  33AC               	rrcf	___ftpack@arg& (0+255),f,b
  5891  000D2A                     l2284:
  5892                           
  5893                           ; BSR set to: 0
  5894  000D2A  0E00               	movlw	0
  5895  000D2C  0100               	movlb	0	; () banked
  5896  000D2E  15AC               	andwf	___ftpack@arg& (0+255),w,b
  5897  000D30  0100               	movlb	0	; () banked
  5898  000D32  6FB1               	movwf	??___ftpack& (0+255),b
  5899  000D34  0E00               	movlw	0
  5900  000D36  0100               	movlb	0	; () banked
  5901  000D38  15AD               	andwf	(___ftpack@arg+1)& (0+255),w,b
  5902  000D3A  0100               	movlb	0	; () banked
  5903  000D3C  6FB2               	movwf	(??___ftpack+1)& (0+255),b
  5904  000D3E  0EFE               	movlw	254
  5905  000D40  0100               	movlb	0	; () banked
  5906  000D42  15AE               	andwf	(___ftpack@arg+2)& (0+255),w,b
  5907  000D44  0100               	movlb	0	; () banked
  5908  000D46  6FB3               	movwf	(??___ftpack+2)& (0+255),b
  5909  000D48  0100               	movlb	0	; () banked
  5910  000D4A  51B1               	movf	??___ftpack& (0+255),w,b
  5911  000D4C  11B2               	iorwf	(??___ftpack+1)& (0+255),w,b
  5912  000D4E  11B3               	iorwf	(??___ftpack+2)& (0+255),w,b
  5913  000D50  B4D8               	btfsc	status,2,c
  5914  000D52  D014               	goto	l2290
  5915  000D54  D7E0               	goto	l2282
  5916  000D56                     l2286:
  5917                           
  5918                           ; BSR set to: 0
  5919  000D56  0100               	movlb	0	; () banked
  5920  000D58  2BAF               	incf	___ftpack@exp& (0+255),f,b
  5921                           
  5922                           ; BSR set to: 0
  5923  000D5A  0E01               	movlw	1
  5924  000D5C  0100               	movlb	0	; () banked
  5925  000D5E  27AC               	addwf	___ftpack@arg& (0+255),f,b
  5926  000D60  0E00               	movlw	0
  5927  000D62  0100               	movlb	0	; () banked
  5928  000D64  23AD               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  5929  000D66  0E00               	movlw	0
  5930  000D68  0100               	movlb	0	; () banked
  5931  000D6A  23AE               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  5932  000D6C  0100               	movlb	0	; () banked
  5933  000D6E  90D8               	bcf	status,0,c
  5934  000D70  0100               	movlb	0	; () banked
  5935  000D72  33AE               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  5936  000D74  0100               	movlb	0	; () banked
  5937  000D76  33AD               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  5938  000D78  0100               	movlb	0	; () banked
  5939  000D7A  33AC               	rrcf	___ftpack@arg& (0+255),f,b
  5940  000D7C                     l2290:
  5941                           
  5942                           ; BSR set to: 0
  5943  000D7C  0E00               	movlw	0
  5944  000D7E  0100               	movlb	0	; () banked
  5945  000D80  15AC               	andwf	___ftpack@arg& (0+255),w,b
  5946  000D82  0100               	movlb	0	; () banked
  5947  000D84  6FB1               	movwf	??___ftpack& (0+255),b
  5948  000D86  0E00               	movlw	0
  5949  000D88  0100               	movlb	0	; () banked
  5950  000D8A  15AD               	andwf	(___ftpack@arg+1)& (0+255),w,b
  5951  000D8C  0100               	movlb	0	; () banked
  5952  000D8E  6FB2               	movwf	(??___ftpack+1)& (0+255),b
  5953  000D90  0EFF               	movlw	255
  5954  000D92  0100               	movlb	0	; () banked
  5955  000D94  15AE               	andwf	(___ftpack@arg+2)& (0+255),w,b
  5956  000D96  0100               	movlb	0	; () banked
  5957  000D98  6FB3               	movwf	(??___ftpack+2)& (0+255),b
  5958  000D9A  0100               	movlb	0	; () banked
  5959  000D9C  51B1               	movf	??___ftpack& (0+255),w,b
  5960  000D9E  11B2               	iorwf	(??___ftpack+1)& (0+255),w,b
  5961  000DA0  11B3               	iorwf	(??___ftpack+2)& (0+255),w,b
  5962  000DA2  B4D8               	btfsc	status,2,c
  5963  000DA4  D00B               	goto	l2294
  5964  000DA6  D7D7               	goto	l2286
  5965  000DA8                     l2292:
  5966                           
  5967                           ; BSR set to: 0
  5968  000DA8  0100               	movlb	0	; () banked
  5969  000DAA  07AF               	decf	___ftpack@exp& (0+255),f,b
  5970  000DAC  0100               	movlb	0	; () banked
  5971  000DAE  90D8               	bcf	status,0,c
  5972  000DB0  0100               	movlb	0	; () banked
  5973  000DB2  37AC               	rlcf	___ftpack@arg& (0+255),f,b
  5974  000DB4  0100               	movlb	0	; () banked
  5975  000DB6  37AD               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  5976  000DB8  0100               	movlb	0	; () banked
  5977  000DBA  37AE               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  5978  000DBC                     l2294:
  5979                           
  5980                           ; BSR set to: 0
  5981  000DBC  0100               	movlb	0	; () banked
  5982  000DBE  AFAD               	btfss	(___ftpack@arg+1)& (0+255),7,b
  5983  000DC0  D7F3               	goto	l2292
  5984                           
  5985                           ; BSR set to: 0
  5986  000DC2  0100               	movlb	0	; () banked
  5987  000DC4  B1AF               	btfsc	___ftpack@exp& (0+255),0,b
  5988  000DC6  D002               	goto	l2298
  5989                           
  5990                           ; BSR set to: 0
  5991  000DC8  0100               	movlb	0	; () banked
  5992  000DCA  9FAD               	bcf	(___ftpack@arg+1)& (0+255),7,b
  5993  000DCC                     l2298:
  5994                           
  5995                           ; BSR set to: 0
  5996  000DCC  0100               	movlb	0	; () banked
  5997  000DCE  90D8               	bcf	status,0,c
  5998  000DD0  33AF               	rrcf	___ftpack@exp& (0+255),f,b
  5999  000DD2  0100               	movlb	0	; () banked
  6000  000DD4  51AF               	movf	___ftpack@exp& (0+255),w,b
  6001  000DD6  0100               	movlb	0	; () banked
  6002  000DD8  13AE               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  6003                           
  6004                           ; BSR set to: 0
  6005  000DDA  0100               	movlb	0	; () banked
  6006  000DDC  51B0               	movf	___ftpack@sign& (0+255),w,b
  6007  000DDE  B4D8               	btfsc	status,2,c
  6008  000DE0  D002               	goto	l2304
  6009                           
  6010                           ; BSR set to: 0
  6011  000DE2  0100               	movlb	0	; () banked
  6012  000DE4  8FAE               	bsf	(___ftpack@arg+2)& (0+255),7,b
  6013  000DE6                     l2304:
  6014                           
  6015                           ; BSR set to: 0
  6016  000DE6  C0AC  F0AC         	movff	___ftpack@arg,?___ftpack
  6017  000DEA  C0AD  F0AD         	movff	___ftpack@arg+1,?___ftpack+1
  6018  000DEE  C0AE  F0AE         	movff	___ftpack@arg+2,?___ftpack+2
  6019  000DF2                     l891:
  6020                           
  6021                           ; BSR set to: 0
  6022  000DF2  0012               	return	
  6023  000DF4                     __end_of___ftpack:
  6024                           	opt stack 0
  6025                           tblptru	equ	0xFF8
  6026                           tblptrh	equ	0xFF7
  6027                           tblptrl	equ	0xFF6
  6028                           tablat	equ	0xFF5
  6029                           prodh	equ	0xFF4
  6030                           prodl	equ	0xFF3
  6031                           intcon	equ	0xFF2
  6032                           indf0	equ	0xFEF
  6033                           postinc0	equ	0xFEE
  6034                           fsr0h	equ	0xFEA
  6035                           fsr0l	equ	0xFE9
  6036                           wreg	equ	0xFE8
  6037                           postinc1	equ	0xFE6
  6038                           postdec1	equ	0xFE5
  6039                           fsr1l	equ	0xFE1
  6040                           indf2	equ	0xFDF
  6041                           postinc2	equ	0xFDE
  6042                           postdec2	equ	0xFDD
  6043                           fsr2h	equ	0xFDA
  6044                           fsr2l	equ	0xFD9
  6045                           status	equ	0xFD8
  6046                           
  6047 ;; *************** function _SetDCPWM1 *****************
  6048 ;; Defined at:
  6049 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1setdc.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  6054 ;; Return value:  Size  Location     Type
  6055 ;;		None               void
  6056 ;; Registers used:
  6057 ;;		wreg, status,2, status,0
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6063 ;;      Params:         0       2       0       0       0       0       0       0       0
  6064 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6065 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6066 ;;      Totals:         0       6       0       0       0       0       0       0       0
  6067 ;;Total ram usage:        6 bytes
  6068 ;; Hardware stack levels used:    1
  6069 ;; Hardware stack levels required when called:    5
  6070 ;; This function calls:
  6071 ;;		Nothing
  6072 ;; This function is called by:
  6073 ;;		_PWM_DutyCycle1
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           
  6077                           	psect	text37
  6078  001AE0                     __ptext37:
  6079                           	opt stack 0
  6080  001AE0                     _SetDCPWM1:
  6081                           	opt stack 22
  6082                           
  6083                           ; BSR set to: 0
  6084                           ;incstack = 0
  6085  001AE0  0100               	movlb	0	; () banked
  6086  001AE2  C0AC  F0AE         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  6087  001AE6  0100               	movlb	0	; () banked
  6088  001AE8  C0AD  F0AF         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  6089  001AEC  0E06               	movlw	6
  6090  001AEE                     u1715:
  6091  001AEE  90D8               	bcf	status,0,c
  6092  001AF0  0100               	movlb	0	; () banked
  6093  001AF2  37AE               	rlcf	??_SetDCPWM1& (0+255),f,b
  6094  001AF4  37AF               	rlcf	(??_SetDCPWM1+1)& (0+255),f,b
  6095  001AF6  2EE8               	decfsz	wreg,f,c
  6096  001AF8  D7FA               	goto	u1715
  6097  001AFA  C0AE  F0B0         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  6098  001AFE  C0AF  F0B1         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  6099                           
  6100                           ; BSR set to: 0
  6101  001B02  C0B1  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  6102  001B06  C0B0  F0AE         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  6103  001B0A  0100               	movlb	0	; () banked
  6104  001B0C  90D8               	bcf	status,0,c
  6105  001B0E  33AE               	rrcf	??_SetDCPWM1& (0+255),f,b
  6106  001B10  0100               	movlb	0	; () banked
  6107  001B12  90D8               	bcf	status,0,c
  6108  001B14  33AE               	rrcf	??_SetDCPWM1& (0+255),f,b
  6109  001B16  0E30               	movlw	48
  6110  001B18  0100               	movlb	0	; () banked
  6111  001B1A  17AE               	andwf	??_SetDCPWM1& (0+255),f,b
  6112  001B1C  50BD               	movf	4029,w,c	;volatile
  6113  001B1E  0BCF               	andlw	207
  6114  001B20  0100               	movlb	0	; () banked
  6115  001B22  11AE               	iorwf	??_SetDCPWM1& (0+255),w,b
  6116  001B24  6EBD               	movwf	4029,c	;volatile
  6117                           
  6118                           ; BSR set to: 0
  6119  001B26  0012               	return	
  6120  001B28                     __end_of_SetDCPWM1:
  6121                           	opt stack 0
  6122                           tblptru	equ	0xFF8
  6123                           tblptrh	equ	0xFF7
  6124                           tblptrl	equ	0xFF6
  6125                           tablat	equ	0xFF5
  6126                           prodh	equ	0xFF4
  6127                           prodl	equ	0xFF3
  6128                           intcon	equ	0xFF2
  6129                           indf0	equ	0xFEF
  6130                           postinc0	equ	0xFEE
  6131                           fsr0h	equ	0xFEA
  6132                           fsr0l	equ	0xFE9
  6133                           wreg	equ	0xFE8
  6134                           postinc1	equ	0xFE6
  6135                           postdec1	equ	0xFE5
  6136                           fsr1l	equ	0xFE1
  6137                           indf2	equ	0xFDF
  6138                           postinc2	equ	0xFDE
  6139                           postdec2	equ	0xFDD
  6140                           fsr2h	equ	0xFDA
  6141                           fsr2l	equ	0xFD9
  6142                           status	equ	0xFD8
  6143                           
  6144 ;; *************** function _clrBufferUSART *****************
  6145 ;; Defined at:
  6146 ;;		line 68 in file "Bluetooth.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;		None
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;  i               2    0[BANK0 ] int 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;		None               void
  6153 ;; Registers used:
  6154 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6160 ;;      Params:         0       0       0       0       0       0       0       0       0
  6161 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6163 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6164 ;;Total ram usage:        2 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; Hardware stack levels required when called:    5
  6167 ;; This function calls:
  6168 ;;		Nothing
  6169 ;; This function is called by:
  6170 ;;		_Inicializa_Driveby
  6171 ;;		_Comando_Tablet
  6172 ;;		_main
  6173 ;;		_CheckTX
  6174 ;;		_EstadoBluetooth
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           	psect	text38
  6179  001BB2                     __ptext38:
  6180                           	opt stack 0
  6181  001BB2                     _clrBufferUSART:
  6182                           	opt stack 25
  6183                           
  6184                           ;Bluetooth.c: 69: int i;
  6185                           ;Bluetooth.c: 70: for (i = 0; i < 20; i++) {
  6186                           
  6187                           ; BSR set to: 0
  6188                           ;incstack = 0
  6189  001BB2  0E00               	movlw	0
  6190  001BB4  0100               	movlb	0	; () banked
  6191  001BB6  6FAD               	movwf	(clrBufferUSART@i+1)& (0+255),b
  6192  001BB8  0E00               	movlw	0
  6193  001BBA  0100               	movlb	0	; () banked
  6194  001BBC  6FAC               	movwf	clrBufferUSART@i& (0+255),b
  6195  001BBE                     
  6196                           ; BSR set to: 0
  6197  001BBE  0100               	movlb	0	; () banked
  6198  001BC0  51AD               	movf	(clrBufferUSART@i+1)& (0+255),w,b
  6199  001BC2  0A80               	xorlw	128
  6200  001BC4  0F80               	addlw	-128
  6201  001BC6  0E14               	movlw	20
  6202  001BC8  B4D8               	btfsc	status,2,c
  6203  001BCA  5DAC               	subwf	clrBufferUSART@i& (0+255),w,b
  6204  001BCC  B0D8               	btfsc	status,0,c
  6205  001BCE  D012               	goto	l54
  6206                           
  6207                           ; BSR set to: 0
  6208                           ;Bluetooth.c: 71: BluetoothDato[i] = 0;
  6209                           
  6210                           ; BSR set to: 0
  6211                           
  6212                           ; BSR set to: 0
  6213  001BD0  0100               	movlb	0	; () banked
  6214  001BD2  0E65               	movlw	low _BluetoothDato
  6215  001BD4  0100               	movlb	0	; () banked
  6216  001BD6  25AC               	addwf	clrBufferUSART@i& (0+255),w,b
  6217  001BD8  6ED9               	movwf	fsr2l,c
  6218  001BDA  0100               	movlb	0	; () banked
  6219  001BDC  0E00               	movlw	high _BluetoothDato
  6220  001BDE  0100               	movlb	0	; () banked
  6221  001BE0  21AD               	addwfc	(clrBufferUSART@i+1)& (0+255),w,b
  6222  001BE2  6EDA               	movwf	fsr2h,c
  6223  001BE4  0E00               	movlw	0
  6224  001BE6  6EDF               	movwf	indf2,c
  6225                           
  6226                           ; BSR set to: 0
  6227                           ;Bluetooth.c: 72: cad = 0;
  6228  001BE8  0E00               	movlw	0
  6229  001BEA  6E55               	movwf	_cad,c
  6230                           
  6231                           ; BSR set to: 0
  6232  001BEC  0100               	movlb	0	; () banked
  6233  001BEE  4BAC               	infsnz	clrBufferUSART@i& (0+255),f,b
  6234  001BF0  2BAD               	incf	(clrBufferUSART@i+1)& (0+255),f,b
  6235  001BF2  D7E5               	goto	L11
  6236  001BF4                     l54:
  6237                           
  6238                           ; BSR set to: 0
  6239  001BF4  0012               	return	
  6240  001BF6                     __end_of_clrBufferUSART:
  6241                           	opt stack 0
  6242                           tblptru	equ	0xFF8
  6243                           tblptrh	equ	0xFF7
  6244                           tblptrl	equ	0xFF6
  6245                           tablat	equ	0xFF5
  6246                           prodh	equ	0xFF4
  6247                           prodl	equ	0xFF3
  6248                           intcon	equ	0xFF2
  6249                           indf0	equ	0xFEF
  6250                           postinc0	equ	0xFEE
  6251                           fsr0h	equ	0xFEA
  6252                           fsr0l	equ	0xFE9
  6253                           wreg	equ	0xFE8
  6254                           postinc1	equ	0xFE6
  6255                           postdec1	equ	0xFE5
  6256                           fsr1l	equ	0xFE1
  6257                           indf2	equ	0xFDF
  6258                           postinc2	equ	0xFDE
  6259                           postdec2	equ	0xFDD
  6260                           fsr2h	equ	0xFDA
  6261                           fsr2l	equ	0xFD9
  6262                           status	equ	0xFD8
  6263                           
  6264 ;; *************** function _TMRO_USART *****************
  6265 ;; Defined at:
  6266 ;;		line 85 in file "robot.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;		None
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;		None
  6271 ;; Return value:  Size  Location     Type
  6272 ;;		None               void
  6273 ;; Registers used:
  6274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6280 ;;      Params:         0       0       0       0       0       0       0       0       0
  6281 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6282 ;;      Temps:         14       0       0       0       0       0       0       0       0
  6283 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6284 ;;Total ram usage:       14 bytes
  6285 ;; Hardware stack levels used:    1
  6286 ;; Hardware stack levels required when called:    4
  6287 ;; This function calls:
  6288 ;;		_ReadUSART
  6289 ;;		i2_go_straight
  6290 ;;		i2_left
  6291 ;;		i2_right
  6292 ;; This function is called by:
  6293 ;;		Interrupt level 2
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           
  6297                           	psect	intcode
  6298  000008                     __pintcode:
  6299                           	opt stack 0
  6300  000008                     _TMRO_USART:
  6301                           	opt stack 20
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;incstack = 0
  6305  000008  CFFA F034          	movff	pclath,??_TMRO_USART
  6306  00000C  CFFB F035          	movff	pclatu,??_TMRO_USART+1
  6307  000010  CFE9 F036          	movff	fsr0l,??_TMRO_USART+2
  6308  000014  ED74  F007         	call	int_func,f	;refresh shadow registers
  6309                           pclatu	equ	0xFFB
  6310                           pclath	equ	0xFFA
  6311                           tblptru	equ	0xFF8
  6312                           tblptrh	equ	0xFF7
  6313                           tblptrl	equ	0xFF6
  6314                           tablat	equ	0xFF5
  6315                           prodh	equ	0xFF4
  6316                           prodl	equ	0xFF3
  6317                           intcon	equ	0xFF2
  6318                           indf0	equ	0xFEF
  6319                           postinc0	equ	0xFEE
  6320                           fsr0h	equ	0xFEA
  6321                           fsr0l	equ	0xFE9
  6322                           wreg	equ	0xFE8
  6323                           postinc1	equ	0xFE6
  6324                           postdec1	equ	0xFE5
  6325                           fsr1l	equ	0xFE1
  6326                           indf2	equ	0xFDF
  6327                           postinc2	equ	0xFDE
  6328                           postdec2	equ	0xFDD
  6329                           fsr2h	equ	0xFDA
  6330                           fsr2l	equ	0xFD9
  6331                           status	equ	0xFD8
  6332                           
  6333                           	psect	intcode_body
  6334  000EE8                     __pintcode_body:
  6335                           	opt stack 20
  6336  000EE8                     int_func:
  6337                           	opt stack 20
  6338  000EE8  0006               	pop		; remove dummy address from shadow register refresh
  6339  000EEA  CFEA F037          	movff	fsr0h,??_TMRO_USART+3
  6340  000EEE  CFE1 F038          	movff	fsr1l,??_TMRO_USART+4
  6341  000EF2  CFE2 F039          	movff	fsr1h,??_TMRO_USART+5
  6342  000EF6  CFD9 F03A          	movff	fsr2l,??_TMRO_USART+6
  6343  000EFA  CFDA F03B          	movff	fsr2h,??_TMRO_USART+7
  6344  000EFE  CFF3 F03C          	movff	prodl,??_TMRO_USART+8
  6345  000F02  CFF4 F03D          	movff	prodh,??_TMRO_USART+9
  6346  000F06  CFF6 F03E          	movff	tblptrl,??_TMRO_USART+10
  6347  000F0A  CFF7 F03F          	movff	tblptrh,??_TMRO_USART+11
  6348  000F0E  CFF8 F040          	movff	tblptru,??_TMRO_USART+12
  6349  000F12  CFF5 F041          	movff	tablat,??_TMRO_USART+13
  6350                           
  6351                           ;robot.c: 90: if (PIR1bits.RCIF) {
  6352  000F16  AA9E               	btfss	3998,5,c	;volatile
  6353  000F18  D032               	goto	i2l3284
  6354                           
  6355                           ;robot.c: 92: BluetoothDato[cad] = ReadUSART();
  6356  000F1A  5055               	movf	_cad,w,c
  6357  000F1C  0D01               	mullw	1
  6358  000F1E  0100               	movlb	0	; () banked
  6359  000F20  0E65               	movlw	low _BluetoothDato
  6360  000F22  24F3               	addwf	prodl,w,c
  6361  000F24  6ED9               	movwf	fsr2l,c
  6362  000F26  0100               	movlb	0	; () banked
  6363  000F28  0E00               	movlw	high _BluetoothDato
  6364  000F2A  20F4               	addwfc	prodh,w,c
  6365  000F2C  6EDA               	movwf	fsr2h,c
  6366  000F2E  EC86  F00E         	call	_ReadUSART	;wreg free
  6367  000F32  6EDF               	movwf	indf2,c
  6368                           
  6369                           ;robot.c: 93: if (BluetoothDato[cad] == '#') {
  6370  000F34  5055               	movf	_cad,w,c
  6371  000F36  0D01               	mullw	1
  6372  000F38  0100               	movlb	0	; () banked
  6373  000F3A  0E65               	movlw	low _BluetoothDato
  6374  000F3C  24F3               	addwf	prodl,w,c
  6375  000F3E  6ED9               	movwf	fsr2l,c
  6376  000F40  0100               	movlb	0	; () banked
  6377  000F42  0E00               	movlw	high _BluetoothDato
  6378  000F44  20F4               	addwfc	prodh,w,c
  6379  000F46  6EDA               	movwf	fsr2h,c
  6380  000F48  0E23               	movlw	35
  6381  000F4A  62DF               	cpfseq	indf2,c
  6382  000F4C  D015               	goto	i2l3280
  6383                           
  6384                           ; BSR set to: 0
  6385                           ;robot.c: 94: if (ComanTFlag == 0) {
  6386  000F4E  664C               	tstfsz	_ComanTFlag,c
  6387  000F50  D008               	goto	i2l3276
  6388                           
  6389                           ; BSR set to: 0
  6390                           ;robot.c: 95: EntTrama = 1;
  6391  000F52  0E01               	movlw	1
  6392  000F54  6E4F               	movwf	_EntTrama,c
  6393                           
  6394                           ;robot.c: 96: FinComandT = 0;
  6395  000F56  0E00               	movlw	0
  6396  000F58  0100               	movlb	0	; () banked
  6397  000F5A  6F63               	movwf	_FinComandT& (0+255),b
  6398                           
  6399                           ;robot.c: 97: ComanTFlag = 1;
  6400  000F5C  0E01               	movlw	1
  6401  000F5E  6E4C               	movwf	_ComanTFlag,c
  6402  000F60  D00D               	goto	i2u313_40
  6403  000F62                     i2l3276:
  6404                           
  6405                           ; BSR set to: 0
  6406                           ;robot.c: 100: else if (ComanTFlag == 1) {
  6407  000F62  044C               	decf	_ComanTFlag,w,c
  6408  000F64  A4D8               	btfss	status,2,c
  6409  000F66  D00B               	goto	i2l3284
  6410                           
  6411                           ; BSR set to: 0
  6412                           ;robot.c: 101: ComanTFlag = 0;
  6413  000F68  0E00               	movlw	0
  6414  000F6A  6E4C               	movwf	_ComanTFlag,c
  6415                           
  6416                           ;robot.c: 102: FinComandT = 1;
  6417  000F6C  0E01               	movlw	1
  6418  000F6E  0100               	movlb	0	; () banked
  6419  000F70  6F63               	movwf	_FinComandT& (0+255),b
  6420                           
  6421                           ;robot.c: 103: EntTrama = 0;
  6422  000F72  0E00               	movlw	0
  6423  000F74  6E4F               	movwf	_EntTrama,c
  6424  000F76  D003               	goto	i2l3284
  6425  000F78                     i2l3280:
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;robot.c: 107: else if (EntTrama == 1)
  6429  000F78  044F               	decf	_EntTrama,w,c
  6430  000F7A  B4D8               	btfsc	status,2,c
  6431  000F7C                     i2u313_40:
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;robot.c: 108: cad++;
  6435  000F7C  2A55               	incf	_cad,f,c
  6436  000F7E                     i2l3284:
  6437                           
  6438                           ;robot.c: 110: }
  6439                           ;robot.c: 112: if(INTCONbits.INT0F == 1){
  6440  000F7E  B2F2               	btfsc	intcon,1,c	;volatile
  6441                           
  6442                           ;robot.c: 121: go_straight();
  6443  000F80  EC08  F00F         	call	i2_go_straight	;wreg free
  6444                           
  6445                           ;robot.c: 122: }
  6446                           ;robot.c: 124: if(INTCON3bits.INT1F == 1){
  6447  000F84  B0F0               	btfsc	intcon3,0,c	;volatile
  6448                           
  6449                           ;robot.c: 131: right();
  6450  000F86  ECC3  F00E         	call	i2_right	;wreg free
  6451                           
  6452                           ;robot.c: 132: }
  6453                           ;robot.c: 133: if(INTCON3bits.INT2F == 1){
  6454  000F8A  A2F0               	btfss	intcon3,1,c	;volatile
  6455  000F8C  D003               	goto	i2l324
  6456                           
  6457                           ;robot.c: 140: left();
  6458  000F8E  ECCE  F00E         	call	i2_left	;wreg free
  6459                           
  6460                           ;robot.c: 141: }
  6461  000F92  D002               	goto	i2l325
  6462  000F94                     i2l324:
  6463                           
  6464                           ;robot.c: 142: else if(PIR1bits.TMR2IF){
  6465  000F94  B29E               	btfsc	3998,1,c	;volatile
  6466                           
  6467                           ;robot.c: 144: PIE1bits.TMR2IE = 0;
  6468  000F96  929D               	bcf	3997,1,c	;volatile
  6469  000F98                     i2l325:
  6470                           
  6471                           ;robot.c: 145: }
  6472                           ;robot.c: 146: INTCON3bits.INT2F = 0;
  6473  000F98  92F0               	bcf	intcon3,1,c	;volatile
  6474                           
  6475                           ;robot.c: 147: INTCON3bits.INT1F = 0;
  6476  000F9A  90F0               	bcf	intcon3,0,c	;volatile
  6477                           
  6478                           ;robot.c: 148: INTCONbits.INT0F = 0;
  6479  000F9C  92F2               	bcf	intcon,1,c	;volatile
  6480                           
  6481                           ;robot.c: 149: PIR1bits.TMR2IF=0;
  6482  000F9E  929E               	bcf	3998,1,c	;volatile
  6483                           
  6484                           ;robot.c: 150: PIR1bits.RCIF=0;
  6485  000FA0  9A9E               	bcf	3998,5,c	;volatile
  6486                           
  6487                           ;robot.c: 152: return;
  6488  000FA2  C041  FFF5         	movff	??_TMRO_USART+13,tablat
  6489  000FA6  C040  FFF8         	movff	??_TMRO_USART+12,tblptru
  6490  000FAA  C03F  FFF7         	movff	??_TMRO_USART+11,tblptrh
  6491  000FAE  C03E  FFF6         	movff	??_TMRO_USART+10,tblptrl
  6492  000FB2  C03D  FFF4         	movff	??_TMRO_USART+9,prodh
  6493  000FB6  C03C  FFF3         	movff	??_TMRO_USART+8,prodl
  6494  000FBA  C03B  FFDA         	movff	??_TMRO_USART+7,fsr2h
  6495  000FBE  C03A  FFD9         	movff	??_TMRO_USART+6,fsr2l
  6496  000FC2  C039  FFE2         	movff	??_TMRO_USART+5,fsr1h
  6497  000FC6  C038  FFE1         	movff	??_TMRO_USART+4,fsr1l
  6498  000FCA  C037  FFEA         	movff	??_TMRO_USART+3,fsr0h
  6499  000FCE  C036  FFE9         	movff	??_TMRO_USART+2,fsr0l
  6500  000FD2  C035  FFFB         	movff	??_TMRO_USART+1,pclatu
  6501  000FD6  C034  FFFA         	movff	??_TMRO_USART,pclath
  6502  000FDA  0011               	retfie		f
  6503  000FDC                     __end_of_TMRO_USART:
  6504                           	opt stack 0
  6505                           pclatu	equ	0xFFB
  6506                           pclath	equ	0xFFA
  6507                           tblptru	equ	0xFF8
  6508                           tblptrh	equ	0xFF7
  6509                           tblptrl	equ	0xFF6
  6510                           tablat	equ	0xFF5
  6511                           prodh	equ	0xFF4
  6512                           prodl	equ	0xFF3
  6513                           intcon	equ	0xFF2
  6514                           intcon3	equ	0xFF0
  6515                           indf0	equ	0xFEF
  6516                           postinc0	equ	0xFEE
  6517                           fsr0h	equ	0xFEA
  6518                           fsr0l	equ	0xFE9
  6519                           wreg	equ	0xFE8
  6520                           postinc1	equ	0xFE6
  6521                           postdec1	equ	0xFE5
  6522                           fsr1h	equ	0xFE2
  6523                           fsr1l	equ	0xFE1
  6524                           indf2	equ	0xFDF
  6525                           postinc2	equ	0xFDE
  6526                           postdec2	equ	0xFDD
  6527                           fsr2h	equ	0xFDA
  6528                           fsr2l	equ	0xFD9
  6529                           status	equ	0xFD8
  6530                           
  6531 ;; *************** function i2_right *****************
  6532 ;; Defined at:
  6533 ;;		line 100 in file "cny70.c"
  6534 ;; Parameters:    Size  Location     Type
  6535 ;;		None
  6536 ;; Auto vars:     Size  Location     Type
  6537 ;;		None
  6538 ;; Return value:  Size  Location     Type
  6539 ;;		None               void
  6540 ;; Registers used:
  6541 ;;		wreg, status,2, status,0, cstack
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6547 ;;      Params:         0       0       0       0       0       0       0       0       0
  6548 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6549 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6550 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6551 ;;Total ram usage:        0 bytes
  6552 ;; Hardware stack levels used:    1
  6553 ;; Hardware stack levels required when called:    3
  6554 ;; This function calls:
  6555 ;;		i2_PWM_DutyCycle1
  6556 ;;		i2_PWM_DutyCycle2
  6557 ;;		i2_motor_Backforward1
  6558 ;;		i2_motor_forward1
  6559 ;; This function is called by:
  6560 ;;		_TMRO_USART
  6561 ;; This function uses a non-reentrant model
  6562 ;;
  6563                           
  6564                           	psect	text40
  6565  001D86                     __ptext40:
  6566                           	opt stack 0
  6567  001D86                     i2_right:
  6568                           	opt stack 20
  6569                           
  6570                           ;cny70.c: 102: motor_forward1();
  6571                           
  6572                           ;incstack = 0
  6573  001D86  EC27  F00F         	call	i2_motor_forward1	;wreg free
  6574                           
  6575                           ;cny70.c: 103: motor_Backforward1();
  6576  001D8A  EC2A  F00F         	call	i2_motor_Backforward1	;wreg free
  6577                           
  6578                           ;cny70.c: 104: PWM_DutyCycle1(100);
  6579  001D8E  0E64               	movlw	100
  6580  001D90  EC84  F00C         	call	i2_PWM_DutyCycle1
  6581                           
  6582                           ;cny70.c: 105: PWM_DutyCycle2(100);
  6583  001D94  0E64               	movlw	100
  6584  001D96  EC4F  F00C         	call	i2_PWM_DutyCycle2
  6585                           
  6586                           ;cny70.c: 106: return;
  6587  001D9A  0012               	return	
  6588  001D9C                     __end_ofi2_right:
  6589                           	opt stack 0
  6590                           pclatu	equ	0xFFB
  6591                           pclath	equ	0xFFA
  6592                           tblptru	equ	0xFF8
  6593                           tblptrh	equ	0xFF7
  6594                           tblptrl	equ	0xFF6
  6595                           tablat	equ	0xFF5
  6596                           prodh	equ	0xFF4
  6597                           prodl	equ	0xFF3
  6598                           intcon	equ	0xFF2
  6599                           intcon3	equ	0xFF0
  6600                           indf0	equ	0xFEF
  6601                           postinc0	equ	0xFEE
  6602                           fsr0h	equ	0xFEA
  6603                           fsr0l	equ	0xFE9
  6604                           wreg	equ	0xFE8
  6605                           postinc1	equ	0xFE6
  6606                           postdec1	equ	0xFE5
  6607                           fsr1h	equ	0xFE2
  6608                           fsr1l	equ	0xFE1
  6609                           indf2	equ	0xFDF
  6610                           postinc2	equ	0xFDE
  6611                           postdec2	equ	0xFDD
  6612                           fsr2h	equ	0xFDA
  6613                           fsr2l	equ	0xFD9
  6614                           status	equ	0xFD8
  6615                           
  6616 ;; *************** function i2_motor_forward1 *****************
  6617 ;; Defined at:
  6618 ;;		line 11 in file "motor.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;		None
  6621 ;; Auto vars:     Size  Location     Type
  6622 ;;		None
  6623 ;; Return value:  Size  Location     Type
  6624 ;;                  2    0[COMRAM] int 
  6625 ;; Registers used:
  6626 ;;		None
  6627 ;; Tracked objects:
  6628 ;;		On entry : 0/0
  6629 ;;		On exit  : 0/0
  6630 ;;		Unchanged: 0/0
  6631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6632 ;;      Params:         0       0       0       0       0       0       0       0       0
  6633 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6634 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6635 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6636 ;;Total ram usage:        0 bytes
  6637 ;; Hardware stack levels used:    1
  6638 ;; This function calls:
  6639 ;;		Nothing
  6640 ;; This function is called by:
  6641 ;;		i2_right
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text41
  6646  001E4E                     __ptext41:
  6647                           	opt stack 0
  6648  001E4E                     i2_motor_forward1:
  6649                           	opt stack 22
  6650                           
  6651                           ;motor.c: 13: PORTDbits.RD7 = 1;
  6652                           
  6653                           ;incstack = 0
  6654  001E4E  8E83               	bsf	3971,7,c	;volatile
  6655                           
  6656                           ;motor.c: 14: PORTDbits.RD4 = 0;
  6657  001E50  9883               	bcf	3971,4,c	;volatile
  6658                           
  6659                           ;motor.c: 17: return;
  6660  001E52  0012               	return	
  6661  001E54                     __end_ofi2_motor_forward1:
  6662                           	opt stack 0
  6663                           pclatu	equ	0xFFB
  6664                           pclath	equ	0xFFA
  6665                           tblptru	equ	0xFF8
  6666                           tblptrh	equ	0xFF7
  6667                           tblptrl	equ	0xFF6
  6668                           tablat	equ	0xFF5
  6669                           prodh	equ	0xFF4
  6670                           prodl	equ	0xFF3
  6671                           intcon	equ	0xFF2
  6672                           intcon3	equ	0xFF0
  6673                           indf0	equ	0xFEF
  6674                           postinc0	equ	0xFEE
  6675                           fsr0h	equ	0xFEA
  6676                           fsr0l	equ	0xFE9
  6677                           wreg	equ	0xFE8
  6678                           postinc1	equ	0xFE6
  6679                           postdec1	equ	0xFE5
  6680                           fsr1h	equ	0xFE2
  6681                           fsr1l	equ	0xFE1
  6682                           indf2	equ	0xFDF
  6683                           postinc2	equ	0xFDE
  6684                           postdec2	equ	0xFDD
  6685                           fsr2h	equ	0xFDA
  6686                           fsr2l	equ	0xFD9
  6687                           status	equ	0xFD8
  6688                           
  6689 ;; *************** function i2_motor_Backforward1 *****************
  6690 ;; Defined at:
  6691 ;;		line 20 in file "motor.c"
  6692 ;; Parameters:    Size  Location     Type
  6693 ;;		None
  6694 ;; Auto vars:     Size  Location     Type
  6695 ;;		None
  6696 ;; Return value:  Size  Location     Type
  6697 ;;                  2    0[COMRAM] int 
  6698 ;; Registers used:
  6699 ;;		None
  6700 ;; Tracked objects:
  6701 ;;		On entry : 0/0
  6702 ;;		On exit  : 0/0
  6703 ;;		Unchanged: 0/0
  6704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6705 ;;      Params:         0       0       0       0       0       0       0       0       0
  6706 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6707 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6708 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6709 ;;Total ram usage:        0 bytes
  6710 ;; Hardware stack levels used:    1
  6711 ;; This function calls:
  6712 ;;		Nothing
  6713 ;; This function is called by:
  6714 ;;		i2_right
  6715 ;; This function uses a non-reentrant model
  6716 ;;
  6717                           
  6718                           	psect	text42
  6719  001E54                     __ptext42:
  6720                           	opt stack 0
  6721  001E54                     i2_motor_Backforward1:
  6722                           	opt stack 22
  6723                           
  6724                           ;motor.c: 22: PORTDbits.RD7 = 0;
  6725                           
  6726                           ;incstack = 0
  6727  001E54  9E83               	bcf	3971,7,c	;volatile
  6728                           
  6729                           ;motor.c: 23: PORTDbits.RD4 = 1;
  6730  001E56  8883               	bsf	3971,4,c	;volatile
  6731                           
  6732                           ;motor.c: 26: return;
  6733  001E58  0012               	return	
  6734  001E5A                     __end_ofi2_motor_Backforward1:
  6735                           	opt stack 0
  6736                           pclatu	equ	0xFFB
  6737                           pclath	equ	0xFFA
  6738                           tblptru	equ	0xFF8
  6739                           tblptrh	equ	0xFF7
  6740                           tblptrl	equ	0xFF6
  6741                           tablat	equ	0xFF5
  6742                           prodh	equ	0xFF4
  6743                           prodl	equ	0xFF3
  6744                           intcon	equ	0xFF2
  6745                           intcon3	equ	0xFF0
  6746                           indf0	equ	0xFEF
  6747                           postinc0	equ	0xFEE
  6748                           fsr0h	equ	0xFEA
  6749                           fsr0l	equ	0xFE9
  6750                           wreg	equ	0xFE8
  6751                           postinc1	equ	0xFE6
  6752                           postdec1	equ	0xFE5
  6753                           fsr1h	equ	0xFE2
  6754                           fsr1l	equ	0xFE1
  6755                           indf2	equ	0xFDF
  6756                           postinc2	equ	0xFDE
  6757                           postdec2	equ	0xFDD
  6758                           fsr2h	equ	0xFDA
  6759                           fsr2l	equ	0xFD9
  6760                           status	equ	0xFD8
  6761                           
  6762 ;; *************** function i2_left *****************
  6763 ;; Defined at:
  6764 ;;		line 109 in file "cny70.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;		None
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;		None
  6769 ;; Return value:  Size  Location     Type
  6770 ;;		None               void
  6771 ;; Registers used:
  6772 ;;		wreg, status,2, status,0, cstack
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6778 ;;      Params:         0       0       0       0       0       0       0       0       0
  6779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6781 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6782 ;;Total ram usage:        0 bytes
  6783 ;; Hardware stack levels used:    1
  6784 ;; Hardware stack levels required when called:    3
  6785 ;; This function calls:
  6786 ;;		i2_PWM_DutyCycle1
  6787 ;;		i2_PWM_DutyCycle2
  6788 ;;		i2_motor_Backforward2
  6789 ;;		i2_motor_forward2
  6790 ;; This function is called by:
  6791 ;;		_TMRO_USART
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text43
  6796  001D9C                     __ptext43:
  6797                           	opt stack 0
  6798  001D9C                     i2_left:
  6799                           	opt stack 20
  6800                           
  6801                           ;cny70.c: 111: motor_forward2();
  6802                           
  6803                           ;incstack = 0
  6804  001D9C  EC2D  F00F         	call	i2_motor_forward2	;wreg free
  6805                           
  6806                           ;cny70.c: 112: motor_Backforward2();
  6807  001DA0  EC30  F00F         	call	i2_motor_Backforward2	;wreg free
  6808                           
  6809                           ;cny70.c: 113: PWM_DutyCycle1(100);
  6810  001DA4  0E64               	movlw	100
  6811  001DA6  EC84  F00C         	call	i2_PWM_DutyCycle1
  6812                           
  6813                           ;cny70.c: 114: PWM_DutyCycle2(100);
  6814  001DAA  0E64               	movlw	100
  6815  001DAC  EC4F  F00C         	call	i2_PWM_DutyCycle2
  6816                           
  6817                           ;cny70.c: 115: return;
  6818  001DB0  0012               	return	
  6819  001DB2                     __end_ofi2_left:
  6820                           	opt stack 0
  6821                           pclatu	equ	0xFFB
  6822                           pclath	equ	0xFFA
  6823                           tblptru	equ	0xFF8
  6824                           tblptrh	equ	0xFF7
  6825                           tblptrl	equ	0xFF6
  6826                           tablat	equ	0xFF5
  6827                           prodh	equ	0xFF4
  6828                           prodl	equ	0xFF3
  6829                           intcon	equ	0xFF2
  6830                           intcon3	equ	0xFF0
  6831                           indf0	equ	0xFEF
  6832                           postinc0	equ	0xFEE
  6833                           fsr0h	equ	0xFEA
  6834                           fsr0l	equ	0xFE9
  6835                           wreg	equ	0xFE8
  6836                           postinc1	equ	0xFE6
  6837                           postdec1	equ	0xFE5
  6838                           fsr1h	equ	0xFE2
  6839                           fsr1l	equ	0xFE1
  6840                           indf2	equ	0xFDF
  6841                           postinc2	equ	0xFDE
  6842                           postdec2	equ	0xFDD
  6843                           fsr2h	equ	0xFDA
  6844                           fsr2l	equ	0xFD9
  6845                           status	equ	0xFD8
  6846                           
  6847 ;; *************** function i2_motor_forward2 *****************
  6848 ;; Defined at:
  6849 ;;		line 29 in file "motor.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;		None
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;		None
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  2    0[COMRAM] int 
  6856 ;; Registers used:
  6857 ;;		None
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6863 ;;      Params:         0       0       0       0       0       0       0       0       0
  6864 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6865 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6866 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6867 ;;Total ram usage:        0 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; This function calls:
  6870 ;;		Nothing
  6871 ;; This function is called by:
  6872 ;;		i2_left
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text44
  6877  001E5A                     __ptext44:
  6878                           	opt stack 0
  6879  001E5A                     i2_motor_forward2:
  6880                           	opt stack 22
  6881                           
  6882                           ;motor.c: 32: PORTDbits.RD2 = 1;
  6883                           
  6884                           ;incstack = 0
  6885  001E5A  8483               	bsf	3971,2,c	;volatile
  6886                           
  6887                           ;motor.c: 33: PORTDbits.RD3 = 0;
  6888  001E5C  9683               	bcf	3971,3,c	;volatile
  6889                           
  6890                           ;motor.c: 35: return;
  6891  001E5E  0012               	return	
  6892  001E60                     __end_ofi2_motor_forward2:
  6893                           	opt stack 0
  6894                           pclatu	equ	0xFFB
  6895                           pclath	equ	0xFFA
  6896                           tblptru	equ	0xFF8
  6897                           tblptrh	equ	0xFF7
  6898                           tblptrl	equ	0xFF6
  6899                           tablat	equ	0xFF5
  6900                           prodh	equ	0xFF4
  6901                           prodl	equ	0xFF3
  6902                           intcon	equ	0xFF2
  6903                           intcon3	equ	0xFF0
  6904                           indf0	equ	0xFEF
  6905                           postinc0	equ	0xFEE
  6906                           fsr0h	equ	0xFEA
  6907                           fsr0l	equ	0xFE9
  6908                           wreg	equ	0xFE8
  6909                           postinc1	equ	0xFE6
  6910                           postdec1	equ	0xFE5
  6911                           fsr1h	equ	0xFE2
  6912                           fsr1l	equ	0xFE1
  6913                           indf2	equ	0xFDF
  6914                           postinc2	equ	0xFDE
  6915                           postdec2	equ	0xFDD
  6916                           fsr2h	equ	0xFDA
  6917                           fsr2l	equ	0xFD9
  6918                           status	equ	0xFD8
  6919                           
  6920 ;; *************** function i2_motor_Backforward2 *****************
  6921 ;; Defined at:
  6922 ;;		line 38 in file "motor.c"
  6923 ;; Parameters:    Size  Location     Type
  6924 ;;		None
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;		None
  6927 ;; Return value:  Size  Location     Type
  6928 ;;                  2    0[COMRAM] int 
  6929 ;; Registers used:
  6930 ;;		None
  6931 ;; Tracked objects:
  6932 ;;		On entry : 0/0
  6933 ;;		On exit  : 0/0
  6934 ;;		Unchanged: 0/0
  6935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6936 ;;      Params:         0       0       0       0       0       0       0       0       0
  6937 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6938 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6939 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6940 ;;Total ram usage:        0 bytes
  6941 ;; Hardware stack levels used:    1
  6942 ;; This function calls:
  6943 ;;		Nothing
  6944 ;; This function is called by:
  6945 ;;		i2_left
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           	psect	text45
  6950  001E60                     __ptext45:
  6951                           	opt stack 0
  6952  001E60                     i2_motor_Backforward2:
  6953                           	opt stack 22
  6954                           
  6955                           ;motor.c: 41: PORTDbits.RD2 = 0;
  6956                           
  6957                           ;incstack = 0
  6958  001E60  9483               	bcf	3971,2,c	;volatile
  6959                           
  6960                           ;motor.c: 42: PORTDbits.RD3 = 1;
  6961  001E62  8683               	bsf	3971,3,c	;volatile
  6962                           
  6963                           ;motor.c: 44: return;
  6964  001E64  0012               	return	
  6965  001E66                     __end_ofi2_motor_Backforward2:
  6966                           	opt stack 0
  6967                           pclatu	equ	0xFFB
  6968                           pclath	equ	0xFFA
  6969                           tblptru	equ	0xFF8
  6970                           tblptrh	equ	0xFF7
  6971                           tblptrl	equ	0xFF6
  6972                           tablat	equ	0xFF5
  6973                           prodh	equ	0xFF4
  6974                           prodl	equ	0xFF3
  6975                           intcon	equ	0xFF2
  6976                           intcon3	equ	0xFF0
  6977                           indf0	equ	0xFEF
  6978                           postinc0	equ	0xFEE
  6979                           fsr0h	equ	0xFEA
  6980                           fsr0l	equ	0xFE9
  6981                           wreg	equ	0xFE8
  6982                           postinc1	equ	0xFE6
  6983                           postdec1	equ	0xFE5
  6984                           fsr1h	equ	0xFE2
  6985                           fsr1l	equ	0xFE1
  6986                           indf2	equ	0xFDF
  6987                           postinc2	equ	0xFDE
  6988                           postdec2	equ	0xFDD
  6989                           fsr2h	equ	0xFDA
  6990                           fsr2l	equ	0xFD9
  6991                           status	equ	0xFD8
  6992                           
  6993 ;; *************** function i2_go_straight *****************
  6994 ;; Defined at:
  6995 ;;		line 118 in file "cny70.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;		None
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;		None
  7000 ;; Return value:  Size  Location     Type
  7001 ;;		None               void
  7002 ;; Registers used:
  7003 ;;		wreg, status,2, status,0, cstack
  7004 ;; Tracked objects:
  7005 ;;		On entry : 0/0
  7006 ;;		On exit  : 0/0
  7007 ;;		Unchanged: 0/0
  7008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7009 ;;      Params:         0       0       0       0       0       0       0       0       0
  7010 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7011 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7012 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7013 ;;Total ram usage:        0 bytes
  7014 ;; Hardware stack levels used:    1
  7015 ;; Hardware stack levels required when called:    3
  7016 ;; This function calls:
  7017 ;;		i2_PWM_DutyCycle1
  7018 ;;		i2_PWM_DutyCycle2
  7019 ;;		i2_motor_forward
  7020 ;; This function is called by:
  7021 ;;		_TMRO_USART
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text46
  7026  001E10                     __ptext46:
  7027                           	opt stack 0
  7028  001E10                     i2_go_straight:
  7029                           	opt stack 20
  7030                           
  7031                           ;cny70.c: 120: motor_forward();
  7032                           
  7033                           ;incstack = 0
  7034  001E10  EC16  F00F         	call	i2_motor_forward	;wreg free
  7035                           
  7036                           ;cny70.c: 121: PWM_DutyCycle1(100);
  7037  001E14  0E64               	movlw	100
  7038  001E16  EC84  F00C         	call	i2_PWM_DutyCycle1
  7039                           
  7040                           ;cny70.c: 122: PWM_DutyCycle2(100);
  7041  001E1A  0E64               	movlw	100
  7042  001E1C  EC4F  F00C         	call	i2_PWM_DutyCycle2
  7043                           
  7044                           ;cny70.c: 123: return;
  7045  001E20  0012               	return	
  7046  001E22                     __end_ofi2_go_straight:
  7047                           	opt stack 0
  7048                           pclatu	equ	0xFFB
  7049                           pclath	equ	0xFFA
  7050                           tblptru	equ	0xFF8
  7051                           tblptrh	equ	0xFF7
  7052                           tblptrl	equ	0xFF6
  7053                           tablat	equ	0xFF5
  7054                           prodh	equ	0xFF4
  7055                           prodl	equ	0xFF3
  7056                           intcon	equ	0xFF2
  7057                           intcon3	equ	0xFF0
  7058                           indf0	equ	0xFEF
  7059                           postinc0	equ	0xFEE
  7060                           fsr0h	equ	0xFEA
  7061                           fsr0l	equ	0xFE9
  7062                           wreg	equ	0xFE8
  7063                           postinc1	equ	0xFE6
  7064                           postdec1	equ	0xFE5
  7065                           fsr1h	equ	0xFE2
  7066                           fsr1l	equ	0xFE1
  7067                           indf2	equ	0xFDF
  7068                           postinc2	equ	0xFDE
  7069                           postdec2	equ	0xFDD
  7070                           fsr2h	equ	0xFDA
  7071                           fsr2l	equ	0xFD9
  7072                           status	equ	0xFD8
  7073                           
  7074 ;; *************** function i2_motor_forward *****************
  7075 ;; Defined at:
  7076 ;;		line 47 in file "motor.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;		None
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;		None
  7081 ;; Return value:  Size  Location     Type
  7082 ;;		None               void
  7083 ;; Registers used:
  7084 ;;		None
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7090 ;;      Params:         0       0       0       0       0       0       0       0       0
  7091 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7093 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7094 ;;Total ram usage:        0 bytes
  7095 ;; Hardware stack levels used:    1
  7096 ;; This function calls:
  7097 ;;		Nothing
  7098 ;; This function is called by:
  7099 ;;		i2_go_straight
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           
  7103                           	psect	text47
  7104  001E2C                     __ptext47:
  7105                           	opt stack 0
  7106  001E2C                     i2_motor_forward:
  7107                           	opt stack 22
  7108                           
  7109                           ;motor.c: 49: PORTDbits.RD7 = 1;
  7110                           
  7111                           ;incstack = 0
  7112  001E2C  8E83               	bsf	3971,7,c	;volatile
  7113                           
  7114                           ;motor.c: 50: PORTDbits.RD4 = 0;
  7115  001E2E  9883               	bcf	3971,4,c	;volatile
  7116                           
  7117                           ;motor.c: 51: PORTDbits.RD2 = 1;
  7118  001E30  8483               	bsf	3971,2,c	;volatile
  7119                           
  7120                           ;motor.c: 52: PORTDbits.RD3 = 0;
  7121  001E32  9683               	bcf	3971,3,c	;volatile
  7122                           
  7123                           ;motor.c: 54: return;
  7124  001E34  0012               	return	
  7125  001E36                     __end_ofi2_motor_forward:
  7126                           	opt stack 0
  7127                           pclatu	equ	0xFFB
  7128                           pclath	equ	0xFFA
  7129                           tblptru	equ	0xFF8
  7130                           tblptrh	equ	0xFF7
  7131                           tblptrl	equ	0xFF6
  7132                           tablat	equ	0xFF5
  7133                           prodh	equ	0xFF4
  7134                           prodl	equ	0xFF3
  7135                           intcon	equ	0xFF2
  7136                           intcon3	equ	0xFF0
  7137                           indf0	equ	0xFEF
  7138                           postinc0	equ	0xFEE
  7139                           fsr0h	equ	0xFEA
  7140                           fsr0l	equ	0xFE9
  7141                           wreg	equ	0xFE8
  7142                           postinc1	equ	0xFE6
  7143                           postdec1	equ	0xFE5
  7144                           fsr1h	equ	0xFE2
  7145                           fsr1l	equ	0xFE1
  7146                           indf2	equ	0xFDF
  7147                           postinc2	equ	0xFDE
  7148                           postdec2	equ	0xFDD
  7149                           fsr2h	equ	0xFDA
  7150                           fsr2l	equ	0xFD9
  7151                           status	equ	0xFD8
  7152                           
  7153 ;; *************** function i2_PWM_DutyCycle2 *****************
  7154 ;; Defined at:
  7155 ;;		line 55 in file "pwm.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;  percentageDu    1    wreg     unsigned char 
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;  percentageDu    1   48[COMRAM] unsigned char 
  7160 ;;  PWM_DutyCycl    2   49[COMRAM] unsigned int 
  7161 ;;  PWM_DutyCycl    2   46[COMRAM] unsigned int 
  7162 ;; Return value:  Size  Location     Type
  7163 ;;		None               void
  7164 ;; Registers used:
  7165 ;;		wreg, status,2, status,0, cstack
  7166 ;; Tracked objects:
  7167 ;;		On entry : 0/0
  7168 ;;		On exit  : 0/0
  7169 ;;		Unchanged: 0/0
  7170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7171 ;;      Params:         0       0       0       0       0       0       0       0       0
  7172 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7173 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7174 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7175 ;;Total ram usage:        9 bytes
  7176 ;; Hardware stack levels used:    1
  7177 ;; Hardware stack levels required when called:    2
  7178 ;; This function calls:
  7179 ;;		i2_SetDCPWM2
  7180 ;;		i2___ftmul
  7181 ;;		i2___fttol
  7182 ;;		i2___lbtoft
  7183 ;; This function is called by:
  7184 ;;		i2_right
  7185 ;;		i2_left
  7186 ;;		i2_go_straight
  7187 ;; This function uses a non-reentrant model
  7188 ;;
  7189                           
  7190                           	psect	text48
  7191  00189E                     __ptext48:
  7192                           	opt stack 0
  7193  00189E                     i2_PWM_DutyCycle2:
  7194                           	opt stack 20
  7195                           
  7196                           ;incstack = 0
  7197                           ;i2PWM_DutyCycle2@percentageDuty stored from wreg
  7198  00189E  6E31               	movwf	i2PWM_DutyCycle2@percentageDuty,c
  7199                           
  7200                           ;pwm.c: 57: unsigned int DC = 0, DutyCycle = 0;
  7201  0018A0  0E00               	movlw	0
  7202  0018A2  6E33               	movwf	i2PWM_DutyCycle2@DC+1,c
  7203  0018A4  0E00               	movlw	0
  7204  0018A6  6E32               	movwf	i2PWM_DutyCycle2@DC,c
  7205  0018A8  0E00               	movlw	0
  7206  0018AA  6E30               	movwf	i2PWM_DutyCycle2@DutyCycle+1,c
  7207  0018AC  0E00               	movlw	0
  7208  0018AE  6E2F               	movwf	i2PWM_DutyCycle2@DutyCycle,c
  7209                           
  7210                           ;pwm.c: 59: DC = (unsigned int)(percentageDuty * 10.23);
  7211  0018B0  0EAE               	movlw	174
  7212  0018B2  6E10               	movwf	i2___ftmul@f2,c
  7213  0018B4  0E23               	movlw	35
  7214  0018B6  6E11               	movwf	i2___ftmul@f2+1,c
  7215  0018B8  0E41               	movlw	65
  7216  0018BA  6E12               	movwf	i2___ftmul@f2+2,c
  7217  0018BC  5031               	movf	i2PWM_DutyCycle2@percentageDuty,w,c
  7218  0018BE  EC74  F00E         	call	i2___lbtoft
  7219  0018C2  C009  F00D         	movff	?i2___lbtoft,i2___ftmul@f1
  7220  0018C6  C00A  F00E         	movff	?i2___lbtoft+1,i2___ftmul@f1+1
  7221  0018CA  C00B  F00F         	movff	?i2___lbtoft+2,i2___ftmul@f1+2
  7222  0018CE  ECEE  F007         	call	i2___ftmul	;wreg free
  7223  0018D2  C00D  F01C         	movff	?i2___ftmul,i2___fttol@f1
  7224  0018D6  C00E  F01D         	movff	?i2___ftmul+1,i2___fttol@f1+1
  7225  0018DA  C00F  F01E         	movff	?i2___ftmul+2,i2___fttol@f1+2
  7226  0018DE  ECCC  F008         	call	i2___fttol	;wreg free
  7227  0018E2  C01C  F02B         	movff	?i2___fttol,??i2_PWM_DutyCycle2
  7228  0018E6  C01D  F02C         	movff	?i2___fttol+1,??i2_PWM_DutyCycle2+1
  7229  0018EA  C01E  F02D         	movff	?i2___fttol+2,??i2_PWM_DutyCycle2+2
  7230  0018EE  C01F  F02E         	movff	?i2___fttol+3,??i2_PWM_DutyCycle2+3
  7231  0018F2  C02B  F032         	movff	??i2_PWM_DutyCycle2,i2PWM_DutyCycle2@DC
  7232  0018F6  C02C  F033         	movff	??i2_PWM_DutyCycle2+1,i2PWM_DutyCycle2@DC+1
  7233                           
  7234                           ;pwm.c: 60: SetDCPWM2(DC);
  7235  0018FA  C032  F001         	movff	i2PWM_DutyCycle2@DC,i2SetDCPWM2@dutycycle
  7236  0018FE  C033  F002         	movff	i2PWM_DutyCycle2@DC+1,i2SetDCPWM2@dutycycle+1
  7237  001902  ECFB  F00D         	call	i2_SetDCPWM2	;wreg free
  7238                           
  7239                           ;pwm.c: 61: return;
  7240  001906  0012               	return	
  7241  001908                     __end_ofi2_PWM_DutyCycle2:
  7242                           	opt stack 0
  7243                           pclatu	equ	0xFFB
  7244                           pclath	equ	0xFFA
  7245                           tblptru	equ	0xFF8
  7246                           tblptrh	equ	0xFF7
  7247                           tblptrl	equ	0xFF6
  7248                           tablat	equ	0xFF5
  7249                           prodh	equ	0xFF4
  7250                           prodl	equ	0xFF3
  7251                           intcon	equ	0xFF2
  7252                           intcon3	equ	0xFF0
  7253                           indf0	equ	0xFEF
  7254                           postinc0	equ	0xFEE
  7255                           fsr0h	equ	0xFEA
  7256                           fsr0l	equ	0xFE9
  7257                           wreg	equ	0xFE8
  7258                           postinc1	equ	0xFE6
  7259                           postdec1	equ	0xFE5
  7260                           fsr1h	equ	0xFE2
  7261                           fsr1l	equ	0xFE1
  7262                           indf2	equ	0xFDF
  7263                           postinc2	equ	0xFDE
  7264                           postdec2	equ	0xFDD
  7265                           fsr2h	equ	0xFDA
  7266                           fsr2l	equ	0xFD9
  7267                           status	equ	0xFD8
  7268                           
  7269 ;; *************** function i2_SetDCPWM2 *****************
  7270 ;; Defined at:
  7271 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2setdc.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;  dutycycle       2    0[COMRAM] unsigned int 
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;  SetDCPWM2       2    4[COMRAM] struct PWMDC
  7276 ;; Return value:  Size  Location     Type
  7277 ;;		None               void
  7278 ;; Registers used:
  7279 ;;		wreg, status,2, status,0
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7285 ;;      Params:         2       0       0       0       0       0       0       0       0
  7286 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7287 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7288 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7289 ;;Total ram usage:        6 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; This function calls:
  7292 ;;		Nothing
  7293 ;; This function is called by:
  7294 ;;		i2_PWM_DutyCycle2
  7295 ;; This function uses a non-reentrant model
  7296 ;;
  7297                           
  7298                           	psect	text49
  7299  001BF6                     __ptext49:
  7300                           	opt stack 0
  7301  001BF6                     i2_SetDCPWM2:
  7302                           	opt stack 21
  7303                           
  7304                           ;incstack = 0
  7305  001BF6  C001  F003         	movff	i2SetDCPWM2@dutycycle,??i2_SetDCPWM2
  7306  001BFA  C002  F004         	movff	i2SetDCPWM2@dutycycle+1,??i2_SetDCPWM2+1
  7307  001BFE  0E06               	movlw	6
  7308  001C00                     i2u228_45:
  7309  001C00  90D8               	bcf	status,0,c
  7310  001C02  3603               	rlcf	??i2_SetDCPWM2,f,c
  7311  001C04  3604               	rlcf	??i2_SetDCPWM2+1,f,c
  7312  001C06  2EE8               	decfsz	wreg,f,c
  7313  001C08  D7FB               	goto	i2u228_45
  7314  001C0A  C003  F005         	movff	??i2_SetDCPWM2,i2SetDCPWM2@DCycle
  7315  001C0E  C004  F006         	movff	??i2_SetDCPWM2+1,i2SetDCPWM2@DCycle+1
  7316  001C12  C006  FFBB         	movff	i2SetDCPWM2@DCycle+1,4027	;volatile
  7317  001C16  C005  F003         	movff	i2SetDCPWM2@DCycle,??i2_SetDCPWM2
  7318  001C1A  90D8               	bcf	status,0,c
  7319  001C1C  3203               	rrcf	??i2_SetDCPWM2,f,c
  7320  001C1E  90D8               	bcf	status,0,c
  7321  001C20  3203               	rrcf	??i2_SetDCPWM2,f,c
  7322  001C22  0E30               	movlw	48
  7323  001C24  1603               	andwf	??i2_SetDCPWM2,f,c
  7324  001C26  50BA               	movf	4026,w,c	;volatile
  7325  001C28  0BCF               	andlw	207
  7326  001C2A  1003               	iorwf	??i2_SetDCPWM2,w,c
  7327  001C2C  6EBA               	movwf	4026,c	;volatile
  7328  001C2E  0012               	return	
  7329  001C30                     __end_ofi2_SetDCPWM2:
  7330                           	opt stack 0
  7331                           pclatu	equ	0xFFB
  7332                           pclath	equ	0xFFA
  7333                           tblptru	equ	0xFF8
  7334                           tblptrh	equ	0xFF7
  7335                           tblptrl	equ	0xFF6
  7336                           tablat	equ	0xFF5
  7337                           prodh	equ	0xFF4
  7338                           prodl	equ	0xFF3
  7339                           intcon	equ	0xFF2
  7340                           intcon3	equ	0xFF0
  7341                           indf0	equ	0xFEF
  7342                           postinc0	equ	0xFEE
  7343                           fsr0h	equ	0xFEA
  7344                           fsr0l	equ	0xFE9
  7345                           wreg	equ	0xFE8
  7346                           postinc1	equ	0xFE6
  7347                           postdec1	equ	0xFE5
  7348                           fsr1h	equ	0xFE2
  7349                           fsr1l	equ	0xFE1
  7350                           indf2	equ	0xFDF
  7351                           postinc2	equ	0xFDE
  7352                           postdec2	equ	0xFDD
  7353                           fsr2h	equ	0xFDA
  7354                           fsr2l	equ	0xFD9
  7355                           status	equ	0xFD8
  7356                           
  7357 ;; *************** function i2_PWM_DutyCycle1 *****************
  7358 ;; Defined at:
  7359 ;;		line 33 in file "pwm.c"
  7360 ;; Parameters:    Size  Location     Type
  7361 ;;  percentageDu    1    wreg     unsigned char 
  7362 ;; Auto vars:     Size  Location     Type
  7363 ;;  percentageDu    1   48[COMRAM] unsigned char 
  7364 ;;  PWM_DutyCycl    2   49[COMRAM] unsigned int 
  7365 ;;  PWM_DutyCycl    2   46[COMRAM] unsigned int 
  7366 ;; Return value:  Size  Location     Type
  7367 ;;		None               void
  7368 ;; Registers used:
  7369 ;;		wreg, status,2, status,0, cstack
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7375 ;;      Params:         0       0       0       0       0       0       0       0       0
  7376 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7377 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7378 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7379 ;;Total ram usage:        9 bytes
  7380 ;; Hardware stack levels used:    1
  7381 ;; Hardware stack levels required when called:    2
  7382 ;; This function calls:
  7383 ;;		i2_SetDCPWM1
  7384 ;;		i2___ftmul
  7385 ;;		i2___fttol
  7386 ;;		i2___lbtoft
  7387 ;; This function is called by:
  7388 ;;		i2_right
  7389 ;;		i2_left
  7390 ;;		i2_go_straight
  7391 ;; This function uses a non-reentrant model
  7392 ;;
  7393                           
  7394                           	psect	text50
  7395  001908                     __ptext50:
  7396                           	opt stack 0
  7397  001908                     i2_PWM_DutyCycle1:
  7398                           	opt stack 20
  7399                           
  7400                           ;incstack = 0
  7401                           ;i2PWM_DutyCycle1@percentageDuty stored from wreg
  7402  001908  6E31               	movwf	i2PWM_DutyCycle1@percentageDuty,c
  7403                           
  7404                           ;pwm.c: 35: unsigned int DC = 0, DutyCycle = 0;
  7405  00190A  0E00               	movlw	0
  7406  00190C  6E33               	movwf	i2PWM_DutyCycle1@DC+1,c
  7407  00190E  0E00               	movlw	0
  7408  001910  6E32               	movwf	i2PWM_DutyCycle1@DC,c
  7409  001912  0E00               	movlw	0
  7410  001914  6E30               	movwf	i2PWM_DutyCycle1@DutyCycle+1,c
  7411  001916  0E00               	movlw	0
  7412  001918  6E2F               	movwf	i2PWM_DutyCycle1@DutyCycle,c
  7413                           
  7414                           ;pwm.c: 37: DC = (unsigned int)(percentageDuty * 10.23);
  7415  00191A  0EAE               	movlw	174
  7416  00191C  6E10               	movwf	i2___ftmul@f2,c
  7417  00191E  0E23               	movlw	35
  7418  001920  6E11               	movwf	i2___ftmul@f2+1,c
  7419  001922  0E41               	movlw	65
  7420  001924  6E12               	movwf	i2___ftmul@f2+2,c
  7421  001926  5031               	movf	i2PWM_DutyCycle1@percentageDuty,w,c
  7422  001928  EC74  F00E         	call	i2___lbtoft
  7423  00192C  C009  F00D         	movff	?i2___lbtoft,i2___ftmul@f1
  7424  001930  C00A  F00E         	movff	?i2___lbtoft+1,i2___ftmul@f1+1
  7425  001934  C00B  F00F         	movff	?i2___lbtoft+2,i2___ftmul@f1+2
  7426  001938  ECEE  F007         	call	i2___ftmul	;wreg free
  7427  00193C  C00D  F01C         	movff	?i2___ftmul,i2___fttol@f1
  7428  001940  C00E  F01D         	movff	?i2___ftmul+1,i2___fttol@f1+1
  7429  001944  C00F  F01E         	movff	?i2___ftmul+2,i2___fttol@f1+2
  7430  001948  ECCC  F008         	call	i2___fttol	;wreg free
  7431  00194C  C01C  F02B         	movff	?i2___fttol,??i2_PWM_DutyCycle1
  7432  001950  C01D  F02C         	movff	?i2___fttol+1,??i2_PWM_DutyCycle1+1
  7433  001954  C01E  F02D         	movff	?i2___fttol+2,??i2_PWM_DutyCycle1+2
  7434  001958  C01F  F02E         	movff	?i2___fttol+3,??i2_PWM_DutyCycle1+3
  7435  00195C  C02B  F032         	movff	??i2_PWM_DutyCycle1,i2PWM_DutyCycle1@DC
  7436  001960  C02C  F033         	movff	??i2_PWM_DutyCycle1+1,i2PWM_DutyCycle1@DC+1
  7437                           
  7438                           ;pwm.c: 38: SetDCPWM1(DC);
  7439  001964  C032  F001         	movff	i2PWM_DutyCycle1@DC,i2SetDCPWM1@dutycycle
  7440  001968  C033  F002         	movff	i2PWM_DutyCycle1@DC+1,i2SetDCPWM1@dutycycle+1
  7441  00196C  EC18  F00E         	call	i2_SetDCPWM1	;wreg free
  7442                           
  7443                           ;pwm.c: 39: return;
  7444  001970  0012               	return	
  7445  001972                     __end_ofi2_PWM_DutyCycle1:
  7446                           	opt stack 0
  7447                           pclatu	equ	0xFFB
  7448                           pclath	equ	0xFFA
  7449                           tblptru	equ	0xFF8
  7450                           tblptrh	equ	0xFF7
  7451                           tblptrl	equ	0xFF6
  7452                           tablat	equ	0xFF5
  7453                           prodh	equ	0xFF4
  7454                           prodl	equ	0xFF3
  7455                           intcon	equ	0xFF2
  7456                           intcon3	equ	0xFF0
  7457                           indf0	equ	0xFEF
  7458                           postinc0	equ	0xFEE
  7459                           fsr0h	equ	0xFEA
  7460                           fsr0l	equ	0xFE9
  7461                           wreg	equ	0xFE8
  7462                           postinc1	equ	0xFE6
  7463                           postdec1	equ	0xFE5
  7464                           fsr1h	equ	0xFE2
  7465                           fsr1l	equ	0xFE1
  7466                           indf2	equ	0xFDF
  7467                           postinc2	equ	0xFDE
  7468                           postdec2	equ	0xFDD
  7469                           fsr2h	equ	0xFDA
  7470                           fsr2l	equ	0xFD9
  7471                           status	equ	0xFD8
  7472                           
  7473 ;; *************** function i2___lbtoft *****************
  7474 ;; Defined at:
  7475 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lbtoft.c"
  7476 ;; Parameters:    Size  Location     Type
  7477 ;;  c               1    wreg     unsigned char 
  7478 ;; Auto vars:     Size  Location     Type
  7479 ;;  c               1   11[COMRAM] unsigned char 
  7480 ;; Return value:  Size  Location     Type
  7481 ;;                  3    8[COMRAM] float 
  7482 ;; Registers used:
  7483 ;;		wreg, status,2, status,0, cstack
  7484 ;; Tracked objects:
  7485 ;;		On entry : 0/0
  7486 ;;		On exit  : 0/0
  7487 ;;		Unchanged: 0/0
  7488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7489 ;;      Params:         3       0       0       0       0       0       0       0       0
  7490 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7491 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7492 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7493 ;;Total ram usage:        4 bytes
  7494 ;; Hardware stack levels used:    1
  7495 ;; Hardware stack levels required when called:    1
  7496 ;; This function calls:
  7497 ;;		i2___ftpack
  7498 ;; This function is called by:
  7499 ;;		i2_PWM_DutyCycle1
  7500 ;;		i2_PWM_DutyCycle2
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           
  7504                           	psect	text51
  7505  001CE8                     __ptext51:
  7506                           	opt stack 0
  7507  001CE8                     i2___lbtoft:
  7508                           	opt stack 20
  7509                           
  7510                           ;incstack = 0
  7511                           ;i2___lbtoft@c stored from wreg
  7512  001CE8  6E0C               	movwf	i2___lbtoft@c,c
  7513  001CEA  500C               	movf	i2___lbtoft@c,w,c
  7514  001CEC  6E01               	movwf	i2___ftpack@arg,c
  7515  001CEE  6A02               	clrf	i2___ftpack@arg+1,c
  7516  001CF0  6A03               	clrf	i2___ftpack@arg+2,c
  7517  001CF2  0E8E               	movlw	142
  7518  001CF4  6E04               	movwf	i2___ftpack@exp,c
  7519  001CF6  0E00               	movlw	0
  7520  001CF8  6E05               	movwf	i2___ftpack@sign,c
  7521  001CFA  ECFC  F009         	call	i2___ftpack	;wreg free
  7522  001CFE  C001  F009         	movff	?i2___ftpack,?i2___lbtoft
  7523  001D02  C002  F00A         	movff	?i2___ftpack+1,?i2___lbtoft+1
  7524  001D06  C003  F00B         	movff	?i2___ftpack+2,?i2___lbtoft+2
  7525  001D0A  0012               	return	
  7526  001D0C                     __end_ofi2___lbtoft:
  7527                           	opt stack 0
  7528                           pclatu	equ	0xFFB
  7529                           pclath	equ	0xFFA
  7530                           tblptru	equ	0xFF8
  7531                           tblptrh	equ	0xFF7
  7532                           tblptrl	equ	0xFF6
  7533                           tablat	equ	0xFF5
  7534                           prodh	equ	0xFF4
  7535                           prodl	equ	0xFF3
  7536                           intcon	equ	0xFF2
  7537                           intcon3	equ	0xFF0
  7538                           indf0	equ	0xFEF
  7539                           postinc0	equ	0xFEE
  7540                           fsr0h	equ	0xFEA
  7541                           fsr0l	equ	0xFE9
  7542                           wreg	equ	0xFE8
  7543                           postinc1	equ	0xFE6
  7544                           postdec1	equ	0xFE5
  7545                           fsr1h	equ	0xFE2
  7546                           fsr1l	equ	0xFE1
  7547                           indf2	equ	0xFDF
  7548                           postinc2	equ	0xFDE
  7549                           postdec2	equ	0xFDD
  7550                           fsr2h	equ	0xFDA
  7551                           fsr2l	equ	0xFD9
  7552                           status	equ	0xFD8
  7553                           
  7554 ;; *************** function i2___fttol *****************
  7555 ;; Defined at:
  7556 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  f1              3   27[COMRAM] float 
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;  __fttol         4   37[COMRAM] unsigned long 
  7561 ;;  __fttol         1   41[COMRAM] unsigned char 
  7562 ;;  __fttol         1   36[COMRAM] unsigned char 
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  4   27[COMRAM] long 
  7565 ;; Registers used:
  7566 ;;		wreg, status,2, status,0
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7572 ;;      Params:         4       0       0       0       0       0       0       0       0
  7573 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7574 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7575 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7576 ;;Total ram usage:       15 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; This function calls:
  7579 ;;		Nothing
  7580 ;; This function is called by:
  7581 ;;		i2_PWM_DutyCycle1
  7582 ;;		i2_PWM_DutyCycle2
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           	psect	text52
  7587  001198                     __ptext52:
  7588                           	opt stack 0
  7589  001198                     i2___fttol:
  7590                           	opt stack 21
  7591                           
  7592                           ;incstack = 0
  7593  001198  C01E  F020         	movff	i2___fttol@f1+2,??i2___fttol
  7594  00119C  6A21               	clrf	(??i2___fttol+1)& (0+255),c
  7595  00119E  6A22               	clrf	(??i2___fttol+2)& (0+255),c
  7596  0011A0  341D               	rlcf	i2___fttol@f1+1,w,c
  7597  0011A2  3620               	rlcf	??i2___fttol& (0+255),f,c
  7598  0011A4  E301               	bnc	u235_41
  7599  0011A6  8021               	bsf	(??i2___fttol+1)& (0+255),0,c
  7600  0011A8                     u235_41:
  7601  0011A8  5020               	movf	??i2___fttol,w,c
  7602  0011AA  6E2A               	movwf	i2___fttol@exp1,c
  7603  0011AC  662A               	tstfsz	i2___fttol@exp1& (0+255),c
  7604  0011AE  D001               	goto	i2l2770
  7605  0011B0  D038               	goto	i2u240_40
  7606  0011B2                     i2l2770:
  7607  0011B2  0E17               	movlw	23
  7608  0011B4  6E20               	movwf	??i2___fttol& (0+255),c
  7609  0011B6  C01C  F021         	movff	i2___fttol@f1,??i2___fttol+1
  7610  0011BA  C01D  F022         	movff	i2___fttol@f1+1,??i2___fttol+2
  7611  0011BE  C01E  F023         	movff	i2___fttol@f1+2,??i2___fttol+3
  7612  0011C2  2820               	incf	??i2___fttol,w,c
  7613  0011C4  6E24               	movwf	(??i2___fttol+4)& (0+255),c
  7614  0011C6  D004               	goto	i2u237_40
  7615  0011C8                     i2u237_45:
  7616  0011C8  90D8               	bcf	status,0,c
  7617  0011CA  3223               	rrcf	??i2___fttol+3,f,c
  7618  0011CC  3222               	rrcf	??i2___fttol+2,f,c
  7619  0011CE  3221               	rrcf	??i2___fttol+1,f,c
  7620  0011D0                     i2u237_40:
  7621  0011D0  2E24               	decfsz	(??i2___fttol+4)& (0+255),f,c
  7622  0011D2  D7FA               	goto	i2u237_45
  7623  0011D4  5021               	movf	??i2___fttol+1,w,c
  7624  0011D6  6E25               	movwf	i2___fttol@sign1,c
  7625  0011D8  8E1D               	bsf	i2___fttol@f1+1,7,c
  7626  0011DA  0EFF               	movlw	255
  7627  0011DC  161C               	andwf	i2___fttol@f1,f,c
  7628  0011DE  0EFF               	movlw	255
  7629  0011E0  161D               	andwf	i2___fttol@f1+1,f,c
  7630  0011E2  0E00               	movlw	0
  7631  0011E4  161E               	andwf	i2___fttol@f1+2,f,c
  7632  0011E6  501C               	movf	i2___fttol@f1,w,c
  7633  0011E8  6E26               	movwf	i2___fttol@lval,c
  7634  0011EA  501D               	movf	i2___fttol@f1+1,w,c
  7635  0011EC  6E27               	movwf	i2___fttol@lval+1,c
  7636  0011EE  501E               	movf	i2___fttol@f1+2,w,c
  7637  0011F0  6E28               	movwf	i2___fttol@lval+2,c
  7638  0011F2  6A29               	clrf	i2___fttol@lval+3,c
  7639  0011F4  0E8E               	movlw	142
  7640  0011F6  5E2A               	subwf	i2___fttol@exp1,f,c
  7641  0011F8  AE2A               	btfss	i2___fttol@exp1,7,c
  7642  0011FA  D010               	goto	i2l2792
  7643  0011FC  502A               	movf	i2___fttol@exp1,w,c
  7644  0011FE  0A80               	xorlw	128
  7645  001200  6E20               	movwf	??i2___fttol& (0+255),c
  7646  001202  0EF1               	movlw	241
  7647  001204  0A80               	xorlw	128
  7648  001206  5C20               	subwf	??i2___fttol,w,c
  7649  001208  A0D8               	btfss	status,0,c
  7650  00120A  D00B               	goto	i2u240_40
  7651  00120C                     i2l2788:
  7652  00120C  90D8               	bcf	status,0,c
  7653  00120E  3229               	rrcf	i2___fttol@lval+3,f,c
  7654  001210  3228               	rrcf	i2___fttol@lval+2,f,c
  7655  001212  3227               	rrcf	i2___fttol@lval+1,f,c
  7656  001214  3226               	rrcf	i2___fttol@lval,f,c
  7657  001216  3E2A               	incfsz	i2___fttol@exp1,f,c
  7658  001218  D7F9               	goto	i2l2788
  7659  00121A  D014               	goto	i2l2802
  7660  00121C                     i2l2792:
  7661  00121C  0E17               	movlw	23
  7662  00121E  642A               	cpfsgt	i2___fttol@exp1,c
  7663  001220  D00F               	goto	i2l2800
  7664  001222                     i2u240_40:
  7665  001222  0E00               	movlw	0
  7666  001224  6E1C               	movwf	?i2___fttol,c
  7667  001226  0E00               	movlw	0
  7668  001228  6E1D               	movwf	?i2___fttol+1,c
  7669  00122A  0E00               	movlw	0
  7670  00122C  6E1E               	movwf	?i2___fttol+2,c
  7671  00122E  0E00               	movlw	0
  7672  001230  6E1F               	movwf	?i2___fttol+3,c
  7673  001232  D01B               	goto	i2l995
  7674  001234                     i2l2798:
  7675  001234  90D8               	bcf	status,0,c
  7676  001236  3626               	rlcf	i2___fttol@lval,f,c
  7677  001238  3627               	rlcf	i2___fttol@lval+1,f,c
  7678  00123A  3628               	rlcf	i2___fttol@lval+2,f,c
  7679  00123C  3629               	rlcf	i2___fttol@lval+3,f,c
  7680  00123E  062A               	decf	i2___fttol@exp1,f,c
  7681  001240                     i2l2800:
  7682  001240  662A               	tstfsz	i2___fttol@exp1,c
  7683  001242  D7F8               	goto	i2l2798
  7684  001244                     i2l2802:
  7685  001244  5025               	movf	i2___fttol@sign1,w,c
  7686  001246  B4D8               	btfsc	status,2,c
  7687  001248  D008               	goto	i2l2806
  7688  00124A  1E29               	comf	i2___fttol@lval+3,f,c
  7689  00124C  1E28               	comf	i2___fttol@lval+2,f,c
  7690  00124E  1E27               	comf	i2___fttol@lval+1,f,c
  7691  001250  6C26               	negf	i2___fttol@lval,c
  7692  001252  0E00               	movlw	0
  7693  001254  2227               	addwfc	i2___fttol@lval+1,f,c
  7694  001256  2228               	addwfc	i2___fttol@lval+2,f,c
  7695  001258  2229               	addwfc	i2___fttol@lval+3,f,c
  7696  00125A                     i2l2806:
  7697  00125A  C026  F01C         	movff	i2___fttol@lval,?i2___fttol
  7698  00125E  C027  F01D         	movff	i2___fttol@lval+1,?i2___fttol+1
  7699  001262  C028  F01E         	movff	i2___fttol@lval+2,?i2___fttol+2
  7700  001266  C029  F01F         	movff	i2___fttol@lval+3,?i2___fttol+3
  7701  00126A                     i2l995:
  7702  00126A  0012               	return	
  7703  00126C                     __end_ofi2___fttol:
  7704                           	opt stack 0
  7705                           pclatu	equ	0xFFB
  7706                           pclath	equ	0xFFA
  7707                           tblptru	equ	0xFF8
  7708                           tblptrh	equ	0xFF7
  7709                           tblptrl	equ	0xFF6
  7710                           tablat	equ	0xFF5
  7711                           prodh	equ	0xFF4
  7712                           prodl	equ	0xFF3
  7713                           intcon	equ	0xFF2
  7714                           intcon3	equ	0xFF0
  7715                           indf0	equ	0xFEF
  7716                           postinc0	equ	0xFEE
  7717                           fsr0h	equ	0xFEA
  7718                           fsr0l	equ	0xFE9
  7719                           wreg	equ	0xFE8
  7720                           postinc1	equ	0xFE6
  7721                           postdec1	equ	0xFE5
  7722                           fsr1h	equ	0xFE2
  7723                           fsr1l	equ	0xFE1
  7724                           indf2	equ	0xFDF
  7725                           postinc2	equ	0xFDE
  7726                           postdec2	equ	0xFDD
  7727                           fsr2h	equ	0xFDA
  7728                           fsr2l	equ	0xFD9
  7729                           status	equ	0xFD8
  7730                           
  7731 ;; *************** function i2___ftmul *****************
  7732 ;; Defined at:
  7733 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
  7734 ;; Parameters:    Size  Location     Type
  7735 ;;  f1              3   12[COMRAM] float 
  7736 ;;  f2              3   15[COMRAM] float 
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;  __ftmul         3   22[COMRAM] unsigned um
  7739 ;;  __ftmul         1   26[COMRAM] unsigned char 
  7740 ;;  __ftmul         1   25[COMRAM] unsigned char 
  7741 ;;  __ftmul         1   21[COMRAM] unsigned char 
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  3   12[COMRAM] float 
  7744 ;; Registers used:
  7745 ;;		wreg, status,2, status,0, cstack
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7751 ;;      Params:         6       0       0       0       0       0       0       0       0
  7752 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7753 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7754 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7755 ;;Total ram usage:       15 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; Hardware stack levels required when called:    1
  7758 ;; This function calls:
  7759 ;;		i2___ftpack
  7760 ;; This function is called by:
  7761 ;;		i2_PWM_DutyCycle1
  7762 ;;		i2_PWM_DutyCycle2
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           	psect	text53
  7767  000FDC                     __ptext53:
  7768                           	opt stack 0
  7769  000FDC                     i2___ftmul:
  7770                           	opt stack 20
  7771                           
  7772                           ;incstack = 0
  7773  000FDC  C00F  F013         	movff	i2___ftmul@f1+2,??i2___ftmul
  7774  000FE0  6A14               	clrf	(??i2___ftmul+1)& (0+255),c
  7775  000FE2  6A15               	clrf	(??i2___ftmul+2)& (0+255),c
  7776  000FE4  340E               	rlcf	i2___ftmul@f1+1,w,c
  7777  000FE6  3613               	rlcf	??i2___ftmul& (0+255),f,c
  7778  000FE8  E301               	bnc	u229_41
  7779  000FEA  8014               	bsf	(??i2___ftmul+1)& (0+255),0,c
  7780  000FEC                     u229_41:
  7781  000FEC  5013               	movf	??i2___ftmul,w,c
  7782  000FEE  6E16               	movwf	i2___ftmul@exp,c
  7783  000FF0  6616               	tstfsz	i2___ftmul@exp& (0+255),c
  7784  000FF2  D001               	goto	i2l2722
  7785  000FF4  D00C               	goto	i2u232_40
  7786  000FF6                     i2l2722:
  7787  000FF6  C012  F013         	movff	i2___ftmul@f2+2,??i2___ftmul
  7788  000FFA  6A14               	clrf	(??i2___ftmul+1)& (0+255),c
  7789  000FFC  6A15               	clrf	(??i2___ftmul+2)& (0+255),c
  7790  000FFE  3411               	rlcf	i2___ftmul@f2+1,w,c
  7791  001000  3613               	rlcf	??i2___ftmul& (0+255),f,c
  7792  001002  E301               	bnc	u231_41
  7793  001004  8014               	bsf	(??i2___ftmul+1)& (0+255),0,c
  7794  001006                     u231_41:
  7795  001006  5013               	movf	??i2___ftmul,w,c
  7796  001008  6E1B               	movwf	i2___ftmul@sign,c
  7797  00100A  661B               	tstfsz	i2___ftmul@sign& (0+255),c
  7798  00100C  D007               	goto	i2l2728
  7799  00100E                     i2u232_40:
  7800  00100E  0E00               	movlw	0
  7801  001010  6E0D               	movwf	?i2___ftmul,c
  7802  001012  0E00               	movlw	0
  7803  001014  6E0E               	movwf	?i2___ftmul+1,c
  7804  001016  0E00               	movlw	0
  7805  001018  6E0F               	movwf	?i2___ftmul+2,c
  7806  00101A  D051               	goto	i2l975
  7807  00101C                     i2l2728:
  7808  00101C  501B               	movf	i2___ftmul@sign,w,c
  7809  00101E  0F7B               	addlw	123
  7810  001020  2616               	addwf	i2___ftmul@exp,f,c
  7811  001022  C00F  F01B         	movff	i2___ftmul@f1+2,i2___ftmul@sign
  7812  001026  5012               	movf	i2___ftmul@f2+2,w,c
  7813  001028  1A1B               	xorwf	i2___ftmul@sign,f,c
  7814  00102A  0E80               	movlw	128
  7815  00102C  161B               	andwf	i2___ftmul@sign,f,c
  7816  00102E  8E0E               	bsf	i2___ftmul@f1+1,7,c
  7817  001030  8E11               	bsf	i2___ftmul@f2+1,7,c
  7818  001032  0EFF               	movlw	255
  7819  001034  1610               	andwf	i2___ftmul@f2,f,c
  7820  001036  0EFF               	movlw	255
  7821  001038  1611               	andwf	i2___ftmul@f2+1,f,c
  7822  00103A  0E00               	movlw	0
  7823  00103C  1612               	andwf	i2___ftmul@f2+2,f,c
  7824  00103E  0E00               	movlw	0
  7825  001040  6E17               	movwf	i2___ftmul@f3_as_product,c
  7826  001042  0E00               	movlw	0
  7827  001044  6E18               	movwf	i2___ftmul@f3_as_product+1,c
  7828  001046  0E00               	movlw	0
  7829  001048  6E19               	movwf	i2___ftmul@f3_as_product+2,c
  7830  00104A  0E07               	movlw	7
  7831  00104C  6E1A               	movwf	i2___ftmul@cntr,c
  7832  00104E                     i2l2742:
  7833  00104E  A00D               	btfss	i2___ftmul@f1,0,c
  7834  001050  D006               	goto	i2l2746
  7835  001052  5010               	movf	i2___ftmul@f2,w,c
  7836  001054  2617               	addwf	i2___ftmul@f3_as_product,f,c
  7837  001056  5011               	movf	i2___ftmul@f2+1,w,c
  7838  001058  2218               	addwfc	i2___ftmul@f3_as_product+1,f,c
  7839  00105A  5012               	movf	i2___ftmul@f2+2,w,c
  7840  00105C  2219               	addwfc	i2___ftmul@f3_as_product+2,f,c
  7841  00105E                     i2l2746:
  7842  00105E  90D8               	bcf	status,0,c
  7843  001060  320F               	rrcf	i2___ftmul@f1+2,f,c
  7844  001062  320E               	rrcf	i2___ftmul@f1+1,f,c
  7845  001064  320D               	rrcf	i2___ftmul@f1,f,c
  7846  001066  90D8               	bcf	status,0,c
  7847  001068  3610               	rlcf	i2___ftmul@f2,f,c
  7848  00106A  3611               	rlcf	i2___ftmul@f2+1,f,c
  7849  00106C  3612               	rlcf	i2___ftmul@f2+2,f,c
  7850  00106E  2E1A               	decfsz	i2___ftmul@cntr,f,c
  7851  001070  D7EE               	goto	i2l2742
  7852  001072  0E09               	movlw	9
  7853  001074  6E1A               	movwf	i2___ftmul@cntr,c
  7854  001076                     i2l2752:
  7855  001076  A00D               	btfss	i2___ftmul@f1,0,c
  7856  001078  D006               	goto	i2l2756
  7857  00107A  5010               	movf	i2___ftmul@f2,w,c
  7858  00107C  2617               	addwf	i2___ftmul@f3_as_product,f,c
  7859  00107E  5011               	movf	i2___ftmul@f2+1,w,c
  7860  001080  2218               	addwfc	i2___ftmul@f3_as_product+1,f,c
  7861  001082  5012               	movf	i2___ftmul@f2+2,w,c
  7862  001084  2219               	addwfc	i2___ftmul@f3_as_product+2,f,c
  7863  001086                     i2l2756:
  7864  001086  90D8               	bcf	status,0,c
  7865  001088  320F               	rrcf	i2___ftmul@f1+2,f,c
  7866  00108A  320E               	rrcf	i2___ftmul@f1+1,f,c
  7867  00108C  320D               	rrcf	i2___ftmul@f1,f,c
  7868  00108E  90D8               	bcf	status,0,c
  7869  001090  3219               	rrcf	i2___ftmul@f3_as_product+2,f,c
  7870  001092  3218               	rrcf	i2___ftmul@f3_as_product+1,f,c
  7871  001094  3217               	rrcf	i2___ftmul@f3_as_product,f,c
  7872  001096  2E1A               	decfsz	i2___ftmul@cntr,f,c
  7873  001098  D7EE               	goto	i2l2752
  7874  00109A  C017  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
  7875  00109E  C018  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
  7876  0010A2  C019  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
  7877  0010A6  C016  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
  7878  0010AA  C01B  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
  7879  0010AE  ECFC  F009         	call	i2___ftpack	;wreg free
  7880  0010B2  C001  F00D         	movff	?i2___ftpack,?i2___ftmul
  7881  0010B6  C002  F00E         	movff	?i2___ftpack+1,?i2___ftmul+1
  7882  0010BA  C003  F00F         	movff	?i2___ftpack+2,?i2___ftmul+2
  7883  0010BE                     i2l975:
  7884  0010BE  0012               	return	
  7885  0010C0                     __end_ofi2___ftmul:
  7886                           	opt stack 0
  7887                           pclatu	equ	0xFFB
  7888                           pclath	equ	0xFFA
  7889                           tblptru	equ	0xFF8
  7890                           tblptrh	equ	0xFF7
  7891                           tblptrl	equ	0xFF6
  7892                           tablat	equ	0xFF5
  7893                           prodh	equ	0xFF4
  7894                           prodl	equ	0xFF3
  7895                           intcon	equ	0xFF2
  7896                           intcon3	equ	0xFF0
  7897                           indf0	equ	0xFEF
  7898                           postinc0	equ	0xFEE
  7899                           fsr0h	equ	0xFEA
  7900                           fsr0l	equ	0xFE9
  7901                           wreg	equ	0xFE8
  7902                           postinc1	equ	0xFE6
  7903                           postdec1	equ	0xFE5
  7904                           fsr1h	equ	0xFE2
  7905                           fsr1l	equ	0xFE1
  7906                           indf2	equ	0xFDF
  7907                           postinc2	equ	0xFDE
  7908                           postdec2	equ	0xFDD
  7909                           fsr2h	equ	0xFDA
  7910                           fsr2l	equ	0xFD9
  7911                           status	equ	0xFD8
  7912                           
  7913 ;; *************** function i2___ftpack *****************
  7914 ;; Defined at:
  7915 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;  arg             3    0[COMRAM] unsigned um
  7918 ;;  exp             1    3[COMRAM] unsigned char 
  7919 ;;  sign            1    4[COMRAM] unsigned char 
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;		None
  7922 ;; Return value:  Size  Location     Type
  7923 ;;                  3    0[COMRAM] float 
  7924 ;; Registers used:
  7925 ;;		wreg, status,2, status,0
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7931 ;;      Params:         5       0       0       0       0       0       0       0       0
  7932 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7933 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7934 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7935 ;;Total ram usage:        8 bytes
  7936 ;; Hardware stack levels used:    1
  7937 ;; This function calls:
  7938 ;;		Nothing
  7939 ;; This function is called by:
  7940 ;;		i2___ftmul
  7941 ;;		i2___lbtoft
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945                           	psect	text54
  7946  0013F8                     __ptext54:
  7947                           	opt stack 0
  7948  0013F8                     i2___ftpack:
  7949                           	opt stack 20
  7950                           
  7951                           ;incstack = 0
  7952  0013F8  5004               	movf	i2___ftpack@exp,w,c
  7953  0013FA  B4D8               	btfsc	status,2,c
  7954  0013FC  D005               	goto	i2l2560
  7955  0013FE  5001               	movf	i2___ftpack@arg,w,c
  7956  001400  1002               	iorwf	i2___ftpack@arg+1,w,c
  7957  001402  1003               	iorwf	i2___ftpack@arg+2,w,c
  7958  001404  A4D8               	btfss	status,2,c
  7959  001406  D00C               	goto	i2l2566
  7960  001408                     i2l2560:
  7961  001408  0E00               	movlw	0
  7962  00140A  6E01               	movwf	?i2___ftpack,c
  7963  00140C  0E00               	movlw	0
  7964  00140E  6E02               	movwf	?i2___ftpack+1,c
  7965  001410  0E00               	movlw	0
  7966  001412  6E03               	movwf	?i2___ftpack+2,c
  7967  001414  D044               	goto	i2l891
  7968  001416                     i2l2564:
  7969  001416  2A04               	incf	i2___ftpack@exp,f,c
  7970  001418  90D8               	bcf	status,0,c
  7971  00141A  3203               	rrcf	i2___ftpack@arg+2,f,c
  7972  00141C  3202               	rrcf	i2___ftpack@arg+1,f,c
  7973  00141E  3201               	rrcf	i2___ftpack@arg,f,c
  7974  001420                     i2l2566:
  7975  001420  0E00               	movlw	0
  7976  001422  1401               	andwf	i2___ftpack@arg,w,c
  7977  001424  6E06               	movwf	??i2___ftpack& (0+255),c
  7978  001426  0E00               	movlw	0
  7979  001428  1402               	andwf	i2___ftpack@arg+1,w,c
  7980  00142A  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  7981  00142C  0EFE               	movlw	254
  7982  00142E  1403               	andwf	i2___ftpack@arg+2,w,c
  7983  001430  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  7984  001432  5006               	movf	??i2___ftpack,w,c
  7985  001434  1007               	iorwf	??i2___ftpack+1,w,c
  7986  001436  1008               	iorwf	??i2___ftpack+2,w,c
  7987  001438  B4D8               	btfsc	status,2,c
  7988  00143A  D00C               	goto	i2l2572
  7989  00143C  D7EC               	goto	i2l2564
  7990  00143E                     i2l2568:
  7991  00143E  2A04               	incf	i2___ftpack@exp,f,c
  7992  001440  0E01               	movlw	1
  7993  001442  2601               	addwf	i2___ftpack@arg,f,c
  7994  001444  0E00               	movlw	0
  7995  001446  2202               	addwfc	i2___ftpack@arg+1,f,c
  7996  001448  0E00               	movlw	0
  7997  00144A  2203               	addwfc	i2___ftpack@arg+2,f,c
  7998  00144C  90D8               	bcf	status,0,c
  7999  00144E  3203               	rrcf	i2___ftpack@arg+2,f,c
  8000  001450  3202               	rrcf	i2___ftpack@arg+1,f,c
  8001  001452  3201               	rrcf	i2___ftpack@arg,f,c
  8002  001454                     i2l2572:
  8003  001454  0E00               	movlw	0
  8004  001456  1401               	andwf	i2___ftpack@arg,w,c
  8005  001458  6E06               	movwf	??i2___ftpack& (0+255),c
  8006  00145A  0E00               	movlw	0
  8007  00145C  1402               	andwf	i2___ftpack@arg+1,w,c
  8008  00145E  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  8009  001460  0EFF               	movlw	255
  8010  001462  1403               	andwf	i2___ftpack@arg+2,w,c
  8011  001464  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  8012  001466  5006               	movf	??i2___ftpack,w,c
  8013  001468  1007               	iorwf	??i2___ftpack+1,w,c
  8014  00146A  1008               	iorwf	??i2___ftpack+2,w,c
  8015  00146C  B4D8               	btfsc	status,2,c
  8016  00146E  D006               	goto	i2l2576
  8017  001470  D7E6               	goto	i2l2568
  8018  001472                     i2l2574:
  8019  001472  0604               	decf	i2___ftpack@exp,f,c
  8020  001474  90D8               	bcf	status,0,c
  8021  001476  3601               	rlcf	i2___ftpack@arg,f,c
  8022  001478  3602               	rlcf	i2___ftpack@arg+1,f,c
  8023  00147A  3603               	rlcf	i2___ftpack@arg+2,f,c
  8024  00147C                     i2l2576:
  8025  00147C  AE02               	btfss	i2___ftpack@arg+1,7,c
  8026  00147E  D7F9               	goto	i2l2574
  8027  001480  A004               	btfss	i2___ftpack@exp,0,c
  8028  001482  9E02               	bcf	i2___ftpack@arg+1,7,c
  8029  001484  90D8               	bcf	status,0,c
  8030  001486  3204               	rrcf	i2___ftpack@exp,f,c
  8031  001488  5004               	movf	i2___ftpack@exp,w,c
  8032  00148A  1203               	iorwf	i2___ftpack@arg+2,f,c
  8033  00148C  5005               	movf	i2___ftpack@sign,w,c
  8034  00148E  A4D8               	btfss	status,2,c
  8035  001490  8E03               	bsf	i2___ftpack@arg+2,7,c
  8036  001492  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
  8037  001496  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
  8038  00149A  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
  8039  00149E                     i2l891:
  8040  00149E  0012               	return	
  8041  0014A0                     __end_ofi2___ftpack:
  8042                           	opt stack 0
  8043                           pclatu	equ	0xFFB
  8044                           pclath	equ	0xFFA
  8045                           tblptru	equ	0xFF8
  8046                           tblptrh	equ	0xFF7
  8047                           tblptrl	equ	0xFF6
  8048                           tablat	equ	0xFF5
  8049                           prodh	equ	0xFF4
  8050                           prodl	equ	0xFF3
  8051                           intcon	equ	0xFF2
  8052                           intcon3	equ	0xFF0
  8053                           indf0	equ	0xFEF
  8054                           postinc0	equ	0xFEE
  8055                           fsr0h	equ	0xFEA
  8056                           fsr0l	equ	0xFE9
  8057                           wreg	equ	0xFE8
  8058                           postinc1	equ	0xFE6
  8059                           postdec1	equ	0xFE5
  8060                           fsr1h	equ	0xFE2
  8061                           fsr1l	equ	0xFE1
  8062                           indf2	equ	0xFDF
  8063                           postinc2	equ	0xFDE
  8064                           postdec2	equ	0xFDD
  8065                           fsr2h	equ	0xFDA
  8066                           fsr2l	equ	0xFD9
  8067                           status	equ	0xFD8
  8068                           
  8069 ;; *************** function i2_SetDCPWM1 *****************
  8070 ;; Defined at:
  8071 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1setdc.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;  dutycycle       2    0[COMRAM] unsigned int 
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;  SetDCPWM1       2    4[COMRAM] struct PWMDC
  8076 ;; Return value:  Size  Location     Type
  8077 ;;		None               void
  8078 ;; Registers used:
  8079 ;;		wreg, status,2, status,0
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8085 ;;      Params:         2       0       0       0       0       0       0       0       0
  8086 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8087 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8088 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8089 ;;Total ram usage:        6 bytes
  8090 ;; Hardware stack levels used:    1
  8091 ;; This function calls:
  8092 ;;		Nothing
  8093 ;; This function is called by:
  8094 ;;		i2_PWM_DutyCycle1
  8095 ;; This function uses a non-reentrant model
  8096 ;;
  8097                           
  8098                           	psect	text55
  8099  001C30                     __ptext55:
  8100                           	opt stack 0
  8101  001C30                     i2_SetDCPWM1:
  8102                           	opt stack 21
  8103                           
  8104                           ;incstack = 0
  8105  001C30  C001  F003         	movff	i2SetDCPWM1@dutycycle,??i2_SetDCPWM1
  8106  001C34  C002  F004         	movff	i2SetDCPWM1@dutycycle+1,??i2_SetDCPWM1+1
  8107  001C38  0E06               	movlw	6
  8108  001C3A                     i2u227_45:
  8109  001C3A  90D8               	bcf	status,0,c
  8110  001C3C  3603               	rlcf	??i2_SetDCPWM1,f,c
  8111  001C3E  3604               	rlcf	??i2_SetDCPWM1+1,f,c
  8112  001C40  2EE8               	decfsz	wreg,f,c
  8113  001C42  D7FB               	goto	i2u227_45
  8114  001C44  C003  F005         	movff	??i2_SetDCPWM1,i2SetDCPWM1@DCycle
  8115  001C48  C004  F006         	movff	??i2_SetDCPWM1+1,i2SetDCPWM1@DCycle+1
  8116  001C4C  C006  FFBE         	movff	i2SetDCPWM1@DCycle+1,4030	;volatile
  8117  001C50  C005  F003         	movff	i2SetDCPWM1@DCycle,??i2_SetDCPWM1
  8118  001C54  90D8               	bcf	status,0,c
  8119  001C56  3203               	rrcf	??i2_SetDCPWM1,f,c
  8120  001C58  90D8               	bcf	status,0,c
  8121  001C5A  3203               	rrcf	??i2_SetDCPWM1,f,c
  8122  001C5C  0E30               	movlw	48
  8123  001C5E  1603               	andwf	??i2_SetDCPWM1,f,c
  8124  001C60  50BD               	movf	4029,w,c	;volatile
  8125  001C62  0BCF               	andlw	207
  8126  001C64  1003               	iorwf	??i2_SetDCPWM1,w,c
  8127  001C66  6EBD               	movwf	4029,c	;volatile
  8128  001C68  0012               	return	
  8129  001C6A                     __end_ofi2_SetDCPWM1:
  8130                           	opt stack 0
  8131                           pclatu	equ	0xFFB
  8132                           pclath	equ	0xFFA
  8133                           tblptru	equ	0xFF8
  8134                           tblptrh	equ	0xFF7
  8135                           tblptrl	equ	0xFF6
  8136                           tablat	equ	0xFF5
  8137                           prodh	equ	0xFF4
  8138                           prodl	equ	0xFF3
  8139                           intcon	equ	0xFF2
  8140                           intcon3	equ	0xFF0
  8141                           indf0	equ	0xFEF
  8142                           postinc0	equ	0xFEE
  8143                           fsr0h	equ	0xFEA
  8144                           fsr0l	equ	0xFE9
  8145                           wreg	equ	0xFE8
  8146                           postinc1	equ	0xFE6
  8147                           postdec1	equ	0xFE5
  8148                           fsr1h	equ	0xFE2
  8149                           fsr1l	equ	0xFE1
  8150                           indf2	equ	0xFDF
  8151                           postinc2	equ	0xFDE
  8152                           postdec2	equ	0xFDD
  8153                           fsr2h	equ	0xFDA
  8154                           fsr2l	equ	0xFD9
  8155                           status	equ	0xFD8
  8156                           
  8157 ;; *************** function _ReadUSART *****************
  8158 ;; Defined at:
  8159 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uread.c"
  8160 ;; Parameters:    Size  Location     Type
  8161 ;;		None
  8162 ;; Auto vars:     Size  Location     Type
  8163 ;;  data            1    0[COMRAM] unsigned char 
  8164 ;; Return value:  Size  Location     Type
  8165 ;;                  1    wreg      unsigned char 
  8166 ;; Registers used:
  8167 ;;		wreg, status,2, status,0
  8168 ;; Tracked objects:
  8169 ;;		On entry : 0/0
  8170 ;;		On exit  : 0/0
  8171 ;;		Unchanged: 0/0
  8172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8173 ;;      Params:         0       0       0       0       0       0       0       0       0
  8174 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8176 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8177 ;;Total ram usage:        1 bytes
  8178 ;; Hardware stack levels used:    1
  8179 ;; This function calls:
  8180 ;;		Nothing
  8181 ;; This function is called by:
  8182 ;;		_TMRO_USART
  8183 ;; This function uses a non-reentrant model
  8184 ;;
  8185                           
  8186                           	psect	text56
  8187  001D0C                     __ptext56:
  8188                           	opt stack 0
  8189  001D0C                     _ReadUSART:
  8190                           	opt stack 23
  8191                           
  8192                           ;incstack = 0
  8193  001D0C  0EF2               	movlw	242
  8194  001D0E  1654               	andwf	_USART_Status,f,c
  8195  001D10  ACAB               	btfss	4011,6,c	;volatile
  8196  001D12  D003               	goto	i2l567
  8197  001D14  9054               	bcf	_USART_Status,0,c
  8198  001D16  B0AB               	btfsc	4011,0,c	;volatile
  8199  001D18  8054               	bsf	_USART_Status,0,c
  8200  001D1A                     i2l567:
  8201  001D1A  B4AB               	btfsc	4011,2,c	;volatile
  8202  001D1C  8454               	bsf	_USART_Status,2,c
  8203  001D1E  B2AB               	btfsc	4011,1,c	;volatile
  8204  001D20  8654               	bsf	_USART_Status,3,c
  8205  001D22  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  8206  001D26  5001               	movf	ReadUSART@data,w,c
  8207  001D28  0012               	return	
  8208  001D2A                     __end_of_ReadUSART:
  8209                           	opt stack 0
  8210                           pclatu	equ	0xFFB
  8211                           pclath	equ	0xFFA
  8212                           tblptru	equ	0xFF8
  8213                           tblptrh	equ	0xFF7
  8214                           tblptrl	equ	0xFF6
  8215                           tablat	equ	0xFF5
  8216                           prodh	equ	0xFF4
  8217                           prodl	equ	0xFF3
  8218                           intcon	equ	0xFF2
  8219                           intcon3	equ	0xFF0
  8220                           indf0	equ	0xFEF
  8221                           postinc0	equ	0xFEE
  8222                           fsr0h	equ	0xFEA
  8223                           fsr0l	equ	0xFE9
  8224                           wreg	equ	0xFE8
  8225                           postinc1	equ	0xFE6
  8226                           postdec1	equ	0xFE5
  8227                           fsr1h	equ	0xFE2
  8228                           fsr1l	equ	0xFE1
  8229                           indf2	equ	0xFDF
  8230                           postinc2	equ	0xFDE
  8231                           postdec2	equ	0xFDD
  8232                           fsr2h	equ	0xFDA
  8233                           fsr2l	equ	0xFD9
  8234                           status	equ	0xFD8
  8235                           pclatu	equ	0xFFB
  8236                           pclath	equ	0xFFA
  8237                           tblptru	equ	0xFF8
  8238                           tblptrh	equ	0xFF7
  8239                           tblptrl	equ	0xFF6
  8240                           tablat	equ	0xFF5
  8241                           prodh	equ	0xFF4
  8242                           prodl	equ	0xFF3
  8243                           intcon	equ	0xFF2
  8244                           intcon3	equ	0xFF0
  8245                           indf0	equ	0xFEF
  8246                           postinc0	equ	0xFEE
  8247                           fsr0h	equ	0xFEA
  8248                           fsr0l	equ	0xFE9
  8249                           wreg	equ	0xFE8
  8250                           postinc1	equ	0xFE6
  8251                           postdec1	equ	0xFE5
  8252                           fsr1h	equ	0xFE2
  8253                           fsr1l	equ	0xFE1
  8254                           indf2	equ	0xFDF
  8255                           postinc2	equ	0xFDE
  8256                           postdec2	equ	0xFDD
  8257                           fsr2h	equ	0xFDA
  8258                           fsr2l	equ	0xFD9
  8259                           status	equ	0xFD8
  8260                           
  8261                           	psect	rparam
  8262  0000                     pclatu	equ	0xFFB
  8263                           pclath	equ	0xFFA
  8264                           tblptru	equ	0xFF8
  8265                           tblptrh	equ	0xFF7
  8266                           tblptrl	equ	0xFF6
  8267                           tablat	equ	0xFF5
  8268                           prodh	equ	0xFF4
  8269                           prodl	equ	0xFF3
  8270                           intcon	equ	0xFF2
  8271                           intcon3	equ	0xFF0
  8272                           indf0	equ	0xFEF
  8273                           postinc0	equ	0xFEE
  8274                           fsr0h	equ	0xFEA
  8275                           fsr0l	equ	0xFE9
  8276                           wreg	equ	0xFE8
  8277                           postinc1	equ	0xFE6
  8278                           postdec1	equ	0xFE5
  8279                           fsr1h	equ	0xFE2
  8280                           fsr1l	equ	0xFE1
  8281                           indf2	equ	0xFDF
  8282                           postinc2	equ	0xFDE
  8283                           postdec2	equ	0xFDD
  8284                           fsr2h	equ	0xFDA
  8285                           fsr2l	equ	0xFD9
  8286                           status	equ	0xFD8


Data Sizes:
    Strings     95
    Constant    10
    Data        20
    BSS         144
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     65      95
    BANK0           160     56     150
    BANK1           256      0      40
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> putcBluetoothInt@s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1388$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    putSTRINGU1@dato	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[15]), STR_1(CODE[12]), 
		 -> BT_Init@nameBT(BANK0[18]), 

    putcBluetoothString@a	PTR unsigned char  size(2) Largest target is 2
		 -> STR_10(CODE[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> comando(BANK0[20]), 

    SendBlueToothCommand@command	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[15]), STR_1(CODE[12]), 
		 -> BT_Init@nameBT(BANK0[18]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMRO_USART in COMRAM

    i2_right->i2_PWM_DutyCycle1
    i2_right->i2_PWM_DutyCycle2
    i2_left->i2_PWM_DutyCycle1
    i2_left->i2_PWM_DutyCycle2
    i2_go_straight->i2_PWM_DutyCycle1
    i2_go_straight->i2_PWM_DutyCycle2
    i2_PWM_DutyCycle2->i2___fttol
    i2_PWM_DutyCycle1->i2___fttol
    i2___lbtoft->i2___ftpack
    i2___fttol->i2___ftmul
    i2___ftmul->i2___lbtoft

Critical Paths under _main in BANK0

    _main->_Comando_Tablet
    _Inicializa_Driveby->_PWM_DutyCycle1
    _Inicializa_Driveby->_PWM_DutyCycle2
    _PWM_init2->_OpenPWM2
    _PWM_init1->_OpenPWM1
    _BT_Init->_SendBlueToothCommand
    _SendBlueToothCommand->_putSTRINGU1
    _putSTRINGU1->_putcTxU1
    _putcTxU1->_WriteUSART
    _Pause_seg->_Pause_ms
    _Comando_Tablet->_putcBluetoothInt
    _putcBluetoothString->_UART1_Init
    _putcBluetoothInt->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART1_Init->_OpenUSART
    _right->_PWM_DutyCycle1
    _right->_PWM_DutyCycle2
    _left->_PWM_DutyCycle1
    _left->_PWM_DutyCycle2
    _go_straight->_PWM_DutyCycle1
    _go_straight->_PWM_DutyCycle2
    _PWM_DutyCycle2->___fttol
    _PWM_DutyCycle1->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lbtoft

Critical Paths under _TMRO_USART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMRO_USART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMRO_USART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMRO_USART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMRO_USART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMRO_USART in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMRO_USART in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMRO_USART in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   88259
                     _Comando_Tablet
                 _Inicializa_Driveby
                         _UART1_Init
                     _clrBufferUSART
                      _getCNY70Value
 ---------------------------------------------------------------------------------
 (1) _Inicializa_Driveby                                   3     3      0   12709
                                             51 BANK0      3     3      0
                            _BT_Init
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                          _PWM_init1
                          _PWM_init2
                          _Pause_seg
                     _clrBufferUSART
 ---------------------------------------------------------------------------------
 (2) _PWM_init2                                            1     1      0      68
                                              3 BANK0      1     1      0
                           _OpenPWM2
 ---------------------------------------------------------------------------------
 (3) _OpenPWM2                                             4     4      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _PWM_init1                                            1     1      0      44
                                              1 BANK0      1     1      0
                           _OpenPWM1
 ---------------------------------------------------------------------------------
 (3) _OpenPWM1                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BT_Init                                             18    18      0    1720
                                             14 BANK0     18    18      0
                          _Pause_seg
               _SendBlueToothCommand
                         _UART1_Init
 ---------------------------------------------------------------------------------
 (3) _SendBlueToothCommand                                 4     0      4    1039
                                             10 BANK0      4     0      4
                        _putSTRINGU1
 ---------------------------------------------------------------------------------
 (4) _putSTRINGU1                                          8     4      4     355
                                              2 BANK0      8     4      4
                           _putcTxU1
 ---------------------------------------------------------------------------------
 (5) _putcTxU1                                             1     1      0      44
                                              1 BANK0      1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _Pause_seg                                            2     2      0     350
                                              5 BANK0      2     2      0
                           _Pause_ms
 ---------------------------------------------------------------------------------
 (3) _Pause_ms                                             5     3      2     303
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _Comando_Tablet                                       2     2      0   43940
                                             54 BANK0      2     2      0
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                     _clrBufferUSART
                      _getCNY70Value
                   _putcBluetoothInt
                _putcBluetoothString
 ---------------------------------------------------------------------------------
 (2) _putcBluetoothString                                  6     4      2     482
                                              7 BANK0      6     4      2
                         _UART1_Init
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _putcBluetoothInt                                    24    22      2    1718
                                             30 BANK0     24    22      2
                         _UART1_Init
                         _WriteUSART
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    12      6    1182
                                             12 BANK0     18    12      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _WriteUSART                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           1     1      0     306
                                              6 BANK0      1     1      0
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     284
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _getCNY70Value                                        2     0      2   31236
                                             51 BANK0      2     0      2
                        _go_straight
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (2) _right                                                0     0      0   10412
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                 _motor_Backforward1
                     _motor_forward1
 ---------------------------------------------------------------------------------
 (3) _motor_forward1                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _motor_Backforward1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _left                                                 0     0      0   10412
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                 _motor_Backforward2
                     _motor_forward2
 ---------------------------------------------------------------------------------
 (3) _motor_forward2                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _motor_Backforward2                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_straight                                          0     0      0   10412
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                      _motor_forward
 ---------------------------------------------------------------------------------
 (3) _motor_forward                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM_DutyCycle2                                       9     9      0    5206
                                             42 BANK0      9     9      0
                          _SetDCPWM2
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (4) _SetDCPWM2                                            6     4      2     133
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _PWM_DutyCycle1                                       9     9      0    5206
                                             42 BANK0      9     9      0
                          _SetDCPWM1
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (4) ___lbtoft                                             4     1      3    1992
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     380
                                             27 BANK0     15    11      4
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    2654
                                             12 BANK0     15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1970
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _SetDCPWM1                                            6     4      2     133
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _clrBufferUSART                                       2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _TMRO_USART                                          14    14      0    9779
                                             51 COMRAM    14    14      0
                          _ReadUSART
                      i2_go_straight
                             i2_left
                            i2_right
 ---------------------------------------------------------------------------------
 (8) i2_right                                              0     0      0    3252
                   i2_PWM_DutyCycle1
                   i2_PWM_DutyCycle2
               i2_motor_Backforward1
                   i2_motor_forward1
 ---------------------------------------------------------------------------------
 (9) i2_motor_forward1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2_motor_Backforward1                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_left                                               0     0      0    3252
                   i2_PWM_DutyCycle1
                   i2_PWM_DutyCycle2
               i2_motor_Backforward2
                   i2_motor_forward2
 ---------------------------------------------------------------------------------
 (9) i2_motor_forward2                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2_motor_Backforward2                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_go_straight                                        0     0      0    3252
                   i2_PWM_DutyCycle1
                   i2_PWM_DutyCycle2
                    i2_motor_forward
 ---------------------------------------------------------------------------------
 (9) i2_motor_forward                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2_PWM_DutyCycle2                                     9     9      0    1626
                                             42 COMRAM     9     9      0
                        i2_SetDCPWM2
                          i2___ftmul
                          i2___fttol
                         i2___lbtoft
 ---------------------------------------------------------------------------------
 (10) i2_SetDCPWM2                                         6     4      2      93
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (9) i2_PWM_DutyCycle1                                     9     9      0    1626
                                             42 COMRAM     9     9      0
                        i2_SetDCPWM1
                          i2___ftmul
                          i2___fttol
                         i2___lbtoft
 ---------------------------------------------------------------------------------
 (10) i2___lbtoft                                          4     1      3     387
                                              8 COMRAM     4     1      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (10) i2___fttol                                          15    11      4     304
                                             27 COMRAM    15    11      4
                          i2___ftmul (ARG)
                         i2___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftmul                                          15     9      6     795
                                             12 COMRAM    15     9      6
                         i2___ftpack
                         i2___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___ftpack                                          8     3      5     365
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (10) i2_SetDCPWM1                                         6     4      2      93
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comando_Tablet
     _PWM_DutyCycle1
       _SetDCPWM1
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_DutyCycle2
       _SetDCPWM2
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _clrBufferUSART
     _getCNY70Value
       _go_straight
         _PWM_DutyCycle1
           _SetDCPWM1
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _PWM_DutyCycle2
           _SetDCPWM2
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _motor_forward
       _left
         _PWM_DutyCycle1
           _SetDCPWM1
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _PWM_DutyCycle2
           _SetDCPWM2
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _motor_Backforward2
         _motor_forward2
       _right
         _PWM_DutyCycle1
           _SetDCPWM1
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _PWM_DutyCycle2
           _SetDCPWM2
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _motor_Backforward1
         _motor_forward1
     _putcBluetoothInt
       _UART1_Init
         _OpenUSART
       _WriteUSART
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _putcBluetoothString
       _UART1_Init
         _OpenUSART
       _WriteUSART
   _Inicializa_Driveby
     _BT_Init
       _Pause_seg
         _Pause_ms
       _SendBlueToothCommand
         _putSTRINGU1
           _putcTxU1
             _WriteUSART
       _UART1_Init
         _OpenUSART
     _PWM_DutyCycle1
       _SetDCPWM1
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_DutyCycle2
       _SetDCPWM2
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_init1
       _OpenPWM1
     _PWM_init2
       _OpenPWM2
     _Pause_seg
       _Pause_ms
     _clrBufferUSART
   _UART1_Init
     _OpenUSART
   _clrBufferUSART
   _getCNY70Value
     _go_straight
       _PWM_DutyCycle1
         _SetDCPWM1
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _PWM_DutyCycle2
         _SetDCPWM2
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _motor_forward
     _left
       _PWM_DutyCycle1
         _SetDCPWM1
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _PWM_DutyCycle2
         _SetDCPWM2
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _motor_Backforward2
       _motor_forward2
     _right
       _PWM_DutyCycle1
         _SetDCPWM1
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _PWM_DutyCycle2
         _SetDCPWM2
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _motor_Backforward1
       _motor_forward1

 _TMRO_USART (ROOT)
   _ReadUSART
   i2_go_straight
     i2_PWM_DutyCycle1
       i2_SetDCPWM1
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
     i2_PWM_DutyCycle2
       i2_SetDCPWM2
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
     i2_motor_forward
   i2_left
     i2_PWM_DutyCycle1
       i2_SetDCPWM1
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
     i2_PWM_DutyCycle2
       i2_SetDCPWM2
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
     i2_motor_Backforward2
     i2_motor_forward2
   i2_right
     i2_PWM_DutyCycle1
       i2_SetDCPWM1
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
     i2_PWM_DutyCycle2
       i2_SetDCPWM2
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
     i2_motor_Backforward1
     i2_motor_forward1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      28       7       15.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      96       5       93.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     41      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11D      20        0.0%
DATA                 0      0     11D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Oct 11 12:21:31 2017

               ??_motor_forward 00AC                               _i 0048                               _j 0058  
              ??_motor_forward1 00AC                ??_motor_forward2 00AC         __size_of_PWM_DutyCycle1 007C  
       __size_of_PWM_DutyCycle2 007C                              l54 1BF4                              l59 156C  
                            l68 1608                   _InicioComando 0050                     __CFG_BORV$3 000000  
                    i2___ftpack 13F8                      i2___lbtoft 1CE8                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                           l202 1B58                             l223 1DF8                             l402 0E0A  
                           l411 0E6A                             l403 0EE6                             l413 0E88  
                           l405 0E20                             l415 0E9E                             l407 0E3E  
                           l417 0EBC                             l409 0E54                             l515 1B9A  
                           l516 1BA6                             l517 1BA8                             l553 167E  
                           l554 1680                             l555 168C                             l556 168E  
                           l549 1664                             l558 16B6                             l891 0DF2  
                           l975 0B9E                             l995 0CE8                    __CFG_CPB$OFF 000000  
                           _PR2 000FCB                    __CFG_CPD$OFF 000000                    __CFG_BOR$OFF 000000  
                           _cad 0055                             prod 000FF3                             wreg 000FE8  
                  __CFG_LVP$OFF 000000                    __CFG_WDT$OFF 000000                            l1107 1A8E  
                          l2304 0DE6                            l2400 0C94                            l1097 181E  
                          l2330 0A9E                            l2402 0CAC                            l2324 0A64  
                          l2404 0CB2                            l3310 14CA                            l2344 0AEC  
                          l2408 0CD8                            l2272 1DD4                            l2424 1392  
                          l3136 115A                            l3304 14B8                            l2290 0D7C  
                          l2282 0D16                            l2354 0B36                            l2434 13EA  
                          l2418 1348                            l2292 0DA8                            l2284 0D2A  
                          l2348 0B0A                            l2372 0BC8                            l3068 0EDA  
                          l2524 17CE                            l2612 089E                            l3180 1898  
                          l2428 13B8                            l3324 14EE                            l2294 0DBC  
                          l2286 0D56                            l2278 0D02                            l2358 0B54  
                          l2390 0C56                            l2526 17DA                            l2606 087E  
                          l3174 1864                            l2454 1B42                            l3334 1506  
                          l2536 1810                            l2528 17E0                            l2552 1A80  
                          l2544 1A4A                            l3168 1836                            l2704 1B94  
                          l2298 0DCC                            l2394 0C72                            l2546 1A56  
                          l2650 0992                            l2642 096C                            l2618 08D6  
                          l3178 1876                            l2476 1666                            l2468 1654  
                          l2548 1A5C                            l2628 091E                            l2660 0A2E  
                          l2656 0A00                            l2648 098C                            l2658 0A0C  
                          l2594 1984                            l2860 153E                            l2598 19C8  
                          l2864 1576                            l2882 1612                            l2878 15EE  
                          STR_1 0852                            STR_2 080B                            STR_3 085E  
                          STR_4 085E                            STR_5 0867                            STR_6 081A  
                          STR_7 0828                            STR_8 0844                            STR_9 0836  
              i2_PWM_DutyCycle1 1908                i2_PWM_DutyCycle2 189E                 __end_of_BT_Init 133A  
                          u2431 1282                            u3215 150E                            u3225 1518  
                          u3217 1510                            u1810 0BF4                            u1715 1AEE  
                          u1731 0A54                            u3235 1522                            u3227 151A  
                          u1900 13DC                            u1725 1AA6                            u3237 1524  
                          u1751 0A7C                            u1815 0BEA                            u3247 10E8  
                          _PIE1 000F9D                            u1760 0A8A                            u1840 0C7A  
                          u3257 1148                            u3267 1B4A                            u1907 13D2  
                          u1870 1386                            u1791 0BB8                            u1877 137C  
                          _TMR2 000FCC                    ?_go_straight 0001                            _main 14A0  
                          _left 1D70                    ___ftpack@arg 00AC                    ___ftpack@exp 00AF  
                          fsr0h 000FEA                            fsr1h 000FE2                            indf0 000FEF  
                          fsr0l 000FE9                            fsr2h 000FDA                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                            pclat 000FFA  
                          prodh 000FF4                            prodl 000FF3                            start 0018  
                 __CFG_IESO$OFF 000000                      _FinComandB 0062                      _FinComandT 0063  
               __end_ofi2_right 1D9C                    i2___lbtoft@c 000C                   __CFG_MCLRE$ON 000000  
                  ___ftmul@cntr 00C5                    i2___ftmul@f1 000D                    i2___ftmul@f2 0010  
                  ___ftmul@sign 00C6                    i2___fttol@f1 001C                     ?_UART1_Init 0001  
                  ___fttol@exp1 00D5                    ___fttol@lval 00D1                      _ComanBFlag 004B  
       __size_of_clrBufferUSART 0044                   __CFG_PLLDIV$1 000000                      _ComanTFlag 004C  
                __CFG_CCP2MX$ON 000000          ??i2_motor_Backforward1 0001          ??i2_motor_Backforward2 0001  
                         ?_main 0001                           ?_left 0001                           STR_10 0818  
               __end_of___ftmul 0BA0                 __end_of___fttol 0CEA                           _T2CON 000FCA  
                   _RXComandoTB 0051                  __CFG_DEBUG$OFF 000000                 __end_of___lwdiv 1828  
               __end_of___lwmod 1A98                           i2l324 0F94                           i2l325 0F98  
                         i2l567 1D1A                           i2l891 149E                           i2l975 10BE  
                         i2l995 126A                           _RCREG 000FAE                           _RCSTA 000FAB  
                         _SPBRG 000FAF                           _PORTA 000F80                           _PORTB 000F81  
                         _PORTC 000F82                           _PORTD 000F83                           _PORTE 000F84  
                 __CFG_USBDIV$2 000000                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                         _TXREG 000FAD                           _TXSTA 000FAC                   __CFG_PWRT$OFF 000000  
                 __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000  
       PWM_DutyCycle1@DutyCycle 00DA                   __CFG_WRT3$OFF 000000                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000  
                __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000                 __end_of_dpowers 080B  
                         _array 0114                           _right 1D5A                   ___ftpack@sign 00B0  
                         tablat 000FF5         PWM_DutyCycle2@DutyCycle 00DA                           status 000FD8  
               __end_of_sprintf 0A3C                  __CFG_ICPRT$OFF 000000                      Pause_seg@i 00B2  
                    Pause_seg@x 00B1              __size_ofi2___ftmul 00E4              __size_ofi2___fttol 00D4  
                   ?_TMRO_USART 0001                  WriteUSART@data 00AC              __size_of_PWM_init1 0026  
            __size_of_PWM_init2 0026                 __initialization 19D6                    __end_of_main 152A  
                  __end_of_left 1D86                   i2___ftmul@exp 0016     __size_of_Inicializa_Driveby 00D8  
                   ?i2___ftpack 0001                     ?i2___lbtoft 0009               ?_putcBluetoothInt 00CA  
              __end_of_OpenPWM1 1DC6                __end_of_OpenPWM2 1BB2                          ??_main 00E4  
                        ??_left 00DF                   ___fttol@sign1 00D0                __end_of_Pause_ms 1B6E  
                 __activetblptr 000003              ??_putcBluetoothInt 00CC              i2PWM_DutyCycle1@DC 0032  
            i2PWM_DutyCycle2@DC 0032                       ??_BT_Init 00BA                          _CCPR1L 000FBE  
                        _CCPR2L 000FBB                          ?_right 0001                 putSTRINGU1@dato 00AE  
               putSTRINGU1@cont 00B5                __end_of___ftpack 0DF4                __end_of___lbtoft 1C9C  
               putSTRINGU1@last 00B4                 clrBufferUSART@i 00AC             __size_of_UART1_Init 0016  
                        i2l2560 1408                          i2l2800 1240                          i2l3280 0F78  
                        i2l2722 0FF6                          i2l2802 1244                          i2l2572 1454  
                        i2l2564 1416                          i2l3276 0F62                          i2l3284 0F7E  
                        i2l2574 1472                          i2l2566 1420                          i2l2742 104E  
                        i2l2806 125A                          i2l2576 147C                          i2l2568 143E  
                        i2l2752 1076                          i2l2728 101C                          i2l2746 105E  
                        i2l2770 11B2                          i2l2756 1086                          u231_41 1006  
                        i2l2792 121C                          i2l2788 120C                          i2l2798 1234  
                        _INTCON 000FF2                          u235_41 11A8                          u229_41 0FEC  
            __size_of_ReadUSART 001E            i2SetDCPWM1@dutycycle 0001                       ??i2_right 0034  
           _putcBluetoothString 152A                          _SPBRGH 000FB0              __size_of_SetDCPWM1 0048  
            __size_of_SetDCPWM2 0048                          i2_left 1D9C                  __CFG_XINST$OFF 000000  
          i2SetDCPWM2@dutycycle 0001                          _Timer1 0053      __end_of_motor_Backforward1 1E42  
    __end_of_motor_Backforward2 1E4E              __size_of_OpenUSART 0080   __size_of_SendBlueToothCommand 001A  
            __size_of_Pause_seg 0064                    ?_putSTRINGU1 00AE                  _PWM_DutyCycle1 1734  
                _PWM_DutyCycle2 16B8                  __CFG_STVREN$ON 000000                       ??___ftmul 00BE  
                     ??___fttol 00CB                       ??___lwdiv 00B0                       ??___lwmod 00B7  
                        _packet 005D                          _lenght 0059                          clear_0 19DC  
                        clear_1 19E8                          clear_2 19F4            ?_putcBluetoothString 00B3  
         ___ftmul@f3_as_product 00C2                    __pdataCOMRAM 005E               __end_ofi2___ftmul 10C0  
             __end_ofi2___fttol 126C                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8             __size_of_TMRO_USART 0FD4  
                  ?i2_SetDCPWM1 0001                    ?i2_SetDCPWM2 0001               __end_of_PWM_init1 1CE8  
             __end_of_PWM_init2 1CC2                 i2_motor_forward 1E2C                __end_of_putcTxU1 1DFE  
                     ??_sprintf 00BE         __size_of_Comando_Tablet 0076               i2SetDCPWM1@DCycle 0005  
             i2SetDCPWM2@DCycle 0005                      __accesstop 0060         __end_of__initialization 1A32  
               __CFG_PBADEN$OFF 000000             __size_ofi2___ftpack 00A8             __size_ofi2___lbtoft 0024  
          __size_of_go_straight 0012    PWM_DutyCycle2@percentageDuty 00DC                  i2___ftpack@arg 0001  
                i2___ftpack@exp 0004                      ___lbtoft@c 00B7          __end_of_PWM_DutyCycle1 17B0  
        __end_of_PWM_DutyCycle2 1734                      ___ftmul@f1 00B8                      ___ftmul@f2 00BB  
                    ___fttol@f1 00C7                      _WriteUSART 1DC6                  __pcstackCOMRAM 0001  
     __size_ofi2_motor_forward1 0006       __size_ofi2_motor_forward2 0006                    __pidataBANK0 1DDA  
                _clrBufferUSART 1BB2                  i2___ftmul@cntr 001A                  i2___ftmul@sign 001B  
                 __end_of_right 1D70        __end_ofi2_PWM_DutyCycle1 1972        __end_ofi2_PWM_DutyCycle2 1908  
         ??_putcBluetoothString 00B5               __end_of_ReadUSART 1D2A                  i2___fttol@exp1 002A  
                i2___fttol@lval 0026          __size_ofi2_go_straight 0012               __end_of_SetDCPWM1 1B28  
             __end_of_SetDCPWM2 1AE0                   ReadUSART@data 0001            putcBluetoothString@a 00B3  
          putcBluetoothString@i 00B7               __end_of_OpenUSART 16B8                   UART1_Init@bdr 00B2  
             __end_of_Pause_seg 19D6                         ??_right 00DF                      __pbssBANK0 0060  
                    __pbssBANK1 0100                         ?i2_left 0001                       ?_OpenPWM1 0001  
                     ?_OpenPWM2 0001                       ?_Pause_ms 00AC          __end_of_clrBufferUSART 1BF6  
               ?_PWM_DutyCycle1 0001                 ?_PWM_DutyCycle2 0001                    ??_UART1_Init 00B2  
           Inicializa_Driveby@i 00E0          __size_of_getCNY70Value 00F4                         _CCP1CON 000FBD  
                       _CCP2CON 000FBA           __end_of_motor_forward 1E2C     SendBlueToothCommand@command 00B6  
                     ?___ftpack 00AC                       ?___lbtoft 00B4         __end_ofi2_motor_forward 1E36  
              putSTRINGU1@total 00B0                         _BT_Init 126C                         _SBUSART 0052  
            __end_of_UART1_Init 1D5A                 __CFG_VREGEN$OFF 000000                         i2_right 1D86  
                 i2_go_straight 1E10                         _Comando 004D                         _Med_lsb 0042  
                       _Med_msb 0044                      ??_OpenPWM1 00AC                      ??_OpenPWM2 00AC  
                    ??_Pause_ms 00AE                 __size_ofi2_left 0016                    ??_TMRO_USART 0034  
                       __Hparam 0000                         __Lparam 0000                 ?_clrBufferUSART 0001  
                   ?_WriteUSART 0001                       ?_putcTxU1 0001                         ___ftmul 0A3C  
                       ___fttol 0BA0                         ___lwdiv 17B0                         ___lwmod 1A38  
                  __psmallconst 0800                         __pcinit 19D6                    ??i2___ftpack 0006  
                  ??i2___lbtoft 000C                      ??___ftpack 00B1                      ??___lbtoft 00B7  
          __size_of_putSTRINGU1 00BE                    BT_Init@F5675 00E4         i2___ftmul@f3_as_product 0017  
                       __ramtop 0800                         __ptext0 14A0                         __ptext1 10C0  
                       __ptext2 1C9C                         __ptext3 1B6E                         __ptext4 1CC2  
                       __ptext5 1DB2                         __ptext6 126C                         __ptext7 1D2A  
                       __ptext8 133A                         __ptext9 1DEC  i2PWM_DutyCycle1@percentageDuty 0031  
                       _comando 0097                         _countup 005E                         _dpowers 0801  
 __size_ofi2_motor_Backforward1 0006   __size_ofi2_motor_Backforward2 0006                       _T2CONbits 000FCA  
       __size_of_motor_forward1 0006         __size_of_motor_forward2 0006              __end_of_TMRO_USART 0FDC  
                _Comando_Tablet 1828                         _sprintf 086C                   _getCNY70Value 0DF4  
                __pintcode_body 0EE8            __size_ofi2_SetDCPWM1 003A            __size_ofi2_SetDCPWM2 003A  
          end_of_initialization 1A32                     _TramaTablet 0100       __size_of_putcBluetoothInt 0086  
                ?i2_go_straight 0001                         int_func 0EE8              __end_ofi2___ftpack 14A0  
            __end_ofi2___lbtoft 1D0C       i2PWM_DutyCycle1@DutyCycle 002F                i2_motor_forward1 1E4E  
              i2_motor_forward2 1E5A                       _RCSTAbits 000FAB      __end_of_Inicializa_Driveby 1198  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                      ??_putcTxU1 00AD  
                    _num_med_hi 005A       i2PWM_DutyCycle2@DutyCycle 002F                       _PORTAbits 000F80  
                     _PORTBbits 000F81                       _PORTDbits 000F83                ?i2_motor_forward 0001  
            _motor_Backforward1 1E3C              _motor_Backforward2 1E48          __end_of_Comando_Tablet 189E  
  __end_of_SendBlueToothCommand 1D44                       _TRISBbits 000F93                       _TRISCbits 000F94  
                ?_getCNY70Value 00DF             __size_of_WriteUSART 0014                       i2___ftmul 0FDC  
           ?_motor_Backforward1 0001             ?_motor_Backforward2 0001                       i2___fttol 1198  
                     _PWM_init1 1CC2                       _PWM_init2 1C9C                       _TXSTAbits 000FAC  
               i2___ftpack@sign 0005                  __end_ofi2_left 1DB2                     ___ftmul@exp 00C1  
          ??_motor_Backforward1 00AC            ??_motor_Backforward2 00AC               ?i2_PWM_DutyCycle1 0001  
             ?i2_PWM_DutyCycle2 0001                   __pidataCOMRAM 1E66              ??i2_PWM_DutyCycle1 002B  
            ??i2_PWM_DutyCycle2 002B             start_initialization 19D6                       Pause_ms@i 00AF  
                     Pause_ms@x 00AC                 ?_Comando_Tablet 0001                       _ReadUSART 1D0C  
                     _SetDCPWM1 1AE0                       _SetDCPWM2 1A98                 SetDCPWM1@DCycle 00B0  
               SetDCPWM2@DCycle 00B0                 i2___fttol@sign1 0025                       _DutyCycle 0060  
               ??i2_go_straight 0034                      ?i2___ftmul 000D                      ?i2___fttol 001C  
                 ??_go_straight 00DF                      ?_PWM_init1 0001                      ?_PWM_init2 0001  
          Comando_Tablet@sensed 00E2                       _OpenUSART 1638                ??_PWM_DutyCycle1 00D6  
              ??_PWM_DutyCycle2 00D6                       _Pause_seg 1972                        ??i2_left 0034  
   __end_of_putcBluetoothString 15B2               __size_of_OpenPWM1 0014               __size_of_OpenPWM2 0044  
             __size_of_Pause_ms 0046                     __pdataBANK0 00E4                __CFG_LPT1OSC$OFF 000000  
                _num_med_medium 005C               __size_of___ftpack 010A               __size_of___lbtoft 0032  
                   __pbssCOMRAM 0042                 ??_getCNY70Value 00E1                      ?_ReadUSART 0001  
                _motor_forward1 1E36                  _motor_forward2 1E42                        ?_BT_Init 0001  
                 __pcstackBANK0 00AC                      ?_SetDCPWM1 00AC                      ?_SetDCPWM2 00AC  
           __end_of__stringdata 086A                _putcBluetoothInt 15B2                        ?i2_right 0001  
                    ?_OpenUSART 00AC                     sprintf@_val 00C4                     sprintf@flag 00C2  
              ??_clrBufferUSART 00AC                      ?_Pause_seg 0001                     sprintf@prec 00C3  
                     _cleanBfer 0064             __end_of_go_straight 1E10                ___lwdiv@dividend 00AC  
                  ??_WriteUSART 00AC            _SendBlueToothCommand 1D2A                       __pintcode 0008  
                      ?___ftmul 00B8                        ?___fttol 00C7                        ?___lwdiv 00AC  
                      ?___lwmod 00B3               putcTxU1@character 00AD               __size_of_putcTxU1 0012  
                     _contador2 0057          __end_of_motor_forward1 1E3C          __end_of_motor_forward2 1E48  
                   __smallconst 0800       SendBlueToothCommand@total 00B8        __end_ofi2_motor_forward1 1E54  
      __end_ofi2_motor_forward2 1E60                    _TamanhoTrama 0046                ___lwdiv@quotient 00B0  
                      ?_sprintf 00B8                     ??i2___ftmul 0013                     ??i2___fttol 0020  
                __size_of_right 0016              __end_of_WriteUSART 1DDA                     ??_PWM_init1 00AD  
                   ??_PWM_init2 00AF    PWM_DutyCycle1@percentageDuty 00DC          __size_of_motor_forward 000A  
                 _ComandoTablet 004E    __end_ofi2_motor_Backforward1 1E5A    __end_ofi2_motor_Backforward2 1E66  
                      _PIE1bits 000F9D                        i2u232_40 100E                        i2u240_40 1222  
                      i2u313_40 0F7C                        i2u227_45 1C3A                        i2u228_45 1C00  
                      i2u237_40 11D0                        i2u237_45 11C8                        _PIR1bits 000F9E  
         ?_SendBlueToothCommand 00B6                __CFG_WDTPS$32768 000000                   ??_putSTRINGU1 00B2  
                    _ADCON1bits 000FC1                     __stringdata 080B                 ?_motor_forward1 0001  
               ?_motor_forward2 0001                        _CheckSum 004A                     ??_ReadUSART 0001  
            _Inicializa_Driveby 10C0                   ??i2_SetDCPWM1 0003                   ??i2_SetDCPWM2 0003  
                   ??_SetDCPWM1 00AE                     ??_SetDCPWM2 00AE                __size_of_BT_Init 00CE  
                   _INTCON2bits 000FF1                     _INTCON3bits 000FF0                       copy_data0 1A0E  
                      _EntTrama 004F             ?_Inicializa_Driveby 0001                   _BluetoothDato 0065  
                   _go_straight 1DFE                     ??_OpenUSART 00AE              SetDCPWM1@dutycycle 00AC  
                   ??_Pause_seg 00B1                __size_ofi2_right 0016                 OpenUSART@config 00B1  
                  _Timer2Config 00AB                        _OpenPWM1 1DB2                        _OpenPWM2 1B6E  
                      _Pause_ms 1B28                        __Hrparam 0000                        __Lrparam 0000  
            SetDCPWM2@dutycycle 00AC            ??_Inicializa_Driveby 00DF                PWM_DutyCycle1@DC 00DD  
              PWM_DutyCycle2@DC 00DD                __size_of___ftmul 0164                __size_of___fttol 014A  
              __size_of___lwdiv 0078                __size_of___lwmod 0060                ??_Comando_Tablet 00E2  
                 _motor_forward 1E22                        ___ftpack 0CEA                        ___lbtoft 1C6A  
                OpenPWM2@ccp2mx 00AE           __CFG_FOSC$INTOSCIO_EC 000000             __end_of_putSTRINGU1 13F8  
                OpenPWM1@period 00AC                  OpenPWM2@period 00AD                 ___lwdiv@divisor 00AE  
               ___lwdiv@counter 00B2                        __ptext10 1972                        __ptext11 1B28  
                      __ptext20 1638                        __ptext12 1828                        __ptext21 0DF4  
                      __ptext13 152A                        __ptext30 16B8                        __ptext22 1D5A  
                      __ptext14 15B2                        __ptext31 1A98                        __ptext23 1E36  
                      __ptext15 086C                        __ptext40 1D86                        __ptext32 1734  
                      __ptext24 1E3C                        __ptext16 1A38                        __ptext41 1E4E  
                      __ptext33 1C6A                        __ptext25 1D70                        __ptext17 17B0  
                      __ptext50 1908                        __ptext42 1E54                        __ptext34 0BA0  
                      __ptext26 1E42                        __ptext18 1DC6                        __ptext51 1CE8  
                      __ptext43 1D9C                        __ptext35 0A3C                        __ptext27 1E48  
                      __ptext19 1D44                        __ptext52 1198                        __ptext44 1E5A  
                      __ptext36 0CEA                        __ptext28 1DFE                        __ptext53 0FDC  
                      __ptext45 1E60                        __ptext37 1AE0                        __ptext29 1E22  
                      __ptext54 13F8                        __ptext46 1E10                        __ptext38 1BB2  
                      __ptext55 1C30                        __ptext47 1E2C                        __ptext56 1D0C  
                      __ptext48 189E                        __ptext49 1BF6        __size_ofi2_motor_forward 000A  
               PWM_init1@period 00AD                 PWM_init2@period 00AF                        _contador 0056  
     __size_ofi2_PWM_DutyCycle1 006A       __size_ofi2_PWM_DutyCycle2 006A                __size_of_sprintf 01D0  
           __end_ofi2_SetDCPWM1 1C6A             __end_ofi2_SetDCPWM2 1C30                   __size_of_main 008A  
                 __size_of_left 0016          ??_SendBlueToothCommand 00BA                        _putcTxU1 1DEC  
                 BT_Init@nameBT 00BA     __size_of_motor_Backforward1 0006     __size_of_motor_Backforward2 0006  
                ?_motor_forward 0001        __end_of_putcBluetoothInt 1638           __CFG_CPUDIV$OSC1_PLL2 000000  
          i2_motor_Backforward1 1E54            i2_motor_Backforward2 1E60                      _INTCONbits 000FF2  
                OpenUSART@spbrg 00AC               putcBluetoothInt@a 00CA               putcBluetoothInt@i 00E0  
             putcBluetoothInt@s 00CC                        intlevel2 0000                       sprintf@ap 00C0  
                     sprintf@sp 00B8           __end_ofi2_go_straight 1E22                ___lwmod@dividend 00B3  
                    _OSCCONbits 000FD3                      _UART1_Init 1D44                     _putSTRINGU1 133A  
  __size_of_putcBluetoothString 0088                     _num_med_low 005B           ?i2_motor_Backforward1 0001  
         ?i2_motor_Backforward2 0001                        sprintf@c 00C9                        sprintf@f 00BA  
               ___lwmod@divisor 00B5  i2PWM_DutyCycle2@percentageDuty 0031                 ___lwmod@counter 00B7  
                   i2_SetDCPWM1 1C30                     i2_SetDCPWM2 1BF6           __end_of_getCNY70Value 0EE8  
             ?i2_motor_forward1 0001               ?i2_motor_forward2 0001              ??i2_motor_forward1 0001  
            ??i2_motor_forward2 0001               ??i2_motor_forward 0001                    _USART_Status 0054  
                    _TMRO_USART 0008  
