

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Oct 11 12:16:45 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           	psect	idataCOMRAM
    80  001EA0                     __pidataCOMRAM:
    81                           	opt stack 0
    82                           
    83                           ;initializer for _countup
    84  001EA0  0001               	dw	1
    85                           
    86                           	psect	idataBANK0
    87  001DF8                     __pidataBANK0:
    88                           	opt stack 0
    89                           
    90                           ;initializer for BT_Init@F5675
    91  001DF8  41                 	db	65
    92  001DF9  54                 	db	84
    93  001DFA  2B                 	db	43
    94  001DFB  4E                 	db	78
    95  001DFC  41                 	db	65
    96  001DFD  4D                 	db	77
    97  001DFE  45                 	db	69
    98  001DFF  3D                 	db	61
    99  001E00  72                 	db	114
   100  001E01  6F                 	db	111
   101  001E02  62                 	db	98
   102  001E03  6F                 	db	111
   103  001E04  74                 	db	116
   104  001E05  0D                 	db	13
   105  001E06  0A                 	db	10
   106  001E07  00                 	db	0
   107  001E08  00                 	db	0
   108  001E09  00                 	db	0
   109                           
   110                           	psect	smallconst
   111  000800                     __psmallconst:
   112                           	opt stack 0
   113  000800  00                 	db	0
   114  000801                     _dpowers:
   115                           	opt stack 0
   116  000801  0001               	dw	1
   117  000803  000A               	dw	10
   118  000805  0064               	dw	100
   119  000807  03E8               	dw	1000
   120  000809  2710               	dw	10000
   121  00080B                     __end_of_dpowers:
   122                           	opt stack 0
   123  0000                     _ADCON1bits	set	4033
   124  0000                     _CCP1CON	set	4029
   125  0000                     _CCP2CON	set	4026
   126  0000                     _CCPR1L	set	4030
   127  0000                     _CCPR2L	set	4027
   128  0000                     _INTCON	set	4082
   129  0000                     _INTCON2bits	set	4081
   130  0000                     _INTCON3bits	set	4080
   131  0000                     _INTCONbits	set	4082
   132  0000                     _OSCCONbits	set	4051
   133  0000                     _PIE1	set	3997
   134  0000                     _PIE1bits	set	3997
   135  0000                     _PIR1bits	set	3998
   136  0000                     _PORTA	set	3968
   137  0000                     _PORTAbits	set	3968
   138  0000                     _PORTB	set	3969
   139  0000                     _PORTBbits	set	3969
   140  0000                     _PORTC	set	3970
   141  0000                     _PORTD	set	3971
   142  0000                     _PORTDbits	set	3971
   143  0000                     _PORTE	set	3972
   144  0000                     _PR2	set	4043
   145  0000                     _RCREG	set	4014
   146  0000                     _RCSTA	set	4011
   147  0000                     _RCSTAbits	set	4011
   148  0000                     _SPBRG	set	4015
   149  0000                     _SPBRGH	set	4016
   150  0000                     _T2CON	set	4042
   151  0000                     _T2CONbits	set	4042
   152  0000                     _TMR2	set	4044
   153  0000                     _TRISA	set	3986
   154  0000                     _TRISB	set	3987
   155  0000                     _TRISBbits	set	3987
   156  0000                     _TRISC	set	3988
   157  0000                     _TRISCbits	set	3988
   158  0000                     _TRISD	set	3989
   159  0000                     _TRISE	set	3990
   160  0000                     _TXREG	set	4013
   161  0000                     _TXSTA	set	4012
   162  0000                     _TXSTAbits	set	4012
   163  00080B                     __stringdata:
   164                           	opt stack 0
   165  00080B                     STR_2:
   166  00080B  41                 	db	65	;'A'
   167  00080C  54                 	db	84	;'T'
   168  00080D  2B                 	db	43
   169  00080E  50                 	db	80	;'P'
   170  00080F  53                 	db	83	;'S'
   171  000810  57                 	db	87	;'W'
   172  000811  44                 	db	68	;'D'
   173  000812  3D                 	db	61	;'='
   174  000813  30                 	db	48	;'0'
   175  000814  30                 	db	48	;'0'
   176  000815  30                 	db	48	;'0'
   177  000816  30                 	db	48	;'0'
   178  000817  0D                 	db	13
   179  000818  0A                 	db	10
   180  000819  00                 	db	0
   181  00081A  0A                 	db	10
   182  00081B  2B                 	db	43
   183  00081C  42                 	db	66	;'B'
   184  00081D  54                 	db	84	;'T'
   185  00081E  53                 	db	83	;'S'
   186  00081F  54                 	db	84	;'T'
   187  000820  41                 	db	65	;'A'
   188  000821  54                 	db	84	;'T'
   189  000822  45                 	db	69	;'E'
   190  000823  3A                 	db	58	;':'
   191  000824  31                 	db	49	;'1'
   192  000825  0D                 	db	13
   193  000826  0A                 	db	10
   194  000827  00                 	db	0
   195  000828  0A                 	db	10
   196  000829  2B                 	db	43
   197  00082A  42                 	db	66	;'B'
   198  00082B  54                 	db	84	;'T'
   199  00082C  53                 	db	83	;'S'
   200  00082D  54                 	db	84	;'T'
   201  00082E  41                 	db	65	;'A'
   202  00082F  54                 	db	84	;'T'
   203  000830  45                 	db	69	;'E'
   204  000831  3A                 	db	58	;':'
   205  000832  33                 	db	51	;'3'
   206  000833  0D                 	db	13
   207  000834  0A                 	db	10
   208  000835  00                 	db	0
   209  000836  0A                 	db	10
   210  000837  2B                 	db	43
   211  000838  42                 	db	66	;'B'
   212  000839  54                 	db	84	;'T'
   213  00083A  53                 	db	83	;'S'
   214  00083B  54                 	db	84	;'T'
   215  00083C  41                 	db	65	;'A'
   216  00083D  54                 	db	84	;'T'
   217  00083E  45                 	db	69	;'E'
   218  00083F  3A                 	db	58	;':'
   219  000840  34                 	db	52	;'4'
   220  000841  0D                 	db	13
   221  000842  0A                 	db	10
   222  000843  00                 	db	0
   223  000844  0A                 	db	10
   224  000845  43                 	db	67	;'C'
   225  000846  4F                 	db	79	;'O'
   226  000847  4E                 	db	78	;'N'
   227  000848  4E                 	db	78	;'N'
   228  000849  45                 	db	69	;'E'
   229  00084A  43                 	db	67	;'C'
   230  00084B  54                 	db	84	;'T'
   231  00084C  3A                 	db	58	;':'
   232  00084D  4F                 	db	79	;'O'
   233  00084E  4B                 	db	75	;'K'
   234  00084F  0D                 	db	13
   235  000850  0A                 	db	10
   236  000851  00                 	db	0
   237  000852                     STR_1:
   238  000852  41                 	db	65	;'A'
   239  000853  54                 	db	84	;'T'
   240  000854  2B                 	db	43
   241  000855  52                 	db	82	;'R'
   242  000856  4F                 	db	79	;'O'
   243  000857  4C                 	db	76	;'L'
   244  000858  45                 	db	69	;'E'
   245  000859  3D                 	db	61	;'='
   246  00085A  30                 	db	48	;'0'
   247  00085B  0D                 	db	13
   248  00085C  0A                 	db	10
   249  00085D  00                 	db	0
   250  00085E                     STR_3:
   251  00085E  41                 	db	65	;'A'
   252  00085F  54                 	db	84	;'T'
   253  000860  2B                 	db	43
   254  000861  49                 	db	73	;'I'
   255  000862  4E                 	db	78	;'N'
   256  000863  51                 	db	81	;'Q'
   257  000864  0D                 	db	13
   258  000865  0A                 	db	10
   259  000866  00                 	db	0
   260  000867                     STR_5:
   261  000867  25                 	db	37
   262  000868  64                 	db	100	;'d'
   263  000869  00                 	db	0
   264  00086A                     __end_of__stringdata:
   265                           	opt stack 0
   266                           
   267                           ; #config settings
   268  00086A  00                 	db	0	; dummy byte at the end
   269  0000                     
   270                           	psect	cinit
   271  0019F4                     __pcinit:
   272                           	opt stack 0
   273  0019F4                     start_initialization:
   274                           	opt stack 0
   275  0019F4                     __initialization:
   276                           	opt stack 0
   277                           
   278                           ; Clear objects allocated to BANK1 (40 bytes)
   279  0019F4  EE01  F000         	lfsr	0,__pbssBANK1
   280  0019F8  0E28               	movlw	40
   281  0019FA                     clear_0:
   282  0019FA  6AEE               	clrf	postinc0,c
   283  0019FC  06E8               	decf	wreg,f,c
   284  0019FE  E1FD               	bnz	clear_0
   285                           
   286                           ; Clear objects allocated to BANK0 (76 bytes)
   287  001A00  EE00  F060         	lfsr	0,__pbssBANK0
   288  001A04  0E4C               	movlw	76
   289  001A06                     clear_1:
   290  001A06  6AEE               	clrf	postinc0,c
   291  001A08  06E8               	decf	wreg,f,c
   292  001A0A  E1FD               	bnz	clear_1
   293                           
   294                           ; Clear objects allocated to COMRAM (28 bytes)
   295  001A0C  EE00  F042         	lfsr	0,__pbssCOMRAM
   296  001A10  0E1C               	movlw	28
   297  001A12                     clear_2:
   298  001A12  6AEE               	clrf	postinc0,c
   299  001A14  06E8               	decf	wreg,f,c
   300  001A16  E1FD               	bnz	clear_2
   301                           
   302                           ; Initialize objects allocated to BANK0 (18 bytes)
   303                           ; load TBLPTR registers with __pidataBANK0
   304  001A18  0EF8               	movlw	low __pidataBANK0
   305  001A1A  6EF6               	movwf	tblptrl,c
   306  001A1C  0E1D               	movlw	high __pidataBANK0
   307  001A1E  6EF7               	movwf	tblptrh,c
   308  001A20  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   309  001A22  6EF8               	movwf	tblptru,c
   310  001A24  EE00  F0E4         	lfsr	0,__pdataBANK0
   311  001A28  EE10 F012          	lfsr	1,18
   312  001A2C                     copy_data0:
   313  001A2C  0009               	tblrd		*+
   314  001A2E  CFF5 FFEE          	movff	tablat,postinc0
   315  001A32  50E5               	movf	postdec1,w,c
   316  001A34  50E1               	movf	fsr1l,w,c
   317  001A36  E1FA               	bnz	copy_data0
   318                           
   319                           ; Initialize objects allocated to COMRAM (2 bytes)
   320                           ; load TBLPTR registers with __pidataCOMRAM
   321  001A38  0EA0               	movlw	low __pidataCOMRAM
   322  001A3A  6EF6               	movwf	tblptrl,c
   323  001A3C  0E1E               	movlw	high __pidataCOMRAM
   324  001A3E  6EF7               	movwf	tblptrh,c
   325  001A40  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   326  001A42  6EF8               	movwf	tblptru,c
   327  001A44  0009               	tblrd		*+	;fetch initializer
   328  001A46  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   329  001A4A  0009               	tblrd		*+	;fetch initializer
   330  001A4C  CFF5 F05F          	movff	tablat,__pdataCOMRAM+1
   331  001A50                     end_of_initialization:
   332                           	opt stack 0
   333  001A50                     __end_of__initialization:
   334                           	opt stack 0
   335  001A50  0100               	movlb	0
   336  001A52  EF5F  F00A         	goto	_main	;jump to C main() function
   337                           tblptru	equ	0xFF8
   338                           tblptrh	equ	0xFF7
   339                           tblptrl	equ	0xFF6
   340                           tablat	equ	0xFF5
   341                           postinc0	equ	0xFEE
   342                           wreg	equ	0xFE8
   343                           postdec1	equ	0xFE5
   344                           fsr1l	equ	0xFE1
   345                           
   346                           	psect	bssCOMRAM
   347  000042                     __pbssCOMRAM:
   348                           	opt stack 0
   349  000042                     _Med_lsb:
   350                           	opt stack 0
   351  000042                     	ds	2
   352  000044                     _Med_msb:
   353                           	opt stack 0
   354  000044                     	ds	2
   355  000046                     _TamanhoTrama:
   356                           	opt stack 0
   357  000046                     	ds	2
   358  000048                     _i:
   359                           	opt stack 0
   360  000048                     	ds	2
   361  00004A                     _CheckSum:
   362                           	opt stack 0
   363  00004A                     	ds	1
   364  00004B                     _ComanBFlag:
   365                           	opt stack 0
   366  00004B                     	ds	1
   367  00004C                     _ComanTFlag:
   368                           	opt stack 0
   369  00004C                     	ds	1
   370  00004D                     _Comando:
   371                           	opt stack 0
   372  00004D                     	ds	1
   373  00004E                     _ComandoTablet:
   374                           	opt stack 0
   375  00004E                     	ds	1
   376  00004F                     _EntTrama:
   377                           	opt stack 0
   378  00004F                     	ds	1
   379  000050                     _InicioComando:
   380                           	opt stack 0
   381  000050                     	ds	1
   382  000051                     _RXComandoTB:
   383                           	opt stack 0
   384  000051                     	ds	1
   385  000052                     _SBUSART:
   386                           	opt stack 0
   387  000052                     	ds	1
   388  000053                     _Timer1:
   389                           	opt stack 0
   390  000053                     	ds	1
   391  000054                     _USART_Status:
   392                           	opt stack 0
   393  000054                     	ds	1
   394  000055                     _cad:
   395                           	opt stack 0
   396  000055                     	ds	1
   397  000056                     _contador:
   398                           	opt stack 0
   399  000056                     	ds	1
   400  000057                     _contador2:
   401                           	opt stack 0
   402  000057                     	ds	1
   403  000058                     _j:
   404                           	opt stack 0
   405  000058                     	ds	1
   406  000059                     _lenght:
   407                           	opt stack 0
   408  000059                     	ds	1
   409  00005A                     _num_med_hi:
   410                           	opt stack 0
   411  00005A                     	ds	1
   412  00005B                     _num_med_low:
   413                           	opt stack 0
   414  00005B                     	ds	1
   415  00005C                     _num_med_medium:
   416                           	opt stack 0
   417  00005C                     	ds	1
   418  00005D                     _packet:
   419                           	opt stack 0
   420  00005D                     	ds	1
   421                           tblptru	equ	0xFF8
   422                           tblptrh	equ	0xFF7
   423                           tblptrl	equ	0xFF6
   424                           tablat	equ	0xFF5
   425                           postinc0	equ	0xFEE
   426                           wreg	equ	0xFE8
   427                           postdec1	equ	0xFE5
   428                           fsr1l	equ	0xFE1
   429                           
   430                           	psect	dataCOMRAM
   431  00005E                     __pdataCOMRAM:
   432                           	opt stack 0
   433  00005E                     _countup:
   434                           	opt stack 0
   435  00005E                     	ds	2
   436                           tblptru	equ	0xFF8
   437                           tblptrh	equ	0xFF7
   438                           tblptrl	equ	0xFF6
   439                           tablat	equ	0xFF5
   440                           postinc0	equ	0xFEE
   441                           wreg	equ	0xFE8
   442                           postdec1	equ	0xFE5
   443                           fsr1l	equ	0xFE1
   444                           
   445                           	psect	bssBANK0
   446  000060                     __pbssBANK0:
   447                           	opt stack 0
   448  000060                     _DutyCycle:
   449                           	opt stack 0
   450  000060                     	ds	2
   451  000062                     _FinComandB:
   452                           	opt stack 0
   453  000062                     	ds	1
   454  000063                     _FinComandT:
   455                           	opt stack 0
   456  000063                     	ds	1
   457  000064                     _cleanBfer:
   458                           	opt stack 0
   459  000064                     	ds	1
   460  000065                     _BluetoothDato:
   461                           	opt stack 0
   462  000065                     	ds	50
   463  000097                     _comando:
   464                           	opt stack 0
   465  000097                     	ds	20
   466  0000AB                     _Timer2Config:
   467                           	opt stack 0
   468  0000AB                     	ds	1
   469                           tblptru	equ	0xFF8
   470                           tblptrh	equ	0xFF7
   471                           tblptrl	equ	0xFF6
   472                           tablat	equ	0xFF5
   473                           postinc0	equ	0xFEE
   474                           wreg	equ	0xFE8
   475                           postdec1	equ	0xFE5
   476                           fsr1l	equ	0xFE1
   477                           
   478                           	psect	dataBANK0
   479  0000E4                     __pdataBANK0:
   480                           	opt stack 0
   481  0000E4                     BT_Init@F5675:
   482                           	opt stack 0
   483  0000E4                     	ds	18
   484                           tblptru	equ	0xFF8
   485                           tblptrh	equ	0xFF7
   486                           tblptrl	equ	0xFF6
   487                           tablat	equ	0xFF5
   488                           postinc0	equ	0xFEE
   489                           wreg	equ	0xFE8
   490                           postdec1	equ	0xFE5
   491                           fsr1l	equ	0xFE1
   492                           
   493                           	psect	bssBANK1
   494  000100                     __pbssBANK1:
   495                           	opt stack 0
   496  000100                     _TramaTablet:
   497                           	opt stack 0
   498  000100                     	ds	20
   499  000114                     _array:
   500                           	opt stack 0
   501  000114                     	ds	20
   502                           tblptru	equ	0xFF8
   503                           tblptrh	equ	0xFF7
   504                           tblptrl	equ	0xFF6
   505                           tablat	equ	0xFF5
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           postdec1	equ	0xFE5
   509                           fsr1l	equ	0xFE1
   510                           
   511                           	psect	cstackBANK0
   512  0000AC                     __pcstackBANK0:
   513                           	opt stack 0
   514  0000AC                     ??_OpenPWM2:
   515  0000AC                     ?___lwdiv:
   516                           	opt stack 0
   517  0000AC                     ?___ftpack:
   518                           	opt stack 0
   519  0000AC                     OpenPWM1@period:
   520                           	opt stack 0
   521  0000AC                     WriteUSART@data:
   522                           	opt stack 0
   523  0000AC                     clrBufferUSART@i:
   524                           	opt stack 0
   525  0000AC                     Pause_ms@x:
   526                           	opt stack 0
   527  0000AC                     SetDCPWM1@dutycycle:
   528                           	opt stack 0
   529  0000AC                     SetDCPWM2@dutycycle:
   530                           	opt stack 0
   531  0000AC                     OpenUSART@spbrg:
   532                           	opt stack 0
   533  0000AC                     ___lwdiv@dividend:
   534                           	opt stack 0
   535  0000AC                     ___ftpack@arg:
   536                           	opt stack 0
   537                           
   538                           ; 3 bytes @ 0x0
   539  0000AC                     	ds	1
   540  0000AD                     putcTxU1@character:
   541                           	opt stack 0
   542  0000AD                     PWM_init1@period:
   543                           	opt stack 0
   544  0000AD                     OpenPWM2@period:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x1
   548  0000AD                     	ds	1
   549  0000AE                     ??_OpenUSART:
   550  0000AE                     ??_SetDCPWM1:
   551  0000AE                     ??_SetDCPWM2:
   552  0000AE                     ??_Pause_ms:
   553  0000AE                     OpenPWM2@ccp2mx:
   554                           	opt stack 0
   555  0000AE                     putSTRINGU1@dato:
   556                           	opt stack 0
   557  0000AE                     ___lwdiv@divisor:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x2
   561  0000AE                     	ds	1
   562  0000AF                     PWM_init2@period:
   563                           	opt stack 0
   564  0000AF                     ___ftpack@exp:
   565                           	opt stack 0
   566  0000AF                     Pause_ms@i:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x3
   570  0000AF                     	ds	1
   571  0000B0                     ___ftpack@sign:
   572                           	opt stack 0
   573  0000B0                     putSTRINGU1@total:
   574                           	opt stack 0
   575  0000B0                     SetDCPWM1@DCycle:
   576                           	opt stack 0
   577  0000B0                     SetDCPWM2@DCycle:
   578                           	opt stack 0
   579  0000B0                     ___lwdiv@quotient:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x4
   583  0000B0                     	ds	1
   584  0000B1                     ??___ftpack:
   585  0000B1                     Pause_seg@x:
   586                           	opt stack 0
   587  0000B1                     OpenUSART@config:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x5
   591  0000B1                     	ds	1
   592  0000B2                     ??_putSTRINGU1:
   593  0000B2                     Pause_seg@i:
   594                           	opt stack 0
   595  0000B2                     UART1_Init@bdr:
   596                           	opt stack 0
   597  0000B2                     ___lwdiv@counter:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x6
   601  0000B2                     	ds	1
   602  0000B3                     ?___lwmod:
   603                           	opt stack 0
   604  0000B3                     putcBluetoothString@a:
   605                           	opt stack 0
   606  0000B3                     ___lwmod@dividend:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x7
   610  0000B3                     	ds	1
   611  0000B4                     ?___lbtoft:
   612                           	opt stack 0
   613  0000B4                     putSTRINGU1@last:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x8
   617  0000B4                     	ds	1
   618  0000B5                     ??_putcBluetoothString:
   619  0000B5                     putSTRINGU1@cont:
   620                           	opt stack 0
   621  0000B5                     ___lwmod@divisor:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x9
   625  0000B5                     	ds	1
   626  0000B6                     SendBlueToothCommand@command:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0xA
   630  0000B6                     	ds	1
   631  0000B7                     ___lbtoft@c:
   632                           	opt stack 0
   633  0000B7                     ___lwmod@counter:
   634                           	opt stack 0
   635  0000B7                     putcBluetoothString@i:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0xB
   639  0000B7                     	ds	1
   640  0000B8                     ?_sprintf:
   641                           	opt stack 0
   642  0000B8                     ?___ftmul:
   643                           	opt stack 0
   644  0000B8                     SendBlueToothCommand@total:
   645                           	opt stack 0
   646  0000B8                     sprintf@sp:
   647                           	opt stack 0
   648  0000B8                     ___ftmul@f1:
   649                           	opt stack 0
   650                           
   651                           ; 3 bytes @ 0xC
   652  0000B8                     	ds	2
   653  0000BA                     sprintf@f:
   654                           	opt stack 0
   655  0000BA                     BT_Init@nameBT:
   656                           	opt stack 0
   657                           
   658                           ; 18 bytes @ 0xE
   659  0000BA                     	ds	1
   660  0000BB                     ___ftmul@f2:
   661                           	opt stack 0
   662                           
   663                           ; 3 bytes @ 0xF
   664  0000BB                     	ds	3
   665  0000BE                     ??_sprintf:
   666  0000BE                     ??___ftmul:
   667                           
   668                           ; 0 bytes @ 0x12
   669  0000BE                     	ds	2
   670  0000C0                     sprintf@ap:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x14
   674  0000C0                     	ds	1
   675  0000C1                     ___ftmul@exp:
   676                           	opt stack 0
   677                           
   678                           ; 1 bytes @ 0x15
   679  0000C1                     	ds	1
   680  0000C2                     sprintf@flag:
   681                           	opt stack 0
   682  0000C2                     ___ftmul@f3_as_product:
   683                           	opt stack 0
   684                           
   685                           ; 3 bytes @ 0x16
   686  0000C2                     	ds	1
   687  0000C3                     sprintf@prec:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x17
   691  0000C3                     	ds	1
   692  0000C4                     sprintf@_val:
   693                           	opt stack 0
   694                           
   695                           ; 5 bytes @ 0x18
   696  0000C4                     	ds	1
   697  0000C5                     ___ftmul@cntr:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x19
   701  0000C5                     	ds	1
   702  0000C6                     ___ftmul@sign:
   703                           	opt stack 0
   704                           
   705                           ; 1 bytes @ 0x1A
   706  0000C6                     	ds	1
   707  0000C7                     ?___fttol:
   708                           	opt stack 0
   709  0000C7                     ___fttol@f1:
   710                           	opt stack 0
   711                           
   712                           ; 3 bytes @ 0x1B
   713  0000C7                     	ds	2
   714  0000C9                     sprintf@c:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0x1D
   718  0000C9                     	ds	1
   719  0000CA                     putcBluetoothInt@a:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x1E
   723  0000CA                     	ds	1
   724  0000CB                     ??___fttol:
   725                           
   726                           ; 0 bytes @ 0x1F
   727  0000CB                     	ds	1
   728  0000CC                     putcBluetoothInt@s:
   729                           	opt stack 0
   730                           
   731                           ; 20 bytes @ 0x20
   732  0000CC                     	ds	4
   733  0000D0                     ___fttol@sign1:
   734                           	opt stack 0
   735                           
   736                           ; 1 bytes @ 0x24
   737  0000D0                     	ds	1
   738  0000D1                     ___fttol@lval:
   739                           	opt stack 0
   740                           
   741                           ; 4 bytes @ 0x25
   742  0000D1                     	ds	4
   743  0000D5                     ___fttol@exp1:
   744                           	opt stack 0
   745                           
   746                           ; 1 bytes @ 0x29
   747  0000D5                     	ds	1
   748  0000D6                     ??_PWM_DutyCycle1:
   749  0000D6                     ??_PWM_DutyCycle2:
   750                           
   751                           ; 0 bytes @ 0x2A
   752  0000D6                     	ds	4
   753  0000DA                     PWM_DutyCycle1@DutyCycle:
   754                           	opt stack 0
   755  0000DA                     PWM_DutyCycle2@DutyCycle:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x2E
   759  0000DA                     	ds	2
   760  0000DC                     PWM_DutyCycle1@percentageDuty:
   761                           	opt stack 0
   762  0000DC                     PWM_DutyCycle2@percentageDuty:
   763                           	opt stack 0
   764                           
   765                           ; 1 bytes @ 0x30
   766  0000DC                     	ds	1
   767  0000DD                     PWM_DutyCycle1@DC:
   768                           	opt stack 0
   769  0000DD                     PWM_DutyCycle2@DC:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x31
   773  0000DD                     	ds	2
   774  0000DF                     ??_Inicializa_Driveby:
   775  0000DF                     ?_getCNY70Value:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x33
   779  0000DF                     	ds	1
   780  0000E0                     putcBluetoothInt@i:
   781                           	opt stack 0
   782  0000E0                     Inicializa_Driveby@i:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x34
   786  0000E0                     	ds	1
   787  0000E1                     
   788                           ; 0 bytes @ 0x35
   789  0000E1                     	ds	1
   790  0000E2                     Comando_Tablet@sensed:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x36
   794  0000E2                     	ds	2
   795  0000E4                     tblptru	equ	0xFF8
   796                           tblptrh	equ	0xFF7
   797                           tblptrl	equ	0xFF6
   798                           tablat	equ	0xFF5
   799                           postinc0	equ	0xFEE
   800                           wreg	equ	0xFE8
   801                           postdec1	equ	0xFE5
   802                           fsr1l	equ	0xFE1
   803                           
   804                           ; 0 bytes @ 0x38
   805                           
   806                           	psect	cstackCOMRAM
   807  000001                     __pcstackCOMRAM:
   808                           	opt stack 0
   809  000001                     ?i2___ftpack:
   810                           	opt stack 0
   811  000001                     ReadUSART@data:
   812                           	opt stack 0
   813  000001                     i2SetDCPWM1@dutycycle:
   814                           	opt stack 0
   815  000001                     i2SetDCPWM2@dutycycle:
   816                           	opt stack 0
   817  000001                     i2___ftpack@arg:
   818                           	opt stack 0
   819                           
   820                           ; 3 bytes @ 0x0
   821  000001                     	ds	2
   822  000003                     ??i2_SetDCPWM1:
   823  000003                     ??i2_SetDCPWM2:
   824                           
   825                           ; 0 bytes @ 0x2
   826  000003                     	ds	1
   827  000004                     i2___ftpack@exp:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x3
   831  000004                     	ds	1
   832  000005                     i2___ftpack@sign:
   833                           	opt stack 0
   834  000005                     i2SetDCPWM1@DCycle:
   835                           	opt stack 0
   836  000005                     i2SetDCPWM2@DCycle:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x4
   840  000005                     	ds	1
   841  000006                     ??i2___ftpack:
   842                           
   843                           ; 0 bytes @ 0x5
   844  000006                     	ds	3
   845  000009                     ?i2___lbtoft:
   846                           	opt stack 0
   847                           
   848                           ; 3 bytes @ 0x8
   849  000009                     	ds	3
   850  00000C                     i2___lbtoft@c:
   851                           	opt stack 0
   852                           
   853                           ; 1 bytes @ 0xB
   854  00000C                     	ds	1
   855  00000D                     ?i2___ftmul:
   856                           	opt stack 0
   857  00000D                     i2___ftmul@f1:
   858                           	opt stack 0
   859                           
   860                           ; 3 bytes @ 0xC
   861  00000D                     	ds	3
   862  000010                     i2___ftmul@f2:
   863                           	opt stack 0
   864                           
   865                           ; 3 bytes @ 0xF
   866  000010                     	ds	3
   867  000013                     ??i2___ftmul:
   868                           
   869                           ; 0 bytes @ 0x12
   870  000013                     	ds	3
   871  000016                     i2___ftmul@exp:
   872                           	opt stack 0
   873                           
   874                           ; 1 bytes @ 0x15
   875  000016                     	ds	1
   876  000017                     i2___ftmul@f3_as_product:
   877                           	opt stack 0
   878                           
   879                           ; 3 bytes @ 0x16
   880  000017                     	ds	3
   881  00001A                     i2___ftmul@cntr:
   882                           	opt stack 0
   883                           
   884                           ; 1 bytes @ 0x19
   885  00001A                     	ds	1
   886  00001B                     i2___ftmul@sign:
   887                           	opt stack 0
   888                           
   889                           ; 1 bytes @ 0x1A
   890  00001B                     	ds	1
   891  00001C                     ?i2___fttol:
   892                           	opt stack 0
   893  00001C                     i2___fttol@f1:
   894                           	opt stack 0
   895                           
   896                           ; 3 bytes @ 0x1B
   897  00001C                     	ds	4
   898  000020                     ??i2___fttol:
   899                           
   900                           ; 0 bytes @ 0x1F
   901  000020                     	ds	5
   902  000025                     i2___fttol@sign1:
   903                           	opt stack 0
   904                           
   905                           ; 1 bytes @ 0x24
   906  000025                     	ds	1
   907  000026                     i2___fttol@lval:
   908                           	opt stack 0
   909                           
   910                           ; 4 bytes @ 0x25
   911  000026                     	ds	4
   912  00002A                     i2___fttol@exp1:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x29
   916  00002A                     	ds	1
   917  00002B                     ??i2_PWM_DutyCycle1:
   918  00002B                     ??i2_PWM_DutyCycle2:
   919                           
   920                           ; 0 bytes @ 0x2A
   921  00002B                     	ds	4
   922  00002F                     i2PWM_DutyCycle1@DutyCycle:
   923                           	opt stack 0
   924  00002F                     i2PWM_DutyCycle2@DutyCycle:
   925                           	opt stack 0
   926                           
   927                           ; 2 bytes @ 0x2E
   928  00002F                     	ds	2
   929  000031                     i2PWM_DutyCycle1@percentageDuty:
   930                           	opt stack 0
   931  000031                     i2PWM_DutyCycle2@percentageDuty:
   932                           	opt stack 0
   933                           
   934                           ; 1 bytes @ 0x30
   935  000031                     	ds	1
   936  000032                     i2PWM_DutyCycle1@DC:
   937                           	opt stack 0
   938  000032                     i2PWM_DutyCycle2@DC:
   939                           	opt stack 0
   940                           
   941                           ; 2 bytes @ 0x31
   942  000032                     	ds	2
   943  000034                     ??_TMRO_USART:
   944  000034                     
   945                           ; 0 bytes @ 0x33
   946  000034                     	ds	14
   947                           tblptru	equ	0xFF8
   948                           tblptrh	equ	0xFF7
   949                           tblptrl	equ	0xFF6
   950                           tablat	equ	0xFF5
   951                           postinc0	equ	0xFEE
   952                           wreg	equ	0xFE8
   953                           postdec1	equ	0xFE5
   954                           fsr1l	equ	0xFE1
   955                           
   956 ;;
   957 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   958 ;;
   959 ;; *************** function _main *****************
   960 ;; Defined at:
   961 ;;		line 157 in file "robot.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  2  329[COMRAM] int 
   968 ;; Registers used:
   969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   975 ;;      Params:         0       0       0       0       0       0       0       0       0
   976 ;;      Locals:         0       0       0       0       0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0       0       0
   978 ;;      Totals:         0       0       0       0       0       0       0       0       0
   979 ;;Total ram usage:        0 bytes
   980 ;; Hardware stack levels required when called:   11
   981 ;; This function calls:
   982 ;;		_Comando_Tablet
   983 ;;		_Inicializa_Driveby
   984 ;;		_UART1_Init
   985 ;;		_clrBufferUSART
   986 ;;		_getCNY70Value
   987 ;; This function is called by:
   988 ;;		Startup code after reset
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text0
   993  0014BE                     __ptext0:
   994                           	opt stack 0
   995  0014BE                     _main:
   996                           	opt stack 20
   997                           
   998                           ;robot.c: 159: INTCON =0X00;
   999                           
  1000                           ;incstack = 0
  1001  0014BE  0E00               	movlw	0
  1002  0014C0  6EF2               	movwf	intcon,c	;volatile
  1003                           
  1004                           ;robot.c: 160: TRISD = 0x00;
  1005  0014C2  0E00               	movlw	0
  1006  0014C4  6E95               	movwf	3989,c	;volatile
  1007                           
  1008                           ;robot.c: 161: TRISE = 0x00;
  1009  0014C6  0E00               	movlw	0
  1010  0014C8  6E96               	movwf	3990,c	;volatile
  1011                           
  1012                           ;robot.c: 162: ADCON1bits.PCFG=0b1111;
  1013  0014CA  80C1               	bsf	4033,0,c	;volatile
  1014  0014CC  82C1               	bsf	4033,1,c	;volatile
  1015  0014CE  84C1               	bsf	4033,2,c	;volatile
  1016  0014D0  86C1               	bsf	4033,3,c	;volatile
  1017                           
  1018                           ;robot.c: 164: Inicializa_Driveby();
  1019  0014D2  EC6F  F008         	call	_Inicializa_Driveby	;wreg free
  1020  0014D6                     l3350:
  1021                           
  1022                           ;robot.c: 169: {
  1023                           ;robot.c: 172: if (cleanBfer == 1) {
  1024  0014D6  0100               	movlb	0	; () banked
  1025  0014D8  0564               	decf	_cleanBfer& (0+255),w,b
  1026  0014DA  A4D8               	btfss	status,2,c
  1027  0014DC  D005               	goto	l3356
  1028                           
  1029                           ; BSR set to: 0
  1030                           ;robot.c: 173: clrBufferUSART();
  1031  0014DE  ECE8  F00D         	call	_clrBufferUSART	;wreg free
  1032                           
  1033                           ;robot.c: 174: cleanBfer = 0;
  1034  0014E2  0E00               	movlw	0
  1035  0014E4  0100               	movlb	0	; () banked
  1036  0014E6  6F64               	movwf	_cleanBfer& (0+255),b
  1037  0014E8                     l3356:
  1038                           
  1039                           ; BSR set to: 0
  1040                           ;robot.c: 175: }
  1041                           ;robot.c: 176: if (FinComandT == 1) {
  1042  0014E8  0100               	movlb	0	; () banked
  1043  0014EA  0563               	decf	_FinComandT& (0+255),w,b
  1044  0014EC  A4D8               	btfss	status,2,c
  1045  0014EE  D00E               	goto	l3370
  1046                           
  1047                           ; BSR set to: 0
  1048                           ;robot.c: 178: FinComandT = 0;
  1049  0014F0  0E00               	movlw	0
  1050  0014F2  0100               	movlb	0	; () banked
  1051  0014F4  6F63               	movwf	_FinComandT& (0+255),b
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;robot.c: 179: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1055  0014F6  0E4F               	movlw	79
  1056  0014F8  16AB               	andwf	4011,f,c	;volatile
  1057                           
  1058                           ; BSR set to: 0
  1059  0014FA  9AAC               	bcf	4012,5,c	;volatile
  1060                           
  1061                           ; BSR set to: 0
  1062  0014FC  0ECF               	movlw	207
  1063  0014FE  169D               	andwf	3997,f,c	;volatile
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;robot.c: 180: Comando_Tablet();
  1067  001500  EC23  F00C         	call	_Comando_Tablet	;wreg free
  1068                           
  1069                           ;robot.c: 181: UART1_Init(51);
  1070  001504  0E33               	movlw	51
  1071  001506  ECB1  F00E         	call	_UART1_Init
  1072                           
  1073                           ;robot.c: 183: }
  1074  00150A  D00C               	goto	l3380
  1075  00150C                     l3370:
  1076                           
  1077                           ;robot.c: 184: else if (FinComandB == 1) {
  1078  00150C  0100               	movlb	0	; () banked
  1079  00150E  0562               	decf	_FinComandB& (0+255),w,b
  1080  001510  A4D8               	btfss	status,2,c
  1081  001512  D008               	goto	l3380
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;robot.c: 187: FinComandB = 0;
  1085  001514  0E00               	movlw	0
  1086  001516  0100               	movlb	0	; () banked
  1087  001518  6F62               	movwf	_FinComandB& (0+255),b
  1088                           
  1089                           ; BSR set to: 0
  1090                           ;robot.c: 188: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1091  00151A  0E4F               	movlw	79
  1092  00151C  16AB               	andwf	4011,f,c	;volatile
  1093                           
  1094                           ; BSR set to: 0
  1095  00151E  9AAC               	bcf	4012,5,c	;volatile
  1096                           
  1097                           ; BSR set to: 0
  1098  001520  0ECF               	movlw	207
  1099  001522  169D               	andwf	3997,f,c	;volatile
  1100  001524                     l3380:
  1101                           
  1102                           ;robot.c: 192: }
  1103                           ;robot.c: 194: PORTAbits.RA0 = PORTBbits.RB3;
  1104  001524  A681               	btfss	3969,3,c	;volatile
  1105  001526  D002               	bra	u3315
  1106  001528  8080               	bsf	3968,0,c	;volatile
  1107  00152A  D001               	bra	u3317
  1108  00152C                     u3315:
  1109  00152C  9080               	bcf	3968,0,c	;volatile
  1110  00152E                     u3317:
  1111                           
  1112                           ;robot.c: 195: PORTAbits.RA1 = PORTBbits.RB0;
  1113  00152E  A081               	btfss	3969,0,c	;volatile
  1114  001530  D002               	bra	u3325
  1115  001532  8280               	bsf	3968,1,c	;volatile
  1116  001534  D001               	bra	u3327
  1117  001536                     u3325:
  1118  001536  9280               	bcf	3968,1,c	;volatile
  1119  001538                     u3327:
  1120                           
  1121                           ;robot.c: 196: PORTAbits.RA2 = PORTBbits.RB4;
  1122  001538  A881               	btfss	3969,4,c	;volatile
  1123  00153A  D002               	bra	u3335
  1124  00153C  8480               	bsf	3968,2,c	;volatile
  1125  00153E  D001               	bra	u3337
  1126  001540                     u3335:
  1127  001540  9480               	bcf	3968,2,c	;volatile
  1128  001542                     u3337:
  1129                           
  1130                           ;robot.c: 198: getCNY70Value();
  1131  001542  EC75  F006         	call	_getCNY70Value	;wreg free
  1132  001546  D7C7               	goto	l3350
  1133  001548                     __end_of_main:
  1134                           	opt stack 0
  1135                           tblptru	equ	0xFF8
  1136                           tblptrh	equ	0xFF7
  1137                           tblptrl	equ	0xFF6
  1138                           tablat	equ	0xFF5
  1139                           intcon	equ	0xFF2
  1140                           postinc0	equ	0xFEE
  1141                           wreg	equ	0xFE8
  1142                           postdec1	equ	0xFE5
  1143                           fsr1l	equ	0xFE1
  1144                           status	equ	0xFD8
  1145                           
  1146 ;; *************** function _Inicializa_Driveby *****************
  1147 ;; Defined at:
  1148 ;;		line 62 in file "Funciones_Db.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;		None
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  i               2   52[BANK0 ] int 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;		None               void
  1155 ;; Registers used:
  1156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1162 ;;      Params:         0       0       0       0       0       0       0       0       0
  1163 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1164 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1165 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1166 ;;Total ram usage:        3 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; Hardware stack levels required when called:   10
  1169 ;; This function calls:
  1170 ;;		_BT_Init
  1171 ;;		_PWM_DutyCycle1
  1172 ;;		_PWM_DutyCycle2
  1173 ;;		_PWM_init1
  1174 ;;		_PWM_init2
  1175 ;;		_Pause_seg
  1176 ;;		_clrBufferUSART
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text1
  1183  0010DE                     __ptext1:
  1184                           	opt stack 0
  1185  0010DE                     _Inicializa_Driveby:
  1186                           	opt stack 20
  1187                           
  1188                           ;Funciones_Db.c: 63: TRISA = TRISB = TRISC = TRISD = 0;
  1189                           
  1190                           ;incstack = 0
  1191  0010DE  0E00               	movlw	0
  1192  0010E0  6E95               	movwf	3989,c	;volatile
  1193  0010E2  CF95 FF94          	movff	3989,3988	;volatile
  1194  0010E6  CF94 FF93          	movff	3988,3987	;volatile
  1195  0010EA  CF93 FF92          	movff	3987,3986	;volatile
  1196                           
  1197                           ;Funciones_Db.c: 64: INTCON = 0b11000000;
  1198  0010EE  0EC0               	movlw	192
  1199  0010F0  6EF2               	movwf	intcon,c	;volatile
  1200                           
  1201                           ;Funciones_Db.c: 67: int i = 0;
  1202  0010F2  0E00               	movlw	0
  1203  0010F4  0100               	movlb	0	; () banked
  1204  0010F6  6FE1               	movwf	(Inicializa_Driveby@i+1)& (0+255),b
  1205  0010F8  0E00               	movlw	0
  1206  0010FA  0100               	movlb	0	; () banked
  1207  0010FC  6FE0               	movwf	Inicializa_Driveby@i& (0+255),b
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;Funciones_Db.c: 68: _delay((unsigned long)((40)*(4000000/4000.0)));
  1211  0010FE  0E34               	movlw	52
  1212  001100  0100               	movlb	0	; () banked
  1213  001102  6FDF               	movwf	??_Inicializa_Driveby& (0+255),b
  1214  001104  0EF2               	movlw	242
  1215  001106                     u3347:
  1216  001106  2EE8               	decfsz	wreg,f,c
  1217  001108  D7FE               	goto	u3347
  1218  00110A  2FDF               	decfsz	??_Inicializa_Driveby& (0+255),f,b
  1219  00110C  D7FC               	goto	u3347
  1220                           
  1221                           ;Funciones_Db.c: 69: OSCCONbits.IRCF = 0b111;
  1222  00110E  88D3               	bsf	4051,4,c	;volatile
  1223  001110  8AD3               	bsf	4051,5,c	;volatile
  1224  001112  8CD3               	bsf	4051,6,c	;volatile
  1225                           
  1226                           ;Funciones_Db.c: 74: TRISA = TRISB = TRISC = TRISD = TRISE = 0;
  1227  001114  0E00               	movlw	0
  1228  001116  6E96               	movwf	3990,c	;volatile
  1229  001118  CF96 FF95          	movff	3990,3989	;volatile
  1230  00111C  CF95 FF94          	movff	3989,3988	;volatile
  1231  001120  CF94 FF93          	movff	3988,3987	;volatile
  1232  001124  CF93 FF92          	movff	3987,3986	;volatile
  1233                           
  1234                           ;Funciones_Db.c: 75: PORTA = PORTB = PORTC = PORTD = PORTE = 0;
  1235  001128  0E00               	movlw	0
  1236  00112A  6E84               	movwf	3972,c	;volatile
  1237  00112C  CF84 FF83          	movff	3972,3971	;volatile
  1238  001130  CF83 FF82          	movff	3971,3970	;volatile
  1239  001134  CF82 FF81          	movff	3970,3969	;volatile
  1240  001138  CF81 FF80          	movff	3969,3968	;volatile
  1241                           
  1242                           ;Funciones_Db.c: 76: TRISCbits.TRISC7 = 1;
  1243  00113C  8E94               	bsf	3988,7,c	;volatile
  1244                           
  1245                           ;Funciones_Db.c: 77: TRISCbits.TRISC6 = 0;
  1246  00113E  9C94               	bcf	3988,6,c	;volatile
  1247                           
  1248                           ;Funciones_Db.c: 78: for (i = 1; i <= 50; i++)
  1249  001140  0E00               	movlw	0
  1250  001142  0100               	movlb	0	; () banked
  1251  001144  6FE1               	movwf	(Inicializa_Driveby@i+1)& (0+255),b
  1252  001146  0E01               	movlw	1
  1253  001148  0100               	movlb	0	; () banked
  1254  00114A  6FE0               	movwf	Inicializa_Driveby@i& (0+255),b
  1255  00114C                     
  1256                           ; BSR set to: 0
  1257  00114C  0100               	movlb	0	; () banked
  1258  00114E  51E1               	movf	(Inicializa_Driveby@i+1)& (0+255),w,b
  1259  001150  0A80               	xorlw	128
  1260  001152  0F80               	addlw	-128
  1261  001154  0E33               	movlw	51
  1262  001156  B4D8               	btfsc	status,2,c
  1263  001158  5DE0               	subwf	Inicializa_Driveby@i& (0+255),w,b
  1264  00115A  B0D8               	btfsc	status,0,c
  1265  00115C  D00D               	goto	l3182
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;Funciones_Db.c: 79: _delay((unsigned long)((20)*(4000000/4000.0)));
  1269                           
  1270                           ; BSR set to: 0
  1271                           
  1272                           ; BSR set to: 0
  1273  00115E  0E1A               	movlw	26
  1274  001160  0100               	movlb	0	; () banked
  1275  001162  6FDF               	movwf	??_Inicializa_Driveby& (0+255),b
  1276  001164  0EF8               	movlw	248
  1277  001166                     u3357:
  1278  001166  2EE8               	decfsz	wreg,f,c
  1279  001168  D7FE               	goto	u3357
  1280  00116A  2FDF               	decfsz	??_Inicializa_Driveby& (0+255),f,b
  1281  00116C  D7FC               	goto	u3357
  1282  00116E  D000               	nop2	
  1283  001170  0100               	movlb	0	; () banked
  1284  001172  4BE0               	infsnz	Inicializa_Driveby@i& (0+255),f,b
  1285  001174  2BE1               	incf	(Inicializa_Driveby@i+1)& (0+255),f,b
  1286  001176  D7EA               	goto	L1
  1287  001178                     l3182:
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;Funciones_Db.c: 80: PORTE = 0;
  1291  001178  0E00               	movlw	0
  1292  00117A  6E84               	movwf	3972,c	;volatile
  1293                           
  1294                           ;Funciones_Db.c: 81: PORTB = 0;
  1295  00117C  0E00               	movlw	0
  1296  00117E  6E81               	movwf	3969,c	;volatile
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;Funciones_Db.c: 82: TRISBbits.TRISB0 = 1;
  1300  001180  8093               	bsf	3987,0,c	;volatile
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;Funciones_Db.c: 83: TRISBbits.TRISB1 = 1;
  1304  001182  8293               	bsf	3987,1,c	;volatile
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;Funciones_Db.c: 84: TRISBbits.TRISB2 = 1;
  1308  001184  8493               	bsf	3987,2,c	;volatile
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;Funciones_Db.c: 85: TRISBbits.TRISB3 = 1;
  1312  001186  8693               	bsf	3987,3,c	;volatile
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;Funciones_Db.c: 86: TRISBbits.TRISB4 = 1;
  1316  001188  8893               	bsf	3987,4,c	;volatile
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;Funciones_Db.c: 90: BT_Init();
  1320  00118A  EC45  F009         	call	_BT_Init	;wreg free
  1321                           
  1322                           ;Funciones_Db.c: 93: Pause_seg(7);
  1323  00118E  0E07               	movlw	7
  1324  001190  ECC8  F00C         	call	_Pause_seg
  1325                           
  1326                           ;Funciones_Db.c: 94: cad = 0;
  1327  001194  0E00               	movlw	0
  1328  001196  6E55               	movwf	_cad,c
  1329                           
  1330                           ;Funciones_Db.c: 95: clrBufferUSART();
  1331  001198  ECE8  F00D         	call	_clrBufferUSART	;wreg free
  1332                           
  1333                           ;Funciones_Db.c: 98: PWM_init1(0xff);
  1334  00119C  0EFF               	movlw	255
  1335  00119E  EC70  F00E         	call	_PWM_init1
  1336                           
  1337                           ;Funciones_Db.c: 99: PWM_init2(0xff);
  1338  0011A2  0EFF               	movlw	255
  1339  0011A4  EC5D  F00E         	call	_PWM_init2
  1340                           
  1341                           ;Funciones_Db.c: 100: PWM_DutyCycle1(0);
  1342  0011A8  0E00               	movlw	0
  1343  0011AA  ECA9  F00B         	call	_PWM_DutyCycle1
  1344                           
  1345                           ;Funciones_Db.c: 101: PWM_DutyCycle2(0);
  1346  0011AE  0E00               	movlw	0
  1347  0011B0  EC6B  F00B         	call	_PWM_DutyCycle2
  1348                           
  1349                           ;Funciones_Db.c: 102: return;
  1350  0011B4  0012               	return	
  1351  0011B6                     __end_of_Inicializa_Driveby:
  1352                           	opt stack 0
  1353                           tblptru	equ	0xFF8
  1354                           tblptrh	equ	0xFF7
  1355                           tblptrl	equ	0xFF6
  1356                           tablat	equ	0xFF5
  1357                           intcon	equ	0xFF2
  1358                           postinc0	equ	0xFEE
  1359                           wreg	equ	0xFE8
  1360                           postdec1	equ	0xFE5
  1361                           fsr1l	equ	0xFE1
  1362                           status	equ	0xFD8
  1363                           
  1364 ;; *************** function _PWM_init2 *****************
  1365 ;; Defined at:
  1366 ;;		line 42 in file "pwm.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  period          1    wreg     unsigned char 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  period          1    3[BANK0 ] unsigned char 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;		None               void
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1380 ;;      Params:         0       0       0       0       0       0       0       0       0
  1381 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1383 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1384 ;;Total ram usage:        1 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    6
  1387 ;; This function calls:
  1388 ;;		_OpenPWM2
  1389 ;; This function is called by:
  1390 ;;		_Inicializa_Driveby
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text2
  1395  001CBA                     __ptext2:
  1396                           	opt stack 0
  1397  001CBA                     _PWM_init2:
  1398                           	opt stack 23
  1399                           
  1400                           ;incstack = 0
  1401                           ;PWM_init2@period stored from wreg
  1402  001CBA  0100               	movlb	0	; () banked
  1403  001CBC  6FAF               	movwf	PWM_init2@period& (0+255),b
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;pwm.c: 43: Timer2Config = 0b11111110;
  1407  001CBE  0EFE               	movlw	254
  1408  001CC0  0100               	movlb	0	; () banked
  1409  001CC2  6FAB               	movwf	_Timer2Config& (0+255),b
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;pwm.c: 44: T2CON = (0xfb & Timer2Config);
  1413  001CC4  0100               	movlb	0	; () banked
  1414  001CC6  51AB               	movf	_Timer2Config& (0+255),w,b
  1415  001CC8  0BFB               	andlw	251
  1416  001CCA  6ECA               	movwf	4042,c	;volatile
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;pwm.c: 47: TMR2 = 0;
  1420  001CCC  0E00               	movlw	0
  1421  001CCE  6ECC               	movwf	4044,c	;volatile
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;pwm.c: 48: PIR1bits.TMR2IF = 0;
  1425  001CD0  929E               	bcf	3998,1,c	;volatile
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;pwm.c: 49: PIE1bits.TMR2IE = 0;
  1429  001CD2  929D               	bcf	3997,1,c	;volatile
  1430                           
  1431                           ; BSR set to: 0
  1432                           ;pwm.c: 50: T2CONbits.TMR2ON = 1;
  1433  001CD4  84CA               	bsf	4042,2,c	;volatile
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;pwm.c: 51: OpenPWM2(period);
  1437  001CD6  0100               	movlb	0	; () banked
  1438  001CD8  51AF               	movf	PWM_init2@period& (0+255),w,b
  1439  001CDA  ECC6  F00D         	call	_OpenPWM2
  1440                           
  1441                           ;pwm.c: 53: return;
  1442  001CDE  0012               	return	
  1443  001CE0                     __end_of_PWM_init2:
  1444                           	opt stack 0
  1445                           tblptru	equ	0xFF8
  1446                           tblptrh	equ	0xFF7
  1447                           tblptrl	equ	0xFF6
  1448                           tablat	equ	0xFF5
  1449                           intcon	equ	0xFF2
  1450                           postinc0	equ	0xFEE
  1451                           wreg	equ	0xFE8
  1452                           postdec1	equ	0xFE5
  1453                           fsr1l	equ	0xFE1
  1454                           status	equ	0xFD8
  1455                           
  1456 ;; *************** function _OpenPWM2 *****************
  1457 ;; Defined at:
  1458 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2open.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  period          1    wreg     unsigned char 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  period          1    1[BANK0 ] unsigned char 
  1463 ;;  ccp2mx          1    2[BANK0 ] unsigned char 
  1464 ;;  pmmode          1    0        unsigned char 
  1465 ;; Return value:  Size  Location     Type
  1466 ;;		None               void
  1467 ;; Registers used:
  1468 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1474 ;;      Params:         0       0       0       0       0       0       0       0       0
  1475 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1476 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1477 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1478 ;;Total ram usage:        3 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; Hardware stack levels required when called:    5
  1481 ;; This function calls:
  1482 ;;		Nothing
  1483 ;; This function is called by:
  1484 ;;		_PWM_init2
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text3
  1489  001B8C                     __ptext3:
  1490                           	opt stack 0
  1491  001B8C                     _OpenPWM2:
  1492                           	opt stack 23
  1493                           
  1494                           ;incstack = 0
  1495                           ;OpenPWM2@period stored from wreg
  1496  001B8C  0100               	movlb	0	; () banked
  1497  001B8E  6FAD               	movwf	OpenPWM2@period& (0+255),b
  1498                           
  1499                           ; BSR set to: 0
  1500  001B90  0E0C               	movlw	12
  1501  001B92  6EBA               	movwf	4026,c	;volatile
  1502                           
  1503                           ; BSR set to: 0
  1504  001B94  0E05               	movlw	5
  1505  001B96  6EF6               	movwf	tblptrl,c
  1506  001B98                     	if	1	;There is more than 1 active tblptr byte
  1507  001B98  0E00               	movlw	0
  1508  001B9A  6EF7               	movwf	tblptrh,c
  1509  001B9C                     	endif
  1510  001B9C                     	if	1	;There are 3 active tblptr bytes
  1511  001B9C  0E30               	movlw	48
  1512  001B9E  6EF8               	movwf	tblptru,c
  1513  001BA0                     	endif
  1514  001BA0  0008               	tblrd		*
  1515  001BA2  CFF5 F0AC          	movff	tablat,??_OpenPWM2
  1516  001BA6  0100               	movlb	0	; () banked
  1517  001BA8  A1AC               	btfss	??_OpenPWM2& (0+255),0,b
  1518  001BAA  D003               	goto	l2726
  1519                           
  1520                           ; BSR set to: 0
  1521  001BAC  0100               	movlb	0	; () banked
  1522  001BAE  69AE               	setf	OpenPWM2@ccp2mx& (0+255),b
  1523  001BB0  D003               	goto	l519
  1524  001BB2                     l2726:
  1525                           
  1526                           ; BSR set to: 0
  1527  001BB2  0E00               	movlw	0
  1528  001BB4  0100               	movlb	0	; () banked
  1529  001BB6  6FAE               	movwf	OpenPWM2@ccp2mx& (0+255),b
  1530  001BB8                     l519:
  1531                           
  1532                           ; BSR set to: 0
  1533  001BB8  0100               	movlb	0	; () banked
  1534  001BBA  51AE               	movf	OpenPWM2@ccp2mx& (0+255),w,b
  1535  001BBC  B4D8               	btfsc	status,2,c
  1536  001BBE  D002               	goto	l520
  1537                           
  1538                           ; BSR set to: 0
  1539  001BC0  9294               	bcf	3988,1,c	;volatile
  1540  001BC2  D001               	goto	l521
  1541  001BC4                     l520:
  1542                           
  1543                           ; BSR set to: 0
  1544  001BC4  9693               	bcf	3987,3,c	;volatile
  1545  001BC6                     l521:
  1546                           
  1547                           ; BSR set to: 0
  1548  001BC6  94CA               	bcf	4042,2,c	;volatile
  1549  001BC8  C0AD  FFCB         	movff	OpenPWM2@period,4043	;volatile
  1550  001BCC  84CA               	bsf	4042,2,c	;volatile
  1551                           
  1552                           ; BSR set to: 0
  1553  001BCE  0012               	return	
  1554  001BD0                     __end_of_OpenPWM2:
  1555                           	opt stack 0
  1556                           tblptru	equ	0xFF8
  1557                           tblptrh	equ	0xFF7
  1558                           tblptrl	equ	0xFF6
  1559                           tablat	equ	0xFF5
  1560                           intcon	equ	0xFF2
  1561                           postinc0	equ	0xFEE
  1562                           wreg	equ	0xFE8
  1563                           postdec1	equ	0xFE5
  1564                           fsr1l	equ	0xFE1
  1565                           status	equ	0xFD8
  1566                           
  1567 ;; *************** function _PWM_init1 *****************
  1568 ;; Defined at:
  1569 ;;		line 20 in file "pwm.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  period          1    wreg     unsigned char 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  period          1    1[BANK0 ] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;		None               void
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1583 ;;      Params:         0       0       0       0       0       0       0       0       0
  1584 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1586 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1587 ;;Total ram usage:        1 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    6
  1590 ;; This function calls:
  1591 ;;		_OpenPWM1
  1592 ;; This function is called by:
  1593 ;;		_Inicializa_Driveby
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text4
  1598  001CE0                     __ptext4:
  1599                           	opt stack 0
  1600  001CE0                     _PWM_init1:
  1601                           	opt stack 23
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;incstack = 0
  1605                           ;PWM_init1@period stored from wreg
  1606  001CE0  0100               	movlb	0	; () banked
  1607  001CE2  6FAD               	movwf	PWM_init1@period& (0+255),b
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;pwm.c: 21: Timer2Config = 0b11111110;
  1611  001CE4  0EFE               	movlw	254
  1612  001CE6  0100               	movlb	0	; () banked
  1613  001CE8  6FAB               	movwf	_Timer2Config& (0+255),b
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;pwm.c: 22: T2CON = (0xfb & Timer2Config);
  1617  001CEA  0100               	movlb	0	; () banked
  1618  001CEC  51AB               	movf	_Timer2Config& (0+255),w,b
  1619  001CEE  0BFB               	andlw	251
  1620  001CF0  6ECA               	movwf	4042,c	;volatile
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;pwm.c: 25: TMR2 = 0;
  1624  001CF2  0E00               	movlw	0
  1625  001CF4  6ECC               	movwf	4044,c	;volatile
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;pwm.c: 26: PIR1bits.TMR2IF = 0;
  1629  001CF6  929E               	bcf	3998,1,c	;volatile
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;pwm.c: 27: PIE1bits.TMR2IE = 0;
  1633  001CF8  929D               	bcf	3997,1,c	;volatile
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;pwm.c: 28: T2CONbits.TMR2ON = 1;
  1637  001CFA  84CA               	bsf	4042,2,c	;volatile
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;pwm.c: 29: OpenPWM1(period);
  1641  001CFC  0100               	movlb	0	; () banked
  1642  001CFE  51AD               	movf	PWM_init1@period& (0+255),w,b
  1643  001D00  ECE8  F00E         	call	_OpenPWM1
  1644                           
  1645                           ;pwm.c: 31: return;
  1646  001D04  0012               	return	
  1647  001D06                     __end_of_PWM_init1:
  1648                           	opt stack 0
  1649                           tblptru	equ	0xFF8
  1650                           tblptrh	equ	0xFF7
  1651                           tblptrl	equ	0xFF6
  1652                           tablat	equ	0xFF5
  1653                           intcon	equ	0xFF2
  1654                           postinc0	equ	0xFEE
  1655                           wreg	equ	0xFE8
  1656                           postdec1	equ	0xFE5
  1657                           fsr1l	equ	0xFE1
  1658                           status	equ	0xFD8
  1659                           
  1660 ;; *************** function _OpenPWM1 *****************
  1661 ;; Defined at:
  1662 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1open.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  period          1    wreg     unsigned char 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  period          1    0[BANK0 ] unsigned char 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;		None               void
  1669 ;; Registers used:
  1670 ;;		wreg, status,2, status,0
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1676 ;;      Params:         0       0       0       0       0       0       0       0       0
  1677 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1679 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1680 ;;Total ram usage:        1 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; Hardware stack levels required when called:    5
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_PWM_init1
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text5
  1691  001DD0                     __ptext5:
  1692                           	opt stack 0
  1693  001DD0                     _OpenPWM1:
  1694                           	opt stack 23
  1695                           
  1696                           ;incstack = 0
  1697                           ;OpenPWM1@period stored from wreg
  1698  001DD0  0100               	movlb	0	; () banked
  1699  001DD2  6FAC               	movwf	OpenPWM1@period& (0+255),b
  1700                           
  1701                           ; BSR set to: 0
  1702  001DD4  0E0C               	movlw	12
  1703  001DD6  12BD               	iorwf	4029,f,c	;volatile
  1704                           
  1705                           ; BSR set to: 0
  1706  001DD8  9494               	bcf	3988,2,c	;volatile
  1707                           
  1708                           ; BSR set to: 0
  1709  001DDA  94CA               	bcf	4042,2,c	;volatile
  1710                           
  1711                           ; BSR set to: 0
  1712  001DDC  C0AC  FFCB         	movff	OpenPWM1@period,4043	;volatile
  1713                           
  1714                           ; BSR set to: 0
  1715  001DE0  84CA               	bsf	4042,2,c	;volatile
  1716                           
  1717                           ; BSR set to: 0
  1718  001DE2  0012               	return	
  1719  001DE4                     __end_of_OpenPWM1:
  1720                           	opt stack 0
  1721                           tblptru	equ	0xFF8
  1722                           tblptrh	equ	0xFF7
  1723                           tblptrl	equ	0xFF6
  1724                           tablat	equ	0xFF5
  1725                           intcon	equ	0xFF2
  1726                           postinc0	equ	0xFEE
  1727                           wreg	equ	0xFE8
  1728                           postdec1	equ	0xFE5
  1729                           fsr1l	equ	0xFE1
  1730                           status	equ	0xFD8
  1731                           
  1732 ;; *************** function _BT_Init *****************
  1733 ;; Defined at:
  1734 ;;		line 16 in file "Bluetooth.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  nameBT         18   14[BANK0 ] unsigned char [18]
  1739 ;; Return value:  Size  Location     Type
  1740 ;;		None               void
  1741 ;; Registers used:
  1742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1748 ;;      Params:         0       0       0       0       0       0       0       0       0
  1749 ;;      Locals:         0      18       0       0       0       0       0       0       0
  1750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1751 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1752 ;;Total ram usage:       18 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:    9
  1755 ;; This function calls:
  1756 ;;		_Pause_seg
  1757 ;;		_SendBlueToothCommand
  1758 ;;		_UART1_Init
  1759 ;; This function is called by:
  1760 ;;		_Inicializa_Driveby
  1761 ;;		_EstadoBluetooth
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text6
  1766  00128A                     __ptext6:
  1767                           	opt stack 0
  1768  00128A                     _BT_Init:
  1769                           	opt stack 20
  1770                           
  1771                           ;Bluetooth.c: 18: UART1_Init(51);
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;incstack = 0
  1775  00128A  0E33               	movlw	51
  1776  00128C  ECB1  F00E         	call	_UART1_Init
  1777                           
  1778                           ;Bluetooth.c: 21: Pause_seg(1);
  1779  001290  0E01               	movlw	1
  1780  001292  ECC8  F00C         	call	_Pause_seg
  1781                           
  1782                           ;Bluetooth.c: 22: char nameBT[18] = {
  1783                           ;Bluetooth.c: 23: "AT+NAME=robot\r\n\0"
  1784                           ;Bluetooth.c: 24: };
  1785  001296  EE20  F0E4         	lfsr	2,BT_Init@F5675
  1786  00129A  EE10  F0BA         	lfsr	1,BT_Init@nameBT
  1787  00129E  0E12               	movlw	18
  1788  0012A0                     u2481:
  1789  0012A0  CFDE FFE6          	movff	postinc2,postinc1
  1790  0012A4  2EE8               	decfsz	wreg,f,c
  1791  0012A6  D7FC               	goto	u2481
  1792                           
  1793                           ;Bluetooth.c: 27: SendBlueToothCommand("AT+ROLE=0\r\n", 11);
  1794  0012A8  0E08               	movlw	high STR_1
  1795  0012AA  0100               	movlb	0	; () banked
  1796  0012AC  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1797  0012AE  0E52               	movlw	low STR_1
  1798  0012B0  0100               	movlb	0	; () banked
  1799  0012B2  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1800  0012B4  0E00               	movlw	0
  1801  0012B6  0100               	movlb	0	; () banked
  1802  0012B8  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1803  0012BA  0E0B               	movlw	11
  1804  0012BC  0100               	movlb	0	; () banked
  1805  0012BE  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1806  0012C0  ECA4  F00E         	call	_SendBlueToothCommand	;wreg free
  1807                           
  1808                           ;Bluetooth.c: 29: Pause_seg(1);
  1809  0012C4  0E01               	movlw	1
  1810  0012C6  ECC8  F00C         	call	_Pause_seg
  1811                           
  1812                           ;Bluetooth.c: 32: SendBlueToothCommand((const char * ) nameBT, sizeof(nameBT));
  1813  0012CA  0100               	movlb	0	; () banked
  1814  0012CC  0E00               	movlw	high BT_Init@nameBT
  1815  0012CE  0100               	movlb	0	; () banked
  1816  0012D0  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1817  0012D2  0100               	movlb	0	; () banked
  1818  0012D4  0EBA               	movlw	low BT_Init@nameBT
  1819  0012D6  0100               	movlb	0	; () banked
  1820  0012D8  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1821  0012DA  0E00               	movlw	0
  1822  0012DC  0100               	movlb	0	; () banked
  1823  0012DE  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1824  0012E0  0E12               	movlw	18
  1825  0012E2  0100               	movlb	0	; () banked
  1826  0012E4  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1827  0012E6  ECA4  F00E         	call	_SendBlueToothCommand	;wreg free
  1828                           
  1829                           ;Bluetooth.c: 33: Pause_seg(2);
  1830  0012EA  0E02               	movlw	2
  1831  0012EC  ECC8  F00C         	call	_Pause_seg
  1832                           
  1833                           ;Bluetooth.c: 35: SendBlueToothCommand("AT+PSWD=0000\r\n", 14);
  1834  0012F0  0E08               	movlw	high STR_2
  1835  0012F2  0100               	movlb	0	; () banked
  1836  0012F4  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1837  0012F6  0E0B               	movlw	low STR_2
  1838  0012F8  0100               	movlb	0	; () banked
  1839  0012FA  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1840  0012FC  0E00               	movlw	0
  1841  0012FE  0100               	movlb	0	; () banked
  1842  001300  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1843  001302  0E0E               	movlw	14
  1844  001304  0100               	movlb	0	; () banked
  1845  001306  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1846  001308  ECA4  F00E         	call	_SendBlueToothCommand	;wreg free
  1847                           
  1848                           ;Bluetooth.c: 36: Pause_seg(2);
  1849  00130C  0E02               	movlw	2
  1850  00130E  ECC8  F00C         	call	_Pause_seg
  1851                           
  1852                           ;Bluetooth.c: 40: SendBlueToothCommand("AT+INQ\r\n", 8);
  1853  001312  0E08               	movlw	high STR_3
  1854  001314  0100               	movlb	0	; () banked
  1855  001316  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1856  001318  0E5E               	movlw	low STR_3
  1857  00131A  0100               	movlb	0	; () banked
  1858  00131C  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1859  00131E  0E00               	movlw	0
  1860  001320  0100               	movlb	0	; () banked
  1861  001322  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1862  001324  0E08               	movlw	8
  1863  001326  0100               	movlb	0	; () banked
  1864  001328  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1865  00132A  ECA4  F00E         	call	_SendBlueToothCommand	;wreg free
  1866                           
  1867                           ;Bluetooth.c: 41: Pause_seg(2);
  1868  00132E  0E02               	movlw	2
  1869  001330  ECC8  F00C         	call	_Pause_seg
  1870                           
  1871                           ;Bluetooth.c: 43: SendBlueToothCommand("AT+INQ\r\n", 8);
  1872  001334  0E08               	movlw	high STR_3
  1873  001336  0100               	movlb	0	; () banked
  1874  001338  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1875  00133A  0E5E               	movlw	low STR_3
  1876  00133C  0100               	movlb	0	; () banked
  1877  00133E  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1878  001340  0E00               	movlw	0
  1879  001342  0100               	movlb	0	; () banked
  1880  001344  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1881  001346  0E08               	movlw	8
  1882  001348  0100               	movlb	0	; () banked
  1883  00134A  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1884  00134C  ECA4  F00E         	call	_SendBlueToothCommand	;wreg free
  1885                           
  1886                           ;Bluetooth.c: 44: Pause_seg(2);
  1887  001350  0E02               	movlw	2
  1888  001352  ECC8  F00C         	call	_Pause_seg
  1889                           
  1890                           ;Bluetooth.c: 45: return;
  1891  001356  0012               	return	
  1892  001358                     __end_of_BT_Init:
  1893                           	opt stack 0
  1894                           tblptru	equ	0xFF8
  1895                           tblptrh	equ	0xFF7
  1896                           tblptrl	equ	0xFF6
  1897                           tablat	equ	0xFF5
  1898                           intcon	equ	0xFF2
  1899                           postinc0	equ	0xFEE
  1900                           wreg	equ	0xFE8
  1901                           postinc1	equ	0xFE6
  1902                           postdec1	equ	0xFE5
  1903                           fsr1l	equ	0xFE1
  1904                           postinc2	equ	0xFDE
  1905                           status	equ	0xFD8
  1906                           
  1907 ;; *************** function _SendBlueToothCommand *****************
  1908 ;; Defined at:
  1909 ;;		line 48 in file "Bluetooth.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  command         2   10[BANK0 ] PTR const unsigned char 
  1912 ;;		 -> STR_4(9), STR_3(9), STR_2(15), STR_1(12), 
  1913 ;;		 -> BT_Init@nameBT(18), 
  1914 ;;  total           2   12[BANK0 ] unsigned int 
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;		None
  1917 ;; Return value:  Size  Location     Type
  1918 ;;		None               void
  1919 ;; Registers used:
  1920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1926 ;;      Params:         0       4       0       0       0       0       0       0       0
  1927 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1929 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1930 ;;Total ram usage:        4 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; Hardware stack levels required when called:    8
  1933 ;; This function calls:
  1934 ;;		_putSTRINGU1
  1935 ;; This function is called by:
  1936 ;;		_BT_Init
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text7
  1941  001D48                     __ptext7:
  1942                           	opt stack 0
  1943  001D48                     _SendBlueToothCommand:
  1944                           	opt stack 20
  1945                           
  1946                           ;Bluetooth.c: 49: putSTRINGU1(command, total);
  1947                           
  1948                           ;incstack = 0
  1949  001D48  0100               	movlb	0	; () banked
  1950  001D4A  C0B7  F0AF         	movff	SendBlueToothCommand@command+1,putSTRINGU1@dato+1
  1951  001D4E  0100               	movlb	0	; () banked
  1952  001D50  C0B6  F0AE         	movff	SendBlueToothCommand@command,putSTRINGU1@dato
  1953  001D54  C0B8  F0B0         	movff	SendBlueToothCommand@total,putSTRINGU1@total
  1954  001D58  C0B9  F0B1         	movff	SendBlueToothCommand@total+1,putSTRINGU1@total+1
  1955  001D5C  ECAC  F009         	call	_putSTRINGU1	;wreg free
  1956                           
  1957                           ;Bluetooth.c: 50: return;
  1958  001D60  0012               	return	
  1959  001D62                     __end_of_SendBlueToothCommand:
  1960                           	opt stack 0
  1961                           tblptru	equ	0xFF8
  1962                           tblptrh	equ	0xFF7
  1963                           tblptrl	equ	0xFF6
  1964                           tablat	equ	0xFF5
  1965                           intcon	equ	0xFF2
  1966                           postinc0	equ	0xFEE
  1967                           wreg	equ	0xFE8
  1968                           postinc1	equ	0xFE6
  1969                           postdec1	equ	0xFE5
  1970                           fsr1l	equ	0xFE1
  1971                           postinc2	equ	0xFDE
  1972                           status	equ	0xFD8
  1973                           
  1974 ;; *************** function _putSTRINGU1 *****************
  1975 ;; Defined at:
  1976 ;;		line 18 in file "UART1.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  dato            2    2[BANK0 ] PTR const unsigned char 
  1979 ;;		 -> STR_4(9), STR_3(9), STR_2(15), STR_1(12), 
  1980 ;;		 -> BT_Init@nameBT(18), 
  1981 ;;  total           2    4[BANK0 ] unsigned int 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  cont            1    9[BANK0 ] unsigned char 
  1984 ;;  last            1    8[BANK0 ] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;		None               void
  1987 ;; Registers used:
  1988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1994 ;;      Params:         0       4       0       0       0       0       0       0       0
  1995 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1996 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1997 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1998 ;;Total ram usage:        8 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:    7
  2001 ;; This function calls:
  2002 ;;		_putcTxU1
  2003 ;; This function is called by:
  2004 ;;		_SendBlueToothCommand
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text8
  2009  001358                     __ptext8:
  2010                           	opt stack 0
  2011  001358                     _putSTRINGU1:
  2012                           	opt stack 20
  2013                           
  2014                           ;UART1.c: 19: unsigned char cont,last;
  2015                           ;UART1.c: 21: for(cont=0,last=0;cont<total;cont++){
  2016                           
  2017                           ;incstack = 0
  2018  001358  0E00               	movlw	0
  2019  00135A  0100               	movlb	0	; () banked
  2020  00135C  6FB5               	movwf	putSTRINGU1@cont& (0+255),b
  2021  00135E  0E00               	movlw	0
  2022  001360  0100               	movlb	0	; () banked
  2023  001362  6FB4               	movwf	putSTRINGU1@last& (0+255),b
  2024  001364  D025               	goto	l2444
  2025  001366                     l2438:
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;UART1.c: 22: if(dato[cont]!='\0') last=cont;
  2029  001366  0100               	movlb	0	; () banked
  2030  001368  51B5               	movf	putSTRINGU1@cont& (0+255),w,b
  2031  00136A  0D01               	mullw	1
  2032  00136C  0100               	movlb	0	; () banked
  2033  00136E  C0AE  F0B2         	movff	putSTRINGU1@dato,??_putSTRINGU1
  2034  001372  0100               	movlb	0	; () banked
  2035  001374  C0AF  F0B3         	movff	putSTRINGU1@dato+1,??_putSTRINGU1+1
  2036  001378  50F3               	movf	prodl,w,c
  2037  00137A  0100               	movlb	0	; () banked
  2038  00137C  27B2               	addwf	??_putSTRINGU1& (0+255),f,b
  2039  00137E  50F4               	movf	prodh,w,c
  2040  001380  0100               	movlb	0	; () banked
  2041  001382  23B3               	addwfc	(??_putSTRINGU1+1)& (0+255),f,b
  2042  001384  C0B2  FFF6         	movff	??_putSTRINGU1,tblptrl
  2043  001388  C0B3  FFF7         	movff	??_putSTRINGU1+1,tblptrh
  2044  00138C  6AF8               	clrf	tblptru,c
  2045  00138E  0E07               	movlw	(high __ramtop+-1)
  2046  001390  64F7               	cpfsgt	tblptrh,c
  2047  001392  D003               	bra	u1927
  2048  001394  0008               	tblrd		*
  2049  001396  50F5               	movf	tablat,w,c
  2050  001398  D005               	bra	u1920
  2051  00139A                     u1927:
  2052  00139A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2053  00139E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2054  0013A2  50EF               	movf	indf0,w,c
  2055  0013A4                     u1920:
  2056  0013A4  0900               	iorlw	0
  2057  0013A6  A4D8               	btfss	status,2,c
  2058  0013A8  C0B5  F0B4         	movff	putSTRINGU1@cont,putSTRINGU1@last
  2059  0013AC  0100               	movlb	0	; () banked
  2060  0013AE  2BB5               	incf	putSTRINGU1@cont& (0+255),f,b
  2061  0013B0                     l2444:
  2062                           
  2063                           ; BSR set to: 0
  2064  0013B0  0100               	movlb	0	; () banked
  2065  0013B2  51B5               	movf	putSTRINGU1@cont& (0+255),w,b
  2066  0013B4  0100               	movlb	0	; () banked
  2067  0013B6  6FB2               	movwf	??_putSTRINGU1& (0+255),b
  2068  0013B8  6BB3               	clrf	(??_putSTRINGU1+1)& (0+255),b
  2069  0013BA  0100               	movlb	0	; () banked
  2070  0013BC  51B0               	movf	putSTRINGU1@total& (0+255),w,b
  2071  0013BE  0100               	movlb	0	; () banked
  2072  0013C0  5DB2               	subwf	??_putSTRINGU1& (0+255),w,b
  2073  0013C2  0100               	movlb	0	; () banked
  2074  0013C4  51B1               	movf	(putSTRINGU1@total+1)& (0+255),w,b
  2075  0013C6  0100               	movlb	0	; () banked
  2076  0013C8  59B3               	subwfb	(??_putSTRINGU1+1)& (0+255),w,b
  2077  0013CA  A0D8               	btfss	status,0,c
  2078  0013CC  D7CC               	goto	l2438
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;UART1.c: 23: }
  2082                           ;UART1.c: 25: for (cont=0;cont<=last;cont++){
  2083                           
  2084                           ; BSR set to: 0
  2085  0013CE  0E00               	movlw	0
  2086  0013D0  0100               	movlb	0	; () banked
  2087  0013D2  6FB5               	movwf	putSTRINGU1@cont& (0+255),b
  2088  0013D4  D019               	goto	l2454
  2089  0013D6                     l2448:
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;UART1.c: 26: putcTxU1(*dato++);
  2093  0013D6  0100               	movlb	0	; () banked
  2094  0013D8  C0AE  FFF6         	movff	putSTRINGU1@dato,tblptrl
  2095  0013DC  0100               	movlb	0	; () banked
  2096  0013DE  C0AF  FFF7         	movff	putSTRINGU1@dato+1,tblptrh
  2097  0013E2  6AF8               	clrf	tblptru,c
  2098  0013E4  0E07               	movlw	(high __ramtop+-1)
  2099  0013E6  64F7               	cpfsgt	tblptrh,c
  2100  0013E8  D003               	bra	u1957
  2101  0013EA  0008               	tblrd		*
  2102  0013EC  50F5               	movf	tablat,w,c
  2103  0013EE  D005               	bra	u1950
  2104  0013F0                     u1957:
  2105  0013F0  CFF6 FFE9          	movff	tblptrl,fsr0l
  2106  0013F4  CFF7 FFEA          	movff	tblptrh,fsr0h
  2107  0013F8  50EF               	movf	indf0,w,c
  2108  0013FA                     u1950:
  2109  0013FA  EC05  F00F         	call	_putcTxU1
  2110  0013FE  0100               	movlb	0	; () banked
  2111  001400  4BAE               	infsnz	putSTRINGU1@dato& (0+255),f,b
  2112  001402  2BAF               	incf	(putSTRINGU1@dato+1)& (0+255),f,b
  2113                           
  2114                           ; BSR set to: 0
  2115  001404  0100               	movlb	0	; () banked
  2116  001406  2BB5               	incf	putSTRINGU1@cont& (0+255),f,b
  2117  001408                     l2454:
  2118                           
  2119                           ; BSR set to: 0
  2120  001408  0100               	movlb	0	; () banked
  2121  00140A  51B5               	movf	putSTRINGU1@cont& (0+255),w,b
  2122  00140C  0100               	movlb	0	; () banked
  2123  00140E  5DB4               	subwf	putSTRINGU1@last& (0+255),w,b
  2124  001410  A0D8               	btfss	status,0,c
  2125                           
  2126                           ; BSR set to: 0
  2127                           
  2128                           ; BSR set to: 0
  2129  001412  0012               	return	
  2130  001414  D7E0               	goto	l2448
  2131  001416                     __end_of_putSTRINGU1:
  2132                           	opt stack 0
  2133                           tblptru	equ	0xFF8
  2134                           tblptrh	equ	0xFF7
  2135                           tblptrl	equ	0xFF6
  2136                           tablat	equ	0xFF5
  2137                           prodh	equ	0xFF4
  2138                           prodl	equ	0xFF3
  2139                           intcon	equ	0xFF2
  2140                           indf0	equ	0xFEF
  2141                           postinc0	equ	0xFEE
  2142                           fsr0h	equ	0xFEA
  2143                           fsr0l	equ	0xFE9
  2144                           wreg	equ	0xFE8
  2145                           postinc1	equ	0xFE6
  2146                           postdec1	equ	0xFE5
  2147                           fsr1l	equ	0xFE1
  2148                           postinc2	equ	0xFDE
  2149                           status	equ	0xFD8
  2150                           
  2151 ;; *************** function _putcTxU1 *****************
  2152 ;; Defined at:
  2153 ;;		line 12 in file "UART1.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  character       1    wreg     unsigned char 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  character       1    1[BANK0 ] unsigned char 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;		None               void
  2160 ;; Registers used:
  2161 ;;		wreg, status,2, cstack
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2167 ;;      Params:         0       0       0       0       0       0       0       0       0
  2168 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2169 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2170 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2171 ;;Total ram usage:        1 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    6
  2174 ;; This function calls:
  2175 ;;		_WriteUSART
  2176 ;; This function is called by:
  2177 ;;		_putSTRINGU1
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text9
  2182  001E0A                     __ptext9:
  2183                           	opt stack 0
  2184  001E0A                     _putcTxU1:
  2185                           	opt stack 20
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;incstack = 0
  2189                           ;putcTxU1@character stored from wreg
  2190  001E0A  0100               	movlb	0	; () banked
  2191  001E0C  6FAD               	movwf	putcTxU1@character& (0+255),b
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;UART1.c: 14: WriteUSART(character);
  2195  001E0E  0100               	movlb	0	; () banked
  2196  001E10  51AD               	movf	putcTxU1@character& (0+255),w,b
  2197  001E12  ECF2  F00E         	call	_WriteUSART
  2198  001E16                     l223:
  2199  001E16  B2AC               	btfsc	4012,1,c	;volatile
  2200  001E18  0012               	return	
  2201  001E1A  D7FD               	goto	l223
  2202  001E1C                     __end_of_putcTxU1:
  2203                           	opt stack 0
  2204                           tblptru	equ	0xFF8
  2205                           tblptrh	equ	0xFF7
  2206                           tblptrl	equ	0xFF6
  2207                           tablat	equ	0xFF5
  2208                           prodh	equ	0xFF4
  2209                           prodl	equ	0xFF3
  2210                           intcon	equ	0xFF2
  2211                           indf0	equ	0xFEF
  2212                           postinc0	equ	0xFEE
  2213                           fsr0h	equ	0xFEA
  2214                           fsr0l	equ	0xFE9
  2215                           wreg	equ	0xFE8
  2216                           postinc1	equ	0xFE6
  2217                           postdec1	equ	0xFE5
  2218                           fsr1l	equ	0xFE1
  2219                           postinc2	equ	0xFDE
  2220                           status	equ	0xFD8
  2221                           
  2222 ;; *************** function _Pause_seg *****************
  2223 ;; Defined at:
  2224 ;;		line 18 in file "Retardos.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  x               1    wreg     unsigned char 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  x               1    5[BANK0 ] unsigned char 
  2229 ;;  i               1    6[BANK0 ] unsigned char 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;		None               void
  2232 ;; Registers used:
  2233 ;;		wreg, status,2, status,0, cstack
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2239 ;;      Params:         0       0       0       0       0       0       0       0       0
  2240 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2242 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2243 ;;Total ram usage:        2 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; Hardware stack levels required when called:    6
  2246 ;; This function calls:
  2247 ;;		_Pause_ms
  2248 ;; This function is called by:
  2249 ;;		_BT_Init
  2250 ;;		_Inicializa_Driveby
  2251 ;;		_EstadoBluetooth
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text10
  2256  001990                     __ptext10:
  2257                           	opt stack 0
  2258  001990                     _Pause_seg:
  2259                           	opt stack 23
  2260                           
  2261                           ;incstack = 0
  2262                           ;Pause_seg@x stored from wreg
  2263  001990  0100               	movlb	0	; () banked
  2264  001992  6FB1               	movwf	Pause_seg@x& (0+255),b
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;Retardos.c: 19: unsigned char i=0;
  2268  001994  0E00               	movlw	0
  2269  001996  0100               	movlb	0	; () banked
  2270  001998  6FB2               	movwf	Pause_seg@i& (0+255),b
  2271                           
  2272                           ;Retardos.c: 20: for(i=0;i<=x;i++){
  2273  00199A  0E00               	movlw	0
  2274  00199C  0100               	movlb	0	; () banked
  2275  00199E  6FB2               	movwf	Pause_seg@i& (0+255),b
  2276  0019A0  D022               	goto	l2620
  2277  0019A2                     l2616:
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;Retardos.c: 21: Pause_ms(250);Pause_ms(250);
  2281  0019A2  0E00               	movlw	0
  2282  0019A4  0100               	movlb	0	; () banked
  2283  0019A6  6FAD               	movwf	(Pause_ms@x+1)& (0+255),b
  2284  0019A8  0EFA               	movlw	250
  2285  0019AA  0100               	movlb	0	; () banked
  2286  0019AC  6FAC               	movwf	Pause_ms@x& (0+255),b
  2287  0019AE  ECA3  F00D         	call	_Pause_ms	;wreg free
  2288  0019B2  0E00               	movlw	0
  2289  0019B4  0100               	movlb	0	; () banked
  2290  0019B6  6FAD               	movwf	(Pause_ms@x+1)& (0+255),b
  2291  0019B8  0EFA               	movlw	250
  2292  0019BA  0100               	movlb	0	; () banked
  2293  0019BC  6FAC               	movwf	Pause_ms@x& (0+255),b
  2294  0019BE  ECA3  F00D         	call	_Pause_ms	;wreg free
  2295                           
  2296                           ;Retardos.c: 22: Pause_ms(250);Pause_ms(250);
  2297  0019C2  0E00               	movlw	0
  2298  0019C4  0100               	movlb	0	; () banked
  2299  0019C6  6FAD               	movwf	(Pause_ms@x+1)& (0+255),b
  2300  0019C8  0EFA               	movlw	250
  2301  0019CA  0100               	movlb	0	; () banked
  2302  0019CC  6FAC               	movwf	Pause_ms@x& (0+255),b
  2303  0019CE  ECA3  F00D         	call	_Pause_ms	;wreg free
  2304  0019D2  0E00               	movlw	0
  2305  0019D4  0100               	movlb	0	; () banked
  2306  0019D6  6FAD               	movwf	(Pause_ms@x+1)& (0+255),b
  2307  0019D8  0EFA               	movlw	250
  2308  0019DA  0100               	movlb	0	; () banked
  2309  0019DC  6FAC               	movwf	Pause_ms@x& (0+255),b
  2310  0019DE  ECA3  F00D         	call	_Pause_ms	;wreg free
  2311  0019E2  0100               	movlb	0	; () banked
  2312  0019E4  2BB2               	incf	Pause_seg@i& (0+255),f,b
  2313  0019E6                     l2620:
  2314                           
  2315                           ; BSR set to: 0
  2316  0019E6  0100               	movlb	0	; () banked
  2317  0019E8  51B2               	movf	Pause_seg@i& (0+255),w,b
  2318  0019EA  0100               	movlb	0	; () banked
  2319  0019EC  5DB1               	subwf	Pause_seg@x& (0+255),w,b
  2320  0019EE  A0D8               	btfss	status,0,c
  2321                           
  2322                           ; BSR set to: 0
  2323                           
  2324                           ; BSR set to: 0
  2325  0019F0  0012               	return	
  2326  0019F2  D7D7               	goto	l2616
  2327  0019F4                     __end_of_Pause_seg:
  2328                           	opt stack 0
  2329                           tblptru	equ	0xFF8
  2330                           tblptrh	equ	0xFF7
  2331                           tblptrl	equ	0xFF6
  2332                           tablat	equ	0xFF5
  2333                           prodh	equ	0xFF4
  2334                           prodl	equ	0xFF3
  2335                           intcon	equ	0xFF2
  2336                           indf0	equ	0xFEF
  2337                           postinc0	equ	0xFEE
  2338                           fsr0h	equ	0xFEA
  2339                           fsr0l	equ	0xFE9
  2340                           wreg	equ	0xFE8
  2341                           postinc1	equ	0xFE6
  2342                           postdec1	equ	0xFE5
  2343                           fsr1l	equ	0xFE1
  2344                           postinc2	equ	0xFDE
  2345                           status	equ	0xFD8
  2346                           
  2347 ;; *************** function _Pause_ms *****************
  2348 ;; Defined at:
  2349 ;;		line 11 in file "Retardos.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  x               2    0[BANK0 ] unsigned int 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  i               2    3[BANK0 ] unsigned int 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;		None               void
  2356 ;; Registers used:
  2357 ;;		wreg, status,2, status,0
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2363 ;;      Params:         0       2       0       0       0       0       0       0       0
  2364 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2365 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2366 ;;      Totals:         0       5       0       0       0       0       0       0       0
  2367 ;;Total ram usage:        5 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    5
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_Pause_seg
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text11
  2378  001B46                     __ptext11:
  2379                           	opt stack 0
  2380  001B46                     _Pause_ms:
  2381                           	opt stack 23
  2382                           
  2383                           ;Retardos.c: 12: unsigned int i=0;
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;incstack = 0
  2387  001B46  0E00               	movlw	0
  2388  001B48  0100               	movlb	0	; () banked
  2389  001B4A  6FB0               	movwf	(Pause_ms@i+1)& (0+255),b
  2390  001B4C  0E00               	movlw	0
  2391  001B4E  0100               	movlb	0	; () banked
  2392  001B50  6FAF               	movwf	Pause_ms@i& (0+255),b
  2393                           
  2394                           ;Retardos.c: 13: for(i=0;i<=x;i++){
  2395  001B52  0E00               	movlw	0
  2396  001B54  0100               	movlb	0	; () banked
  2397  001B56  6FB0               	movwf	(Pause_ms@i+1)& (0+255),b
  2398  001B58  0E00               	movlw	0
  2399  001B5A  0100               	movlb	0	; () banked
  2400  001B5C  6FAF               	movwf	Pause_ms@i& (0+255),b
  2401  001B5E  D00B               	goto	l202
  2402  001B60                     l2474:
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;Retardos.c: 14: _delay((unsigned long)((1)*(8000000/4000.0)));
  2406  001B60  0E03               	movlw	3
  2407  001B62  0100               	movlb	0	; () banked
  2408  001B64  6FAE               	movwf	??_Pause_ms& (0+255),b
  2409  001B66  0E98               	movlw	152
  2410  001B68                     u3367:
  2411  001B68  2EE8               	decfsz	wreg,f,c
  2412  001B6A  D7FE               	goto	u3367
  2413  001B6C  2FAE               	decfsz	??_Pause_ms& (0+255),f,b
  2414  001B6E  D7FC               	goto	u3367
  2415  001B70  0100               	movlb	0	; () banked
  2416  001B72  4BAF               	infsnz	Pause_ms@i& (0+255),f,b
  2417  001B74  2BB0               	incf	(Pause_ms@i+1)& (0+255),f,b
  2418  001B76                     l202:
  2419                           
  2420                           ; BSR set to: 0
  2421  001B76  0100               	movlb	0	; () banked
  2422  001B78  51AF               	movf	Pause_ms@i& (0+255),w,b
  2423  001B7A  0100               	movlb	0	; () banked
  2424  001B7C  5DAC               	subwf	Pause_ms@x& (0+255),w,b
  2425  001B7E  0100               	movlb	0	; () banked
  2426  001B80  51B0               	movf	(Pause_ms@i+1)& (0+255),w,b
  2427  001B82  0100               	movlb	0	; () banked
  2428  001B84  59AD               	subwfb	(Pause_ms@x+1)& (0+255),w,b
  2429  001B86  A0D8               	btfss	status,0,c
  2430                           
  2431                           ; BSR set to: 0
  2432                           
  2433                           ; BSR set to: 0
  2434  001B88  0012               	return	
  2435  001B8A  D7EA               	goto	l2474
  2436  001B8C                     __end_of_Pause_ms:
  2437                           	opt stack 0
  2438                           tblptru	equ	0xFF8
  2439                           tblptrh	equ	0xFF7
  2440                           tblptrl	equ	0xFF6
  2441                           tablat	equ	0xFF5
  2442                           prodh	equ	0xFF4
  2443                           prodl	equ	0xFF3
  2444                           intcon	equ	0xFF2
  2445                           indf0	equ	0xFEF
  2446                           postinc0	equ	0xFEE
  2447                           fsr0h	equ	0xFEA
  2448                           fsr0l	equ	0xFE9
  2449                           wreg	equ	0xFE8
  2450                           postinc1	equ	0xFE6
  2451                           postdec1	equ	0xFE5
  2452                           fsr1l	equ	0xFE1
  2453                           postinc2	equ	0xFDE
  2454                           status	equ	0xFD8
  2455                           
  2456 ;; *************** function _Comando_Tablet *****************
  2457 ;; Defined at:
  2458 ;;		line 126 in file "Funciones_Db.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;		None
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  sensed          2   54[BANK0 ] int 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;		None               void
  2465 ;; Registers used:
  2466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2472 ;;      Params:         0       0       0       0       0       0       0       0       0
  2473 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2475 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2476 ;;Total ram usage:        2 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:   10
  2479 ;; This function calls:
  2480 ;;		_PWM_DutyCycle1
  2481 ;;		_PWM_DutyCycle2
  2482 ;;		_clrBufferUSART
  2483 ;;		_getCNY70Value
  2484 ;;		_putcBluetoothInt
  2485 ;;		_putcBluetoothString
  2486 ;; This function is called by:
  2487 ;;		_main
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text12
  2492  001846                     __ptext12:
  2493                           	opt stack 0
  2494  001846                     _Comando_Tablet:
  2495                           	opt stack 20
  2496                           
  2497                           ;Funciones_Db.c: 128: int sensed=0;
  2498                           
  2499                           ; BSR set to: 0
  2500                           ;incstack = 0
  2501  001846  0E00               	movlw	0
  2502  001848  0100               	movlb	0	; () banked
  2503  00184A  6FE3               	movwf	(Comando_Tablet@sensed+1)& (0+255),b
  2504  00184C  0E00               	movlw	0
  2505  00184E  0100               	movlb	0	; () banked
  2506  001850  6FE2               	movwf	Comando_Tablet@sensed& (0+255),b
  2507                           
  2508                           ;Funciones_Db.c: 129: switch (BluetoothDato[1]) {
  2509  001852  D020               	goto	l3224
  2510  001854                     l3214:
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;Funciones_Db.c: 143: sensed = getCNY70Value();
  2514  001854  EC75  F006         	call	_getCNY70Value	;wreg free
  2515  001858  0100               	movlb	0	; () banked
  2516  00185A  C0DF  F0E2         	movff	?_getCNY70Value,Comando_Tablet@sensed
  2517  00185E  0100               	movlb	0	; () banked
  2518  001860  C0E0  F0E3         	movff	?_getCNY70Value+1,Comando_Tablet@sensed+1
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;Funciones_Db.c: 145: putcBluetoothInt(sensed);
  2522  001864  C0E2  F0CA         	movff	Comando_Tablet@sensed,putcBluetoothInt@a
  2523  001868  C0E3  F0CB         	movff	Comando_Tablet@sensed+1,putcBluetoothInt@a+1
  2524  00186C  ECE8  F00A         	call	_putcBluetoothInt	;wreg free
  2525                           
  2526                           ;Funciones_Db.c: 146: putcBluetoothString("\n");
  2527  001870  0E08               	movlw	high (STR_2+13)
  2528  001872  0100               	movlb	0	; () banked
  2529  001874  6FB4               	movwf	(putcBluetoothString@a+1)& (0+255),b
  2530  001876  0E18               	movlw	low (STR_2+13)
  2531  001878  0100               	movlb	0	; () banked
  2532  00187A  6FB3               	movwf	putcBluetoothString@a& (0+255),b
  2533  00187C  ECA4  F00A         	call	_putcBluetoothString	;wreg free
  2534                           
  2535                           ;Funciones_Db.c: 147: break;
  2536  001880  D01A               	goto	l3226
  2537  001882                     l3220:
  2538                           
  2539                           ;Funciones_Db.c: 153: PWM_DutyCycle1(BluetoothDato[3]);
  2540  001882  0100               	movlb	0	; () banked
  2541  001884  5168               	movf	(_BluetoothDato+3)& (0+255),w,b
  2542  001886  ECA9  F00B         	call	_PWM_DutyCycle1
  2543                           
  2544                           ;Funciones_Db.c: 154: PWM_DutyCycle2(BluetoothDato[4]);
  2545  00188A  0100               	movlb	0	; () banked
  2546  00188C  5169               	movf	(_BluetoothDato+4)& (0+255),w,b
  2547  00188E  EC6B  F00B         	call	_PWM_DutyCycle2
  2548                           
  2549                           ;Funciones_Db.c: 155: break;
  2550  001892  D011               	goto	l3226
  2551  001894                     l3224:
  2552  001894  0100               	movlb	0	; () banked
  2553  001896  5166               	movf	(_BluetoothDato+1)& (0+255),w,b
  2554                           
  2555                           ; Switch size 1, requested type "space"
  2556                           ; Number of cases is 5, Range of values is 1 to 5
  2557                           ; switch strategies available:
  2558                           ; Name         Instructions Cycles
  2559                           ; simple_byte           16     9 (average)
  2560                           ;	Chosen strategy is simple_byte
  2561  001898  0A01               	xorlw	1	; case 1
  2562  00189A  B4D8               	btfsc	status,2,c
  2563  00189C  D00C               	goto	l3226
  2564  00189E  0A03               	xorlw	3	; case 2
  2565  0018A0  B4D8               	btfsc	status,2,c
  2566  0018A2  D009               	goto	l3226
  2567  0018A4  0A01               	xorlw	1	; case 3
  2568  0018A6  B4D8               	btfsc	status,2,c
  2569  0018A8  D006               	goto	l3226
  2570  0018AA  0A07               	xorlw	7	; case 4
  2571  0018AC  B4D8               	btfsc	status,2,c
  2572  0018AE  D7D2               	goto	l3214
  2573  0018B0  0A01               	xorlw	1	; case 5
  2574  0018B2  B4D8               	btfsc	status,2,c
  2575  0018B4  D7E6               	goto	l3220
  2576  0018B6                     l3226:
  2577                           
  2578                           ;Funciones_Db.c: 160: clrBufferUSART();
  2579  0018B6  ECE8  F00D         	call	_clrBufferUSART	;wreg free
  2580                           
  2581                           ;Funciones_Db.c: 161: return;
  2582  0018BA  0012               	return	
  2583  0018BC                     __end_of_Comando_Tablet:
  2584                           	opt stack 0
  2585                           tblptru	equ	0xFF8
  2586                           tblptrh	equ	0xFF7
  2587                           tblptrl	equ	0xFF6
  2588                           tablat	equ	0xFF5
  2589                           prodh	equ	0xFF4
  2590                           prodl	equ	0xFF3
  2591                           intcon	equ	0xFF2
  2592                           indf0	equ	0xFEF
  2593                           postinc0	equ	0xFEE
  2594                           fsr0h	equ	0xFEA
  2595                           fsr0l	equ	0xFE9
  2596                           wreg	equ	0xFE8
  2597                           postinc1	equ	0xFE6
  2598                           postdec1	equ	0xFE5
  2599                           fsr1l	equ	0xFE1
  2600                           postinc2	equ	0xFDE
  2601                           status	equ	0xFD8
  2602                           
  2603 ;; *************** function _putcBluetoothString *****************
  2604 ;; Defined at:
  2605 ;;		line 90 in file "Bluetooth.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;  a               2    7[BANK0 ] PTR unsigned char 
  2608 ;;		 -> STR_10(2), 
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;  i               2   11[BANK0 ] int 
  2611 ;; Return value:  Size  Location     Type
  2612 ;;		None               void
  2613 ;; Registers used:
  2614 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2620 ;;      Params:         0       2       0       0       0       0       0       0       0
  2621 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2622 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2623 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2624 ;;Total ram usage:        6 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:    7
  2627 ;; This function calls:
  2628 ;;		_UART1_Init
  2629 ;;		_WriteUSART
  2630 ;; This function is called by:
  2631 ;;		_Comando_Tablet
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text13
  2636  001548                     __ptext13:
  2637                           	opt stack 0
  2638  001548                     _putcBluetoothString:
  2639                           	opt stack 22
  2640                           
  2641                           ;Bluetooth.c: 92: int i;
  2642                           ;Bluetooth.c: 93: UART1_Init(51);
  2643                           
  2644                           ;incstack = 0
  2645  001548  0E33               	movlw	51
  2646  00154A  ECB1  F00E         	call	_UART1_Init
  2647                           
  2648                           ;Bluetooth.c: 95: for (i = 0; a[i] != '\0'; i++){
  2649  00154E  0E00               	movlw	0
  2650  001550  0100               	movlb	0	; () banked
  2651  001552  6FB8               	movwf	(putcBluetoothString@i+1)& (0+255),b
  2652  001554  0E00               	movlw	0
  2653  001556  0100               	movlb	0	; () banked
  2654  001558  6FB7               	movwf	putcBluetoothString@i& (0+255),b
  2655  00155A  D01C               	goto	l2894
  2656  00155C                     l2890:
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;Bluetooth.c: 96: WriteUSART(a[i]);
  2660  00155C  0100               	movlb	0	; () banked
  2661  00155E  C0B3  F0B5         	movff	putcBluetoothString@a,??_putcBluetoothString
  2662  001562  0100               	movlb	0	; () banked
  2663  001564  C0B4  F0B6         	movff	putcBluetoothString@a+1,??_putcBluetoothString+1
  2664  001568  0100               	movlb	0	; () banked
  2665  00156A  51B7               	movf	putcBluetoothString@i& (0+255),w,b
  2666  00156C  0100               	movlb	0	; () banked
  2667  00156E  27B5               	addwf	??_putcBluetoothString& (0+255),f,b
  2668  001570  0100               	movlb	0	; () banked
  2669  001572  51B8               	movf	(putcBluetoothString@i+1)& (0+255),w,b
  2670  001574  0100               	movlb	0	; () banked
  2671  001576  23B6               	addwfc	(??_putcBluetoothString+1)& (0+255),f,b
  2672  001578  C0B5  FFF6         	movff	??_putcBluetoothString,tblptrl
  2673  00157C  C0B6  FFF7         	movff	??_putcBluetoothString+1,tblptrh
  2674  001580                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2675  001580  6AF8               	clrf	tblptru,c
  2676  001582                     	endif
  2677  001582                     	if	0	;tblptru may be non-zero
  2678  001582                     	endif
  2679  001582  0008               	tblrd		*
  2680  001584  50F5               	movf	tablat,w,c
  2681  001586  ECF2  F00E         	call	_WriteUSART
  2682  00158A                     l59:
  2683  00158A  A2AC               	btfss	4012,1,c	;volatile
  2684  00158C  D7FE               	goto	l59
  2685  00158E  0100               	movlb	0	; () banked
  2686  001590  4BB7               	infsnz	putcBluetoothString@i& (0+255),f,b
  2687  001592  2BB8               	incf	(putcBluetoothString@i+1)& (0+255),f,b
  2688  001594                     l2894:
  2689                           
  2690                           ; BSR set to: 0
  2691  001594  0100               	movlb	0	; () banked
  2692  001596  C0B3  F0B5         	movff	putcBluetoothString@a,??_putcBluetoothString
  2693  00159A  0100               	movlb	0	; () banked
  2694  00159C  C0B4  F0B6         	movff	putcBluetoothString@a+1,??_putcBluetoothString+1
  2695  0015A0  0100               	movlb	0	; () banked
  2696  0015A2  51B7               	movf	putcBluetoothString@i& (0+255),w,b
  2697  0015A4  0100               	movlb	0	; () banked
  2698  0015A6  27B5               	addwf	??_putcBluetoothString& (0+255),f,b
  2699  0015A8  0100               	movlb	0	; () banked
  2700  0015AA  51B8               	movf	(putcBluetoothString@i+1)& (0+255),w,b
  2701  0015AC  0100               	movlb	0	; () banked
  2702  0015AE  23B6               	addwfc	(??_putcBluetoothString+1)& (0+255),f,b
  2703  0015B0  C0B5  FFF6         	movff	??_putcBluetoothString,tblptrl
  2704  0015B4  C0B6  FFF7         	movff	??_putcBluetoothString+1,tblptrh
  2705  0015B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2706  0015B8  6AF8               	clrf	tblptru,c
  2707  0015BA                     	endif
  2708  0015BA                     	if	0	;tblptru may be non-zero
  2709  0015BA                     	endif
  2710  0015BA  0008               	tblrd		*
  2711  0015BC  50F5               	movf	tablat,w,c
  2712  0015BE  0900               	iorlw	0
  2713  0015C0  A4D8               	btfss	status,2,c
  2714  0015C2  D7CC               	goto	l2890
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;Bluetooth.c: 98: }
  2718                           ;Bluetooth.c: 99: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  2719                           
  2720                           ; BSR set to: 0
  2721  0015C4  0E4F               	movlw	79
  2722  0015C6  16AB               	andwf	4011,f,c	;volatile
  2723                           
  2724                           ; BSR set to: 0
  2725  0015C8  9AAC               	bcf	4012,5,c	;volatile
  2726  0015CA  0ECF               	movlw	207
  2727  0015CC  169D               	andwf	3997,f,c	;volatile
  2728                           
  2729                           ; BSR set to: 0
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;Bluetooth.c: 100: return;
  2733  0015CE  0012               	return	
  2734  0015D0                     __end_of_putcBluetoothString:
  2735                           	opt stack 0
  2736                           tblptru	equ	0xFF8
  2737                           tblptrh	equ	0xFF7
  2738                           tblptrl	equ	0xFF6
  2739                           tablat	equ	0xFF5
  2740                           prodh	equ	0xFF4
  2741                           prodl	equ	0xFF3
  2742                           intcon	equ	0xFF2
  2743                           indf0	equ	0xFEF
  2744                           postinc0	equ	0xFEE
  2745                           fsr0h	equ	0xFEA
  2746                           fsr0l	equ	0xFE9
  2747                           wreg	equ	0xFE8
  2748                           postinc1	equ	0xFE6
  2749                           postdec1	equ	0xFE5
  2750                           fsr1l	equ	0xFE1
  2751                           postinc2	equ	0xFDE
  2752                           status	equ	0xFD8
  2753                           
  2754 ;; *************** function _putcBluetoothInt *****************
  2755 ;; Defined at:
  2756 ;;		line 102 in file "Bluetooth.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  a               2   30[BANK0 ] int 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  s              20   32[BANK0 ] unsigned char [20]
  2761 ;;  i               2   52[BANK0 ] int 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;		None               void
  2764 ;; Registers used:
  2765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2771 ;;      Params:         0       2       0       0       0       0       0       0       0
  2772 ;;      Locals:         0      22       0       0       0       0       0       0       0
  2773 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2774 ;;      Totals:         0      24       0       0       0       0       0       0       0
  2775 ;;Total ram usage:       24 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:    7
  2778 ;; This function calls:
  2779 ;;		_UART1_Init
  2780 ;;		_WriteUSART
  2781 ;;		_sprintf
  2782 ;; This function is called by:
  2783 ;;		_Comando_Tablet
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text14
  2788  0015D0                     __ptext14:
  2789                           	opt stack 0
  2790  0015D0                     _putcBluetoothInt:
  2791                           	opt stack 22
  2792                           
  2793                           ;Bluetooth.c: 104: int i;
  2794                           ;Bluetooth.c: 105: unsigned char s[20];
  2795                           ;Bluetooth.c: 106: UART1_Init(51);
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;incstack = 0
  2799  0015D0  0E33               	movlw	51
  2800  0015D2  ECB1  F00E         	call	_UART1_Init
  2801                           
  2802                           ;Bluetooth.c: 108: sprintf(s,"%d",a);
  2803  0015D6  0100               	movlb	0	; () banked
  2804  0015D8  0E00               	movlw	high putcBluetoothInt@s
  2805  0015DA  0100               	movlb	0	; () banked
  2806  0015DC  6FB9               	movwf	(sprintf@sp+1)& (0+255),b
  2807  0015DE  0100               	movlb	0	; () banked
  2808  0015E0  0ECC               	movlw	low putcBluetoothInt@s
  2809  0015E2  0100               	movlb	0	; () banked
  2810  0015E4  6FB8               	movwf	sprintf@sp& (0+255),b
  2811  0015E6  0E08               	movlw	high STR_5
  2812  0015E8  0100               	movlb	0	; () banked
  2813  0015EA  6FBB               	movwf	(sprintf@f+1)& (0+255),b
  2814  0015EC  0E67               	movlw	low STR_5
  2815  0015EE  0100               	movlb	0	; () banked
  2816  0015F0  6FBA               	movwf	sprintf@f& (0+255),b
  2817  0015F2  C0CA  F0BC         	movff	putcBluetoothInt@a,?_sprintf+4
  2818  0015F6  C0CB  F0BD         	movff	putcBluetoothInt@a+1,?_sprintf+5
  2819  0015FA  EC36  F004         	call	_sprintf	;wreg free
  2820                           
  2821                           ;Bluetooth.c: 109: for (i = 0; s[i] != '\0'; i++){
  2822  0015FE  0E00               	movlw	0
  2823  001600  0100               	movlb	0	; () banked
  2824  001602  6FE1               	movwf	(putcBluetoothInt@i+1)& (0+255),b
  2825  001604  0E00               	movlw	0
  2826  001606  0100               	movlb	0	; () banked
  2827  001608  6FE0               	movwf	putcBluetoothInt@i& (0+255),b
  2828  00160A  D012               	goto	l2912
  2829  00160C                     l2908:
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;Bluetooth.c: 110: WriteUSART(s[i]);
  2833  00160C  0100               	movlb	0	; () banked
  2834  00160E  0ECC               	movlw	low putcBluetoothInt@s
  2835  001610  0100               	movlb	0	; () banked
  2836  001612  25E0               	addwf	putcBluetoothInt@i& (0+255),w,b
  2837  001614  6ED9               	movwf	fsr2l,c
  2838  001616  0100               	movlb	0	; () banked
  2839  001618  0E00               	movlw	high putcBluetoothInt@s
  2840  00161A  0100               	movlb	0	; () banked
  2841  00161C  21E1               	addwfc	(putcBluetoothInt@i+1)& (0+255),w,b
  2842  00161E  6EDA               	movwf	fsr2h,c
  2843  001620  50DF               	movf	indf2,w,c
  2844  001622  ECF2  F00E         	call	_WriteUSART
  2845  001626                     l68:
  2846  001626  A2AC               	btfss	4012,1,c	;volatile
  2847  001628  D7FE               	goto	l68
  2848  00162A  0100               	movlb	0	; () banked
  2849  00162C  4BE0               	infsnz	putcBluetoothInt@i& (0+255),f,b
  2850  00162E  2BE1               	incf	(putcBluetoothInt@i+1)& (0+255),f,b
  2851  001630                     l2912:
  2852                           
  2853                           ; BSR set to: 0
  2854  001630  0100               	movlb	0	; () banked
  2855  001632  0ECC               	movlw	low putcBluetoothInt@s
  2856  001634  0100               	movlb	0	; () banked
  2857  001636  25E0               	addwf	putcBluetoothInt@i& (0+255),w,b
  2858  001638  6ED9               	movwf	fsr2l,c
  2859  00163A  0100               	movlb	0	; () banked
  2860  00163C  0E00               	movlw	high putcBluetoothInt@s
  2861  00163E  0100               	movlb	0	; () banked
  2862  001640  21E1               	addwfc	(putcBluetoothInt@i+1)& (0+255),w,b
  2863  001642  6EDA               	movwf	fsr2h,c
  2864  001644  50DF               	movf	indf2,w,c
  2865  001646  A4D8               	btfss	status,2,c
  2866  001648  D7E1               	goto	l2908
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;Bluetooth.c: 112: }
  2870                           ;Bluetooth.c: 113: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  2871                           
  2872                           ; BSR set to: 0
  2873  00164A  0E4F               	movlw	79
  2874  00164C  16AB               	andwf	4011,f,c	;volatile
  2875                           
  2876                           ; BSR set to: 0
  2877  00164E  9AAC               	bcf	4012,5,c	;volatile
  2878  001650  0ECF               	movlw	207
  2879  001652  169D               	andwf	3997,f,c	;volatile
  2880                           
  2881                           ; BSR set to: 0
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;Bluetooth.c: 114: return;
  2885  001654  0012               	return	
  2886  001656                     __end_of_putcBluetoothInt:
  2887                           	opt stack 0
  2888                           tblptru	equ	0xFF8
  2889                           tblptrh	equ	0xFF7
  2890                           tblptrl	equ	0xFF6
  2891                           tablat	equ	0xFF5
  2892                           prodh	equ	0xFF4
  2893                           prodl	equ	0xFF3
  2894                           intcon	equ	0xFF2
  2895                           indf0	equ	0xFEF
  2896                           postinc0	equ	0xFEE
  2897                           fsr0h	equ	0xFEA
  2898                           fsr0l	equ	0xFE9
  2899                           wreg	equ	0xFE8
  2900                           postinc1	equ	0xFE6
  2901                           postdec1	equ	0xFE5
  2902                           fsr1l	equ	0xFE1
  2903                           indf2	equ	0xFDF
  2904                           postinc2	equ	0xFDE
  2905                           fsr2h	equ	0xFDA
  2906                           fsr2l	equ	0xFD9
  2907                           status	equ	0xFD8
  2908                           
  2909 ;; *************** function _sprintf *****************
  2910 ;; Defined at:
  2911 ;;		line 492 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  2914 ;;		 -> putcBluetoothInt@s(20), 
  2915 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  2916 ;;		 -> STR_5(3), 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  _val            5   24[BANK0 ] struct .
  2919 ;;  ap              2   20[BANK0 ] PTR void [1]
  2920 ;;		 -> ?_sprintf(2), 
  2921 ;;  c               1   29[BANK0 ] char 
  2922 ;;  prec            1   23[BANK0 ] char 
  2923 ;;  flag            1   22[BANK0 ] unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  2   12[BANK0 ] int 
  2926 ;; Registers used:
  2927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2933 ;;      Params:         0       6       0       0       0       0       0       0       0
  2934 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2935 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2936 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2937 ;;Total ram usage:       18 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    6
  2940 ;; This function calls:
  2941 ;;		___lwdiv
  2942 ;;		___lwmod
  2943 ;; This function is called by:
  2944 ;;		_putcBluetoothInt
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text15
  2949  00086C                     __ptext15:
  2950                           	opt stack 0
  2951  00086C                     _sprintf:
  2952                           	opt stack 22
  2953                           
  2954                           ;doprnt.c: 494: va_list ap;
  2955                           ;doprnt.c: 499: signed char c;
  2956                           ;doprnt.c: 506: signed char prec;
  2957                           ;doprnt.c: 508: unsigned char flag;
  2958                           ;doprnt.c: 527: union {
  2959                           ;doprnt.c: 528: unsigned int _val;
  2960                           ;doprnt.c: 529: struct {
  2961                           ;doprnt.c: 530: const char * _cp;
  2962                           ;doprnt.c: 531: unsigned _len;
  2963                           ;doprnt.c: 532: } _str;
  2964                           ;doprnt.c: 533: } _val;
  2965                           ;doprnt.c: 542: *ap = __va_start();
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;incstack = 0
  2969  00086C  0100               	movlb	0	; () banked
  2970  00086E  0E00               	movlw	high (?_sprintf+4)
  2971  000870  0100               	movlb	0	; () banked
  2972  000872  6FC1               	movwf	(sprintf@ap+1)& (0+255),b
  2973  000874  0100               	movlb	0	; () banked
  2974  000876  0EBC               	movlw	low (?_sprintf+4)
  2975  000878  0100               	movlb	0	; () banked
  2976  00087A  6FC0               	movwf	sprintf@ap& (0+255),b
  2977                           
  2978                           ;doprnt.c: 545: while(c = *f++) {
  2979  00087C  D0C7               	goto	l2680
  2980  00087E                     l2628:
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;doprnt.c: 547: if(c != '%')
  2984  00087E  0100               	movlb	0	; () banked
  2985  000880  51C9               	movf	sprintf@c& (0+255),w,b
  2986  000882  0A25               	xorlw	37
  2987  000884  B4D8               	btfsc	status,2,c
  2988  000886  D00B               	goto	l2634
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;doprnt.c: 549: {
  2992                           ;doprnt.c: 550: ((*sp++ = (c)));
  2993  000888  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  2994  00088C  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  2995  000890  0100               	movlb	0	; () banked
  2996  000892  C0C9  FFDF         	movff	sprintf@c,indf2
  2997                           
  2998                           ; BSR set to: 0
  2999  000896  0100               	movlb	0	; () banked
  3000  000898  4BB8               	infsnz	sprintf@sp& (0+255),f,b
  3001  00089A  2BB9               	incf	(sprintf@sp+1)& (0+255),f,b
  3002                           
  3003                           ;doprnt.c: 551: continue;
  3004  00089C  D0B7               	goto	l2680
  3005  00089E                     l2634:
  3006                           
  3007                           ; BSR set to: 0
  3008                           ;doprnt.c: 552: }
  3009                           ;doprnt.c: 557: flag = 0;
  3010  00089E  0E00               	movlw	0
  3011  0008A0  0100               	movlb	0	; () banked
  3012  0008A2  6FC2               	movwf	sprintf@flag& (0+255),b
  3013                           
  3014                           ; BSR set to: 0
  3015                           
  3016                           ; BSR set to: 0
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;doprnt.c: 831: }
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;doprnt.c: 822: continue;
  3023                           
  3024                           ;doprnt.c: 811: default:
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;doprnt.c: 707: case 'i':
  3028                           ;doprnt.c: 708: break;
  3029                           
  3030                           ; BSR set to: 0
  3031                           
  3032                           ;doprnt.c: 706: case 'd':
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;doprnt.c: 647: goto alldone;
  3036                           
  3037                           ;doprnt.c: 646: case 0:
  3038                           
  3039                           ;doprnt.c: 644: switch(c = *f++) {
  3040  0008A4  0100               	movlb	0	; () banked
  3041  0008A6  C0BA  FFF6         	movff	sprintf@f,tblptrl
  3042  0008AA  0100               	movlb	0	; () banked
  3043  0008AC  C0BB  FFF7         	movff	sprintf@f+1,tblptrh
  3044  0008B0  0100               	movlb	0	; () banked
  3045  0008B2  4BBA               	infsnz	sprintf@f& (0+255),f,b
  3046  0008B4  2BBB               	incf	(sprintf@f+1)& (0+255),f,b
  3047  0008B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3048  0008B6  6AF8               	clrf	tblptru,c
  3049  0008B8                     	endif
  3050  0008B8                     	if	0	;tblptru may be non-zero
  3051  0008B8                     	endif
  3052  0008B8  0008               	tblrd		*
  3053  0008BA  0100               	movlb	0	; () banked
  3054  0008BC  CFF5 F0C9          	movff	tablat,sprintf@c
  3055  0008C0  0100               	movlb	0	; () banked
  3056  0008C2  51C9               	movf	sprintf@c& (0+255),w,b
  3057                           
  3058                           ; Switch size 1, requested type "space"
  3059                           ; Number of cases is 3, Range of values is 0 to 105
  3060                           ; switch strategies available:
  3061                           ; Name         Instructions Cycles
  3062                           ; simple_byte           10     6 (average)
  3063                           ;	Chosen strategy is simple_byte
  3064  0008C4  0A00               	xorlw	0	; case 0
  3065  0008C6  B4D8               	btfsc	status,2,c
  3066  0008C8  D0B2               	goto	l2682
  3067  0008CA  0A64               	xorlw	100	; case 100
  3068  0008CC  B4D8               	btfsc	status,2,c
  3069  0008CE  D003               	goto	l2640
  3070  0008D0  0A0D               	xorlw	13	; case 105
  3071  0008D2  A4D8               	btfss	status,2,c
  3072  0008D4  D09B               	goto	l2680
  3073  0008D6                     l2640:
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;doprnt.c: 1262: {
  3077                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3078  0008D6  C0C0  FFD9         	movff	sprintf@ap,fsr2l
  3079  0008DA  C0C1  FFDA         	movff	sprintf@ap+1,fsr2h
  3080  0008DE  0100               	movlb	0	; () banked
  3081  0008E0  CFDE F0C4          	movff	postinc2,sprintf@_val
  3082  0008E4  0100               	movlb	0	; () banked
  3083  0008E6  CFDD F0C5          	movff	postdec2,sprintf@_val+1
  3084                           
  3085                           ; BSR set to: 0
  3086  0008EA  0E02               	movlw	2
  3087  0008EC  0100               	movlb	0	; () banked
  3088  0008EE  27C0               	addwf	sprintf@ap& (0+255),f,b
  3089  0008F0  0E00               	movlw	0
  3090  0008F2  0100               	movlb	0	; () banked
  3091  0008F4  23C1               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  3095  0008F6  0100               	movlb	0	; () banked
  3096  0008F8  51C5               	movf	(sprintf@_val+1)& (0+255),w,b
  3097  0008FA  0A80               	xorlw	128
  3098  0008FC  6EF3               	movwf	prodl,c
  3099  0008FE  0E80               	movlw	128
  3100  000900  5CF3               	subwf	prodl,w,c
  3101  000902  0E00               	movlw	0
  3102  000904  B4D8               	btfsc	status,2,c
  3103  000906  5DC4               	subwf	sprintf@_val& (0+255),w,b
  3104  000908  B0D8               	btfsc	status,0,c
  3105  00090A  D009               	goto	l2650
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;doprnt.c: 1271: flag |= 0x03;
  3109  00090C  0E03               	movlw	3
  3110  00090E  0100               	movlb	0	; () banked
  3111  000910  13C2               	iorwf	sprintf@flag& (0+255),f,b
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;doprnt.c: 1272: _val._val = -_val._val;
  3115  000912  0100               	movlb	0	; () banked
  3116  000914  6DC4               	negf	sprintf@_val& (0+255),b
  3117  000916  0100               	movlb	0	; () banked
  3118  000918  1FC5               	comf	(sprintf@_val+1)& (0+255),f,b
  3119  00091A  B0D8               	btfsc	status,0,c
  3120  00091C  2BC5               	incf	(sprintf@_val+1)& (0+255),f,b
  3121  00091E                     l2650:
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;doprnt.c: 1273: }
  3125                           ;doprnt.c: 1275: }
  3126                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3127  00091E  0E01               	movlw	1
  3128  000920  0100               	movlb	0	; () banked
  3129  000922  6FC9               	movwf	sprintf@c& (0+255),b
  3130  000924                     
  3131                           ; BSR set to: 0
  3132  000924  0100               	movlb	0	; () banked
  3133  000926  51C9               	movf	sprintf@c& (0+255),w,b
  3134  000928  0A05               	xorlw	5
  3135  00092A  B4D8               	btfsc	status,2,c
  3136  00092C  D01F               	goto	l2664
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  3140                           
  3141                           ; BSR set to: 0
  3142                           
  3143                           ; BSR set to: 0
  3144  00092E  0100               	movlb	0	; () banked
  3145  000930  51C9               	movf	sprintf@c& (0+255),w,b
  3146  000932  0D02               	mullw	2
  3147  000934  0E01               	movlw	low _dpowers
  3148  000936  24F3               	addwf	prodl,w,c
  3149  000938  6EF6               	movwf	tblptrl,c
  3150  00093A  0E08               	movlw	high _dpowers
  3151  00093C  20F4               	addwfc	prodh,w,c
  3152  00093E  6EF7               	movwf	tblptrh,c
  3153  000940                     	if	1	;There are 3 active tblptr bytes
  3154  000940  6AF8               	clrf	tblptru,c
  3155  000942  0E00               	movlw	low (__mediumconst shr (0+16))
  3156  000944  22F8               	addwfc	tblptru,f,c
  3157  000946                     	endif
  3158  000946  0009               	tblrd		*+
  3159  000948  CFF5 F0BE          	movff	tablat,??_sprintf
  3160  00094C  0009               	tblrd		*+
  3161  00094E  CFF5 F0BF          	movff	tablat,??_sprintf+1
  3162  000952  0100               	movlb	0	; () banked
  3163  000954  51BE               	movf	??_sprintf& (0+255),w,b
  3164  000956  0100               	movlb	0	; () banked
  3165  000958  5DC4               	subwf	sprintf@_val& (0+255),w,b
  3166  00095A  0100               	movlb	0	; () banked
  3167  00095C  51BF               	movf	(??_sprintf+1)& (0+255),w,b
  3168  00095E  0100               	movlb	0	; () banked
  3169  000960  59C5               	subwfb	(sprintf@_val+1)& (0+255),w,b
  3170  000962  A0D8               	btfss	status,0,c
  3171  000964  D003               	goto	l2664
  3172                           
  3173                           ; BSR set to: 0
  3174                           
  3175                           ; BSR set to: 0
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;doprnt.c: 1316: break;
  3179  000966  0100               	movlb	0	; () banked
  3180  000968  2BC9               	incf	sprintf@c& (0+255),f,b
  3181  00096A  D7DC               	goto	L2
  3182  00096C                     l2664:
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;doprnt.c: 1431: {
  3186                           ;doprnt.c: 1447: if(flag & 0x03)
  3187  00096C  C0C2  F0BE         	movff	sprintf@flag,??_sprintf
  3188  000970  0E03               	movlw	3
  3189  000972  0100               	movlb	0	; () banked
  3190  000974  17BE               	andwf	??_sprintf& (0+255),f,b
  3191  000976  B4D8               	btfsc	status,2,c
  3192  000978  D009               	goto	l2670
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  3196  00097A  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  3197  00097E  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  3198  000982  0E2D               	movlw	45
  3199  000984  6EDF               	movwf	indf2,c
  3200                           
  3201                           ; BSR set to: 0
  3202  000986  0100               	movlb	0	; () banked
  3203  000988  4BB8               	infsnz	sprintf@sp& (0+255),f,b
  3204  00098A  2BB9               	incf	(sprintf@sp+1)& (0+255),f,b
  3205  00098C                     l2670:
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;doprnt.c: 1478: }
  3209                           ;doprnt.c: 1481: prec = c;
  3210  00098C  C0C9  F0C3         	movff	sprintf@c,sprintf@prec
  3211                           
  3212                           ;doprnt.c: 1483: while(prec--) {
  3213  000990  D037               	goto	l2678
  3214  000992                     l2672:
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;doprnt.c: 1487: {
  3218                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  3219  000992  0100               	movlb	0	; () banked
  3220  000994  51C3               	movf	sprintf@prec& (0+255),w,b
  3221  000996  0D02               	mullw	2
  3222  000998  0E01               	movlw	low _dpowers
  3223  00099A  24F3               	addwf	prodl,w,c
  3224  00099C  6EF6               	movwf	tblptrl,c
  3225  00099E  0E08               	movlw	high _dpowers
  3226  0009A0  20F4               	addwfc	prodh,w,c
  3227  0009A2  6EF7               	movwf	tblptrh,c
  3228  0009A4                     	if	1	;There are 3 active tblptr bytes
  3229  0009A4  6AF8               	clrf	tblptru,c
  3230  0009A6  0E00               	movlw	low (__mediumconst shr (0+16))
  3231  0009A8  22F8               	addwfc	tblptru,f,c
  3232  0009AA                     	endif
  3233  0009AA  0009               	tblrd		*+
  3234  0009AC  0100               	movlb	0	; () banked
  3235  0009AE  CFF5 F0AE          	movff	tablat,___lwdiv@divisor
  3236  0009B2  000A               	tblrd		*-
  3237  0009B4  0100               	movlb	0	; () banked
  3238  0009B6  CFF5 F0AF          	movff	tablat,___lwdiv@divisor+1
  3239  0009BA  C0C4  F0AC         	movff	sprintf@_val,___lwdiv@dividend
  3240  0009BE  C0C5  F0AD         	movff	sprintf@_val+1,___lwdiv@dividend+1
  3241  0009C2  ECE7  F00B         	call	___lwdiv	;wreg free
  3242  0009C6  0100               	movlb	0	; () banked
  3243  0009C8  C0AC  F0B3         	movff	?___lwdiv,___lwmod@dividend
  3244  0009CC  0100               	movlb	0	; () banked
  3245  0009CE  C0AD  F0B4         	movff	?___lwdiv+1,___lwmod@dividend+1
  3246  0009D2  0E00               	movlw	0
  3247  0009D4  0100               	movlb	0	; () banked
  3248  0009D6  6FB6               	movwf	(___lwmod@divisor+1)& (0+255),b
  3249  0009D8  0E0A               	movlw	10
  3250  0009DA  0100               	movlb	0	; () banked
  3251  0009DC  6FB5               	movwf	___lwmod@divisor& (0+255),b
  3252  0009DE  EC2B  F00D         	call	___lwmod	;wreg free
  3253  0009E2  0100               	movlb	0	; () banked
  3254  0009E4  51B3               	movf	?___lwmod& (0+255),w,b
  3255  0009E6  0F30               	addlw	48
  3256  0009E8  0100               	movlb	0	; () banked
  3257  0009EA  6FC9               	movwf	sprintf@c& (0+255),b
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;doprnt.c: 1532: }
  3261                           ;doprnt.c: 1533: ((*sp++ = (c)));
  3262  0009EC  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  3263  0009F0  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  3264  0009F4  0100               	movlb	0	; () banked
  3265  0009F6  C0C9  FFDF         	movff	sprintf@c,indf2
  3266                           
  3267                           ; BSR set to: 0
  3268  0009FA  0100               	movlb	0	; () banked
  3269  0009FC  4BB8               	infsnz	sprintf@sp& (0+255),f,b
  3270  0009FE  2BB9               	incf	(sprintf@sp+1)& (0+255),f,b
  3271  000A00                     l2678:
  3272                           
  3273                           ; BSR set to: 0
  3274  000A00  0100               	movlb	0	; () banked
  3275  000A02  07C3               	decf	sprintf@prec& (0+255),f,b
  3276  000A04  0100               	movlb	0	; () banked
  3277  000A06  29C3               	incf	sprintf@prec& (0+255),w,b
  3278  000A08  A4D8               	btfss	status,2,c
  3279  000A0A  D7C3               	goto	l2672
  3280  000A0C                     l2680:
  3281                           
  3282                           ; BSR set to: 0
  3283  000A0C  0100               	movlb	0	; () banked
  3284  000A0E  C0BA  FFF6         	movff	sprintf@f,tblptrl
  3285  000A12  0100               	movlb	0	; () banked
  3286  000A14  C0BB  FFF7         	movff	sprintf@f+1,tblptrh
  3287  000A18  0100               	movlb	0	; () banked
  3288  000A1A  4BBA               	infsnz	sprintf@f& (0+255),f,b
  3289  000A1C  2BBB               	incf	(sprintf@f+1)& (0+255),f,b
  3290  000A1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3291  000A1E  6AF8               	clrf	tblptru,c
  3292  000A20                     	endif
  3293  000A20                     	if	0	;tblptru may be non-zero
  3294  000A20                     	endif
  3295  000A20  0008               	tblrd		*
  3296  000A22  0100               	movlb	0	; () banked
  3297  000A24  CFF5 F0C9          	movff	tablat,sprintf@c
  3298  000A28  0100               	movlb	0	; () banked
  3299  000A2A  67C9               	tstfsz	sprintf@c& (0+255),b
  3300  000A2C  D728               	goto	l2628
  3301  000A2E                     l2682:
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;doprnt.c: 1547: *sp = 0;
  3305  000A2E  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  3306  000A32  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  3307  000A36  0E00               	movlw	0
  3308  000A38  6EDF               	movwf	indf2,c
  3309                           
  3310                           ; BSR set to: 0
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;doprnt.c: 1549: return 0;
  3314                           ;	Return value of _sprintf is never used
  3315  000A3A  0012               	return	
  3316  000A3C                     __end_of_sprintf:
  3317                           	opt stack 0
  3318                           tblptru	equ	0xFF8
  3319                           tblptrh	equ	0xFF7
  3320                           tblptrl	equ	0xFF6
  3321                           tablat	equ	0xFF5
  3322                           prodh	equ	0xFF4
  3323                           prodl	equ	0xFF3
  3324                           intcon	equ	0xFF2
  3325                           indf0	equ	0xFEF
  3326                           postinc0	equ	0xFEE
  3327                           fsr0h	equ	0xFEA
  3328                           fsr0l	equ	0xFE9
  3329                           wreg	equ	0xFE8
  3330                           postinc1	equ	0xFE6
  3331                           postdec1	equ	0xFE5
  3332                           fsr1l	equ	0xFE1
  3333                           indf2	equ	0xFDF
  3334                           postinc2	equ	0xFDE
  3335                           postdec2	equ	0xFDD
  3336                           fsr2h	equ	0xFDA
  3337                           fsr2l	equ	0xFD9
  3338                           status	equ	0xFD8
  3339                           
  3340 ;; *************** function ___lwmod *****************
  3341 ;; Defined at:
  3342 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwmod.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  dividend        2    7[BANK0 ] unsigned int 
  3345 ;;  divisor         2    9[BANK0 ] unsigned int 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  counter         1   11[BANK0 ] unsigned char 
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  2    7[BANK0 ] unsigned int 
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3357 ;;      Params:         0       4       0       0       0       0       0       0       0
  3358 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3360 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3361 ;;Total ram usage:        5 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    5
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_sprintf
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text16
  3372  001A56                     __ptext16:
  3373                           	opt stack 0
  3374  001A56                     ___lwmod:
  3375                           	opt stack 22
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;incstack = 0
  3379  001A56  0100               	movlb	0	; () banked
  3380  001A58  51B6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3381  001A5A  11B5               	iorwf	___lwmod@divisor& (0+255),w,b
  3382  001A5C  B4D8               	btfsc	status,2,c
  3383  001A5E  D026               	goto	l1111
  3384                           
  3385                           ; BSR set to: 0
  3386  001A60  0E01               	movlw	1
  3387  001A62  0100               	movlb	0	; () banked
  3388  001A64  6FB7               	movwf	___lwmod@counter& (0+255),b
  3389  001A66  D006               	goto	l2568
  3390  001A68                     l2566:
  3391                           
  3392                           ; BSR set to: 0
  3393  001A68  0100               	movlb	0	; () banked
  3394  001A6A  90D8               	bcf	status,0,c
  3395  001A6C  37B5               	rlcf	___lwmod@divisor& (0+255),f,b
  3396  001A6E  37B6               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3397  001A70  0100               	movlb	0	; () banked
  3398  001A72  2BB7               	incf	___lwmod@counter& (0+255),f,b
  3399  001A74                     l2568:
  3400                           
  3401                           ; BSR set to: 0
  3402  001A74  0100               	movlb	0	; () banked
  3403  001A76  AFB6               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3404  001A78  D7F7               	goto	l2566
  3405  001A7A                     l2570:
  3406                           
  3407                           ; BSR set to: 0
  3408  001A7A  0100               	movlb	0	; () banked
  3409  001A7C  51B5               	movf	___lwmod@divisor& (0+255),w,b
  3410  001A7E  0100               	movlb	0	; () banked
  3411  001A80  5DB3               	subwf	___lwmod@dividend& (0+255),w,b
  3412  001A82  0100               	movlb	0	; () banked
  3413  001A84  51B6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3414  001A86  0100               	movlb	0	; () banked
  3415  001A88  59B4               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3416  001A8A  A0D8               	btfss	status,0,c
  3417  001A8C  D008               	goto	l2574
  3418                           
  3419                           ; BSR set to: 0
  3420  001A8E  0100               	movlb	0	; () banked
  3421  001A90  51B5               	movf	___lwmod@divisor& (0+255),w,b
  3422  001A92  0100               	movlb	0	; () banked
  3423  001A94  5FB3               	subwf	___lwmod@dividend& (0+255),f,b
  3424  001A96  0100               	movlb	0	; () banked
  3425  001A98  51B6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3426  001A9A  0100               	movlb	0	; () banked
  3427  001A9C  5BB4               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3428  001A9E                     l2574:
  3429                           
  3430                           ; BSR set to: 0
  3431  001A9E  0100               	movlb	0	; () banked
  3432  001AA0  90D8               	bcf	status,0,c
  3433  001AA2  33B6               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3434  001AA4  33B5               	rrcf	___lwmod@divisor& (0+255),f,b
  3435                           
  3436                           ; BSR set to: 0
  3437  001AA6  0100               	movlb	0	; () banked
  3438  001AA8  2FB7               	decfsz	___lwmod@counter& (0+255),f,b
  3439  001AAA  D7E7               	goto	l2570
  3440  001AAC                     l1111:
  3441                           
  3442                           ; BSR set to: 0
  3443  001AAC  C0B3  F0B3         	movff	___lwmod@dividend,?___lwmod
  3444  001AB0  C0B4  F0B4         	movff	___lwmod@dividend+1,?___lwmod+1
  3445                           
  3446                           ; BSR set to: 0
  3447  001AB4  0012               	return	
  3448  001AB6                     __end_of___lwmod:
  3449                           	opt stack 0
  3450                           tblptru	equ	0xFF8
  3451                           tblptrh	equ	0xFF7
  3452                           tblptrl	equ	0xFF6
  3453                           tablat	equ	0xFF5
  3454                           prodh	equ	0xFF4
  3455                           prodl	equ	0xFF3
  3456                           intcon	equ	0xFF2
  3457                           indf0	equ	0xFEF
  3458                           postinc0	equ	0xFEE
  3459                           fsr0h	equ	0xFEA
  3460                           fsr0l	equ	0xFE9
  3461                           wreg	equ	0xFE8
  3462                           postinc1	equ	0xFE6
  3463                           postdec1	equ	0xFE5
  3464                           fsr1l	equ	0xFE1
  3465                           indf2	equ	0xFDF
  3466                           postinc2	equ	0xFDE
  3467                           postdec2	equ	0xFDD
  3468                           fsr2h	equ	0xFDA
  3469                           fsr2l	equ	0xFD9
  3470                           status	equ	0xFD8
  3471                           
  3472 ;; *************** function ___lwdiv *****************
  3473 ;; Defined at:
  3474 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;  dividend        2    0[BANK0 ] unsigned int 
  3477 ;;  divisor         2    2[BANK0 ] unsigned int 
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;  quotient        2    4[BANK0 ] unsigned int 
  3480 ;;  counter         1    6[BANK0 ] unsigned char 
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  2    0[BANK0 ] unsigned int 
  3483 ;; Registers used:
  3484 ;;		wreg, status,2, status,0
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3490 ;;      Params:         0       4       0       0       0       0       0       0       0
  3491 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3493 ;;      Totals:         0       7       0       0       0       0       0       0       0
  3494 ;;Total ram usage:        7 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    5
  3497 ;; This function calls:
  3498 ;;		Nothing
  3499 ;; This function is called by:
  3500 ;;		_sprintf
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           	psect	text17
  3505  0017CE                     __ptext17:
  3506                           	opt stack 0
  3507  0017CE                     ___lwdiv:
  3508                           	opt stack 22
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;incstack = 0
  3512  0017CE  0E00               	movlw	0
  3513  0017D0  0100               	movlb	0	; () banked
  3514  0017D2  6FB1               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3515  0017D4  0E00               	movlw	0
  3516  0017D6  0100               	movlb	0	; () banked
  3517  0017D8  6FB0               	movwf	___lwdiv@quotient& (0+255),b
  3518                           
  3519                           ; BSR set to: 0
  3520  0017DA  0100               	movlb	0	; () banked
  3521  0017DC  51AF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3522  0017DE  11AE               	iorwf	___lwdiv@divisor& (0+255),w,b
  3523  0017E0  B4D8               	btfsc	status,2,c
  3524  0017E2  D02C               	goto	l1101
  3525                           
  3526                           ; BSR set to: 0
  3527  0017E4  0E01               	movlw	1
  3528  0017E6  0100               	movlb	0	; () banked
  3529  0017E8  6FB2               	movwf	___lwdiv@counter& (0+255),b
  3530  0017EA  D006               	goto	l2548
  3531  0017EC                     l2546:
  3532                           
  3533                           ; BSR set to: 0
  3534  0017EC  0100               	movlb	0	; () banked
  3535  0017EE  90D8               	bcf	status,0,c
  3536  0017F0  37AE               	rlcf	___lwdiv@divisor& (0+255),f,b
  3537  0017F2  37AF               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  3538  0017F4  0100               	movlb	0	; () banked
  3539  0017F6  2BB2               	incf	___lwdiv@counter& (0+255),f,b
  3540  0017F8                     l2548:
  3541                           
  3542                           ; BSR set to: 0
  3543  0017F8  0100               	movlb	0	; () banked
  3544  0017FA  AFAF               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  3545  0017FC  D7F7               	goto	l2546
  3546  0017FE                     l2550:
  3547                           
  3548                           ; BSR set to: 0
  3549  0017FE  0100               	movlb	0	; () banked
  3550  001800  90D8               	bcf	status,0,c
  3551  001802  37B0               	rlcf	___lwdiv@quotient& (0+255),f,b
  3552  001804  37B1               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3553                           
  3554                           ; BSR set to: 0
  3555  001806  0100               	movlb	0	; () banked
  3556  001808  51AE               	movf	___lwdiv@divisor& (0+255),w,b
  3557  00180A  0100               	movlb	0	; () banked
  3558  00180C  5DAC               	subwf	___lwdiv@dividend& (0+255),w,b
  3559  00180E  0100               	movlb	0	; () banked
  3560  001810  51AF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3561  001812  0100               	movlb	0	; () banked
  3562  001814  59AD               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  3563  001816  A0D8               	btfss	status,0,c
  3564  001818  D00A               	goto	l2558
  3565                           
  3566                           ; BSR set to: 0
  3567  00181A  0100               	movlb	0	; () banked
  3568  00181C  51AE               	movf	___lwdiv@divisor& (0+255),w,b
  3569  00181E  0100               	movlb	0	; () banked
  3570  001820  5FAC               	subwf	___lwdiv@dividend& (0+255),f,b
  3571  001822  0100               	movlb	0	; () banked
  3572  001824  51AF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3573  001826  0100               	movlb	0	; () banked
  3574  001828  5BAD               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  3575                           
  3576                           ; BSR set to: 0
  3577  00182A  0100               	movlb	0	; () banked
  3578  00182C  81B0               	bsf	___lwdiv@quotient& (0+255),0,b
  3579  00182E                     l2558:
  3580                           
  3581                           ; BSR set to: 0
  3582  00182E  0100               	movlb	0	; () banked
  3583  001830  90D8               	bcf	status,0,c
  3584  001832  33AF               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  3585  001834  33AE               	rrcf	___lwdiv@divisor& (0+255),f,b
  3586                           
  3587                           ; BSR set to: 0
  3588  001836  0100               	movlb	0	; () banked
  3589  001838  2FB2               	decfsz	___lwdiv@counter& (0+255),f,b
  3590  00183A  D7E1               	goto	l2550
  3591  00183C                     l1101:
  3592                           
  3593                           ; BSR set to: 0
  3594  00183C  C0B0  F0AC         	movff	___lwdiv@quotient,?___lwdiv
  3595  001840  C0B1  F0AD         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3596                           
  3597                           ; BSR set to: 0
  3598  001844  0012               	return	
  3599  001846                     __end_of___lwdiv:
  3600                           	opt stack 0
  3601                           tblptru	equ	0xFF8
  3602                           tblptrh	equ	0xFF7
  3603                           tblptrl	equ	0xFF6
  3604                           tablat	equ	0xFF5
  3605                           prodh	equ	0xFF4
  3606                           prodl	equ	0xFF3
  3607                           intcon	equ	0xFF2
  3608                           indf0	equ	0xFEF
  3609                           postinc0	equ	0xFEE
  3610                           fsr0h	equ	0xFEA
  3611                           fsr0l	equ	0xFE9
  3612                           wreg	equ	0xFE8
  3613                           postinc1	equ	0xFE6
  3614                           postdec1	equ	0xFE5
  3615                           fsr1l	equ	0xFE1
  3616                           indf2	equ	0xFDF
  3617                           postinc2	equ	0xFDE
  3618                           postdec2	equ	0xFDD
  3619                           fsr2h	equ	0xFDA
  3620                           fsr2l	equ	0xFD9
  3621                           status	equ	0xFD8
  3622                           
  3623 ;; *************** function _WriteUSART *****************
  3624 ;; Defined at:
  3625 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uwrite.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  data            1    wreg     unsigned char 
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  data            1    0[BANK0 ] unsigned char 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;		None               void
  3632 ;; Registers used:
  3633 ;;		wreg
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3639 ;;      Params:         0       0       0       0       0       0       0       0       0
  3640 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3641 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3642 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3643 ;;Total ram usage:        1 bytes
  3644 ;; Hardware stack levels used:    1
  3645 ;; Hardware stack levels required when called:    5
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		_putcBluetoothString
  3650 ;;		_putcBluetoothInt
  3651 ;;		_putcTxU1
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           	psect	text18
  3656  001DE4                     __ptext18:
  3657                           	opt stack 0
  3658  001DE4                     _WriteUSART:
  3659                           	opt stack 20
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;incstack = 0
  3663                           ;WriteUSART@data stored from wreg
  3664  001DE4  0100               	movlb	0	; () banked
  3665  001DE6  6FAC               	movwf	WriteUSART@data& (0+255),b
  3666                           
  3667                           ; BSR set to: 0
  3668  001DE8  ACAC               	btfss	4012,6,c	;volatile
  3669  001DEA  D003               	goto	l2292
  3670                           
  3671                           ; BSR set to: 0
  3672  001DEC  90AC               	bcf	4012,0,c	;volatile
  3673  001DEE  B254               	btfsc	_USART_Status,1,c
  3674                           
  3675                           ; BSR set to: 0
  3676  001DF0  80AC               	bsf	4012,0,c	;volatile
  3677  001DF2                     l2292:
  3678                           
  3679                           ; BSR set to: 0
  3680  001DF2  C0AC  FFAD         	movff	WriteUSART@data,4013	;volatile
  3681                           
  3682                           ; BSR set to: 0
  3683  001DF6  0012               	return	
  3684  001DF8                     __end_of_WriteUSART:
  3685                           	opt stack 0
  3686                           tblptru	equ	0xFF8
  3687                           tblptrh	equ	0xFF7
  3688                           tblptrl	equ	0xFF6
  3689                           tablat	equ	0xFF5
  3690                           prodh	equ	0xFF4
  3691                           prodl	equ	0xFF3
  3692                           intcon	equ	0xFF2
  3693                           indf0	equ	0xFEF
  3694                           postinc0	equ	0xFEE
  3695                           fsr0h	equ	0xFEA
  3696                           fsr0l	equ	0xFE9
  3697                           wreg	equ	0xFE8
  3698                           postinc1	equ	0xFE6
  3699                           postdec1	equ	0xFE5
  3700                           fsr1l	equ	0xFE1
  3701                           indf2	equ	0xFDF
  3702                           postinc2	equ	0xFDE
  3703                           postdec2	equ	0xFDD
  3704                           fsr2h	equ	0xFDA
  3705                           fsr2l	equ	0xFD9
  3706                           status	equ	0xFD8
  3707                           
  3708 ;; *************** function _UART1_Init *****************
  3709 ;; Defined at:
  3710 ;;		line 5 in file "UART1.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;  bdr             1    wreg     unsigned char 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;  bdr             1    6[BANK0 ] unsigned char 
  3715 ;; Return value:  Size  Location     Type
  3716 ;;		None               void
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, cstack
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3724 ;;      Params:         0       0       0       0       0       0       0       0       0
  3725 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3726 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3727 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3728 ;;Total ram usage:        1 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; Hardware stack levels required when called:    6
  3731 ;; This function calls:
  3732 ;;		_OpenUSART
  3733 ;; This function is called by:
  3734 ;;		_BT_Init
  3735 ;;		_putcBluetoothString
  3736 ;;		_putcBluetoothInt
  3737 ;;		_main
  3738 ;;		_EstadoBluetooth
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text19
  3743  001D62                     __ptext19:
  3744                           	opt stack 0
  3745  001D62                     _UART1_Init:
  3746                           	opt stack 24
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;incstack = 0
  3750                           ;UART1_Init@bdr stored from wreg
  3751  001D62  0100               	movlb	0	; () banked
  3752  001D64  6FB2               	movwf	UART1_Init@bdr& (0+255),b
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;UART1.c: 8: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b11111111 & 
      +                          0b11111111,bdr);
  3756  001D66  0100               	movlb	0	; () banked
  3757  001D68  C0B2  F0AC         	movff	UART1_Init@bdr,OpenUSART@spbrg
  3758  001D6C  0100               	movlb	0	; () banked
  3759  001D6E  6BAD               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  3760  001D70  0E7C               	movlw	124
  3761  001D72  EC2B  F00B         	call	_OpenUSART
  3762  001D76  0012               	return	
  3763  001D78                     __end_of_UART1_Init:
  3764                           	opt stack 0
  3765                           tblptru	equ	0xFF8
  3766                           tblptrh	equ	0xFF7
  3767                           tblptrl	equ	0xFF6
  3768                           tablat	equ	0xFF5
  3769                           prodh	equ	0xFF4
  3770                           prodl	equ	0xFF3
  3771                           intcon	equ	0xFF2
  3772                           indf0	equ	0xFEF
  3773                           postinc0	equ	0xFEE
  3774                           fsr0h	equ	0xFEA
  3775                           fsr0l	equ	0xFE9
  3776                           wreg	equ	0xFE8
  3777                           postinc1	equ	0xFE6
  3778                           postdec1	equ	0xFE5
  3779                           fsr1l	equ	0xFE1
  3780                           indf2	equ	0xFDF
  3781                           postinc2	equ	0xFDE
  3782                           postdec2	equ	0xFDD
  3783                           fsr2h	equ	0xFDA
  3784                           fsr2l	equ	0xFD9
  3785                           status	equ	0xFD8
  3786                           
  3787 ;; *************** function _OpenUSART *****************
  3788 ;; Defined at:
  3789 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uopen.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  config          1    wreg     unsigned char 
  3792 ;;  spbrg           2    0[BANK0 ] unsigned int 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  config          1    5[BANK0 ] unsigned char 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;		None               void
  3797 ;; Registers used:
  3798 ;;		wreg, status,2
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3804 ;;      Params:         0       2       0       0       0       0       0       0       0
  3805 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3806 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3807 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3808 ;;Total ram usage:        6 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:    5
  3811 ;; This function calls:
  3812 ;;		Nothing
  3813 ;; This function is called by:
  3814 ;;		_UART1_Init
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text20
  3819  001656                     __ptext20:
  3820                           	opt stack 0
  3821  001656                     _OpenUSART:
  3822                           	opt stack 24
  3823                           
  3824                           ;incstack = 0
  3825                           ;OpenUSART@config stored from wreg
  3826  001656  0100               	movlb	0	; () banked
  3827  001658  6FB1               	movwf	OpenUSART@config& (0+255),b
  3828                           
  3829                           ; BSR set to: 0
  3830  00165A  0E00               	movlw	0
  3831  00165C  6EAC               	movwf	4012,c	;volatile
  3832  00165E  0E00               	movlw	0
  3833  001660  6EAB               	movwf	4011,c	;volatile
  3834                           
  3835                           ; BSR set to: 0
  3836  001662  0100               	movlb	0	; () banked
  3837  001664  B1B1               	btfsc	OpenUSART@config& (0+255),0,b
  3838                           
  3839                           ; BSR set to: 0
  3840  001666  88AC               	bsf	4012,4,c	;volatile
  3841                           
  3842                           ; BSR set to: 0
  3843                           
  3844                           ; BSR set to: 0
  3845  001668  0100               	movlb	0	; () banked
  3846  00166A  A3B1               	btfss	OpenUSART@config& (0+255),1,b
  3847  00166C  D002               	goto	l2488
  3848                           
  3849                           ; BSR set to: 0
  3850  00166E  8CAC               	bsf	4012,6,c	;volatile
  3851  001670  8CAB               	bsf	4011,6,c	;volatile
  3852  001672                     l2488:
  3853                           
  3854                           ; BSR set to: 0
  3855  001672  0100               	movlb	0	; () banked
  3856  001674  B5B1               	btfsc	OpenUSART@config& (0+255),2,b
  3857                           
  3858                           ; BSR set to: 0
  3859  001676  8EAC               	bsf	4012,7,c	;volatile
  3860                           
  3861                           ; BSR set to: 0
  3862                           
  3863                           ; BSR set to: 0
  3864  001678  0100               	movlb	0	; () banked
  3865  00167A  A7B1               	btfss	OpenUSART@config& (0+255),3,b
  3866  00167C  D002               	goto	l553
  3867                           
  3868                           ; BSR set to: 0
  3869  00167E  88AB               	bsf	4011,4,c	;volatile
  3870  001680  D001               	goto	l2496
  3871  001682                     l553:
  3872                           
  3873                           ; BSR set to: 0
  3874  001682  8AAB               	bsf	4011,5,c	;volatile
  3875  001684                     l2496:
  3876                           
  3877                           ; BSR set to: 0
  3878  001684  0100               	movlb	0	; () banked
  3879  001686  B9B1               	btfsc	OpenUSART@config& (0+255),4,b
  3880                           
  3881                           ; BSR set to: 0
  3882  001688  84AC               	bsf	4012,2,c	;volatile
  3883                           
  3884                           ; BSR set to: 0
  3885  00168A  989E               	bcf	3998,4,c	;volatile
  3886                           
  3887                           ; BSR set to: 0
  3888  00168C  0100               	movlb	0	; () banked
  3889  00168E  BBB1               	btfsc	OpenUSART@config& (0+255),5,b
  3890                           
  3891                           ; BSR set to: 0
  3892  001690  86AB               	bsf	4011,3,c	;volatile
  3893                           
  3894                           ; BSR set to: 0
  3895                           
  3896                           ; BSR set to: 0
  3897  001692  0100               	movlb	0	; () banked
  3898  001694  ADB1               	btfss	OpenUSART@config& (0+255),6,b
  3899  001696  D002               	goto	l557
  3900                           
  3901                           ; BSR set to: 0
  3902  001698  8A9D               	bsf	3997,5,c	;volatile
  3903  00169A  D001               	goto	l558
  3904  00169C                     l557:
  3905                           
  3906                           ; BSR set to: 0
  3907  00169C  9A9D               	bcf	3997,5,c	;volatile
  3908  00169E                     l558:
  3909                           
  3910                           ; BSR set to: 0
  3911  00169E  9A9E               	bcf	3998,5,c	;volatile
  3912                           
  3913                           ; BSR set to: 0
  3914  0016A0  0100               	movlb	0	; () banked
  3915  0016A2  AFB1               	btfss	OpenUSART@config& (0+255),7,b
  3916  0016A4  D002               	goto	l559
  3917                           
  3918                           ; BSR set to: 0
  3919  0016A6  889D               	bsf	3997,4,c	;volatile
  3920  0016A8  D001               	goto	l560
  3921  0016AA                     l559:
  3922                           
  3923                           ; BSR set to: 0
  3924  0016AA  989D               	bcf	3997,4,c	;volatile
  3925  0016AC                     l560:
  3926                           
  3927                           ; BSR set to: 0
  3928  0016AC  C0AC  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  3929                           
  3930                           ; BSR set to: 0
  3931  0016B0  0100               	movlb	0	; () banked
  3932  0016B2  C0AD  F0AE         	movff	OpenUSART@spbrg+1,??_OpenUSART
  3933  0016B6  C0AE  F0AF         	movff	??_OpenUSART,??_OpenUSART+1
  3934  0016BA  0100               	movlb	0	; () banked
  3935  0016BC  6BB0               	clrf	(??_OpenUSART+2)& (0+255),b
  3936  0016BE  0100               	movlb	0	; () banked
  3937  0016C0  51AF               	movf	(??_OpenUSART+1)& (0+255),w,b
  3938  0016C2  6EB0               	movwf	4016,c	;volatile
  3939                           
  3940                           ; BSR set to: 0
  3941  0016C4  8AAC               	bsf	4012,5,c	;volatile
  3942                           
  3943                           ; BSR set to: 0
  3944  0016C6  8EAB               	bsf	4011,7,c	;volatile
  3945                           
  3946                           ; BSR set to: 0
  3947  0016C8  9C94               	bcf	3988,6,c	;volatile
  3948                           
  3949                           ; BSR set to: 0
  3950  0016CA  8E94               	bsf	3988,7,c	;volatile
  3951                           
  3952                           ; BSR set to: 0
  3953  0016CC  B8AC               	btfsc	4012,4,c	;volatile
  3954                           
  3955                           ; BSR set to: 0
  3956  0016CE  BEAC               	btfsc	4012,7,c	;volatile
  3957  0016D0  D001               	goto	l562
  3958                           
  3959                           ; BSR set to: 0
  3960  0016D2  8C94               	bsf	3988,6,c	;volatile
  3961  0016D4                     l562:
  3962                           
  3963                           ; BSR set to: 0
  3964  0016D4  0012               	return	
  3965  0016D6                     __end_of_OpenUSART:
  3966                           	opt stack 0
  3967                           tblptru	equ	0xFF8
  3968                           tblptrh	equ	0xFF7
  3969                           tblptrl	equ	0xFF6
  3970                           tablat	equ	0xFF5
  3971                           prodh	equ	0xFF4
  3972                           prodl	equ	0xFF3
  3973                           intcon	equ	0xFF2
  3974                           indf0	equ	0xFEF
  3975                           postinc0	equ	0xFEE
  3976                           fsr0h	equ	0xFEA
  3977                           fsr0l	equ	0xFE9
  3978                           wreg	equ	0xFE8
  3979                           postinc1	equ	0xFE6
  3980                           postdec1	equ	0xFE5
  3981                           fsr1l	equ	0xFE1
  3982                           indf2	equ	0xFDF
  3983                           postinc2	equ	0xFDE
  3984                           postdec2	equ	0xFDD
  3985                           fsr2h	equ	0xFDA
  3986                           fsr2l	equ	0xFD9
  3987                           status	equ	0xFD8
  3988                           
  3989 ;; *************** function _getCNY70Value *****************
  3990 ;; Defined at:
  3991 ;;		line 5 in file "cny70.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;		None
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  2   51[BANK0 ] int 
  3998 ;; Registers used:
  3999 ;;		wreg, status,2, status,0, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4005 ;;      Params:         0       2       0       0       0       0       0       0       0
  4006 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4007 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4008 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4009 ;;Total ram usage:        2 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:    9
  4012 ;; This function calls:
  4013 ;;		_go_back
  4014 ;;		_go_straight
  4015 ;;		_left
  4016 ;;		_right
  4017 ;; This function is called by:
  4018 ;;		_Comando_Tablet
  4019 ;;		_main
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           	psect	text21
  4024  000CEA                     __ptext21:
  4025                           	opt stack 0
  4026  000CEA                     _getCNY70Value:
  4027                           	opt stack 21
  4028                           
  4029                           ;cny70.c: 25: if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 0 && PORTB
      +                          bits.RB4 == 1 && PORTBbits.RB1 == 1){
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;incstack = 0
  4033  000CEA  B481               	btfsc	3969,2,c	;volatile
  4034  000CEC  A681               	btfss	3969,3,c	;volatile
  4035  000CEE  D008               	goto	l404
  4036  000CF0  A081               	btfss	3969,0,c	;volatile
  4037  000CF2  A881               	btfss	3969,4,c	;volatile
  4038  000CF4  D005               	goto	l404
  4039  000CF6  A281               	btfss	3969,1,c	;volatile
  4040  000CF8  D003               	goto	l404
  4041                           
  4042                           ;cny70.c: 26: go_straight();
  4043  000CFA  EC0E  F00F         	call	_go_straight	;wreg free
  4044  000CFE  D077               	goto	l3114
  4045  000D00                     l404:
  4046                           
  4047                           ;cny70.c: 30: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 0 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  4048  000D00  B481               	btfsc	3969,2,c	;volatile
  4049  000D02  B681               	btfsc	3969,3,c	;volatile
  4050  000D04  D008               	goto	l407
  4051  000D06  B081               	btfsc	3969,0,c	;volatile
  4052  000D08  A881               	btfss	3969,4,c	;volatile
  4053  000D0A  D005               	goto	l407
  4054  000D0C  A281               	btfss	3969,1,c	;volatile
  4055  000D0E  D003               	goto	l407
  4056                           
  4057                           ;cny70.c: 31: left();
  4058  000D10  ECC7  F00E         	call	_left	;wreg free
  4059  000D14  D049               	goto	L4
  4060  000D16                     l407:
  4061                           
  4062                           ;cny70.c: 35: else if(PORTBbits.RB2 == 0 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  4063  000D16  A481               	btfss	3969,2,c	;volatile
  4064  000D18  A681               	btfss	3969,3,c	;volatile
  4065  000D1A  D00C               	goto	l409
  4066  000D1C  B081               	btfsc	3969,0,c	;volatile
  4067  000D1E  A881               	btfss	3969,4,c	;volatile
  4068  000D20  D009               	goto	l409
  4069  000D22  A281               	btfss	3969,1,c	;volatile
  4070  000D24  D007               	goto	l409
  4071                           
  4072                           ;cny70.c: 36: left();
  4073  000D26  ECC7  F00E         	call	_left	;wreg free
  4074  000D2A                     
  4075                           ;cny70.c: 37: return -2;
  4076  000D2A  0EFF               	movlw	255
  4077  000D2C  0100               	movlb	0	; () banked
  4078  000D2E  6FE0               	movwf	(?_getCNY70Value+1)& (0+255),b
  4079  000D30  0EFE               	movlw	254
  4080  000D32  D061               	goto	L9
  4081  000D34                     l409:
  4082                           
  4083                           ;cny70.c: 40: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 0 && PORTBbits.RB1 == 1){
  4084  000D34  B481               	btfsc	3969,2,c	;volatile
  4085  000D36  A681               	btfss	3969,3,c	;volatile
  4086  000D38  D008               	goto	l411
  4087  000D3A  B081               	btfsc	3969,0,c	;volatile
  4088  000D3C  B881               	btfsc	3969,4,c	;volatile
  4089  000D3E  D005               	goto	l411
  4090  000D40  A281               	btfss	3969,1,c	;volatile
  4091  000D42  D003               	goto	l411
  4092                           
  4093                           ;cny70.c: 41: right();
  4094  000D44  ECBC  F00E         	call	_right	;wreg free
  4095  000D48  D03E               	goto	L8
  4096  000D4A                     l411:
  4097                           
  4098                           ;cny70.c: 45: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 0){
  4099  000D4A  B481               	btfsc	3969,2,c	;volatile
  4100  000D4C  A681               	btfss	3969,3,c	;volatile
  4101  000D4E  D008               	goto	l413
  4102  000D50  B081               	btfsc	3969,0,c	;volatile
  4103  000D52  A881               	btfss	3969,4,c	;volatile
  4104  000D54  D005               	goto	l413
  4105  000D56  B281               	btfsc	3969,1,c	;volatile
  4106  000D58  D003               	goto	l413
  4107                           
  4108                           ;cny70.c: 46: right();
  4109  000D5A  ECBC  F00E         	call	_right	;wreg free
  4110  000D5E  D00A               	goto	L7
  4111  000D60                     l413:
  4112                           
  4113                           ;cny70.c: 51: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 0 && PORTBbits.RB1 == 0){
  4114  000D60  B481               	btfsc	3969,2,c	;volatile
  4115  000D62  A681               	btfss	3969,3,c	;volatile
  4116  000D64  D00C               	goto	l415
  4117  000D66  B081               	btfsc	3969,0,c	;volatile
  4118  000D68  B881               	btfsc	3969,4,c	;volatile
  4119  000D6A  D009               	goto	l415
  4120  000D6C  B281               	btfsc	3969,1,c	;volatile
  4121  000D6E  D007               	goto	l415
  4122                           
  4123                           ;cny70.c: 52: right();
  4124  000D70  ECBC  F00E         	call	_right	;wreg free
  4125  000D74                     L7:
  4126                           
  4127                           ;cny70.c: 53: return 2;
  4128  000D74  0E00               	movlw	0
  4129  000D76  0100               	movlb	0	; () banked
  4130  000D78  6FE0               	movwf	(?_getCNY70Value+1)& (0+255),b
  4131  000D7A  0E02               	movlw	2
  4132  000D7C  D03C               	goto	L9
  4133  000D7E                     l415:
  4134                           
  4135                           ;cny70.c: 56: else if(PORTBbits.RB2 == 0 && PORTBbits.RB3 == 0 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  4136  000D7E  A481               	btfss	3969,2,c	;volatile
  4137  000D80  B681               	btfsc	3969,3,c	;volatile
  4138  000D82  D008               	goto	l417
  4139  000D84  B081               	btfsc	3969,0,c	;volatile
  4140  000D86  A881               	btfss	3969,4,c	;volatile
  4141  000D88  D005               	goto	l417
  4142  000D8A  A281               	btfss	3969,1,c	;volatile
  4143  000D8C  D003               	goto	l417
  4144                           
  4145                           ;cny70.c: 57: left();
  4146  000D8E  ECC7  F00E         	call	_left	;wreg free
  4147  000D92  D7CB               	goto	L10
  4148  000D94                     l417:
  4149                           
  4150                           ;cny70.c: 61: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 0 && PORTBbits.RB0 == 0 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  4151  000D94  B481               	btfsc	3969,2,c	;volatile
  4152  000D96  B681               	btfsc	3969,3,c	;volatile
  4153  000D98  D00C               	goto	l419
  4154  000D9A  A081               	btfss	3969,0,c	;volatile
  4155  000D9C  A881               	btfss	3969,4,c	;volatile
  4156  000D9E  D009               	goto	l419
  4157  000DA0  A281               	btfss	3969,1,c	;volatile
  4158  000DA2  D007               	goto	l419
  4159                           
  4160                           ;cny70.c: 62: go_straight();
  4161  000DA4  EC0E  F00F         	call	_go_straight	;wreg free
  4162  000DA8                     L4:
  4163                           
  4164                           ;cny70.c: 63: return -1;
  4165  000DA8  0100               	movlb	0	; () banked
  4166  000DAA  69DF               	setf	?_getCNY70Value& (0+255),b
  4167  000DAC  0100               	movlb	0	; () banked
  4168  000DAE  69E0               	setf	(?_getCNY70Value+1)& (0+255),b
  4169  000DB0  D024               	goto	l405
  4170  000DB2                     l419:
  4171                           
  4172                           ;cny70.c: 66: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 0 && 
      +                          PORTBbits.RB4 == 0 && PORTBbits.RB1 == 1){
  4173  000DB2  B481               	btfsc	3969,2,c	;volatile
  4174  000DB4  A681               	btfss	3969,3,c	;volatile
  4175  000DB6  D00C               	goto	l421
  4176  000DB8  A081               	btfss	3969,0,c	;volatile
  4177  000DBA  B881               	btfsc	3969,4,c	;volatile
  4178  000DBC  D009               	goto	l421
  4179  000DBE  A281               	btfss	3969,1,c	;volatile
  4180  000DC0  D007               	goto	l421
  4181                           
  4182                           ;cny70.c: 67: go_straight();
  4183  000DC2  EC0E  F00F         	call	_go_straight	;wreg free
  4184  000DC6                     L8:
  4185                           
  4186                           ;cny70.c: 68: return 1;
  4187  000DC6  0E00               	movlw	0
  4188  000DC8  0100               	movlb	0	; () banked
  4189  000DCA  6FE0               	movwf	(?_getCNY70Value+1)& (0+255),b
  4190  000DCC  0E01               	movlw	1
  4191  000DCE  D013               	goto	L9
  4192  000DD0                     l421:
  4193                           
  4194                           ;cny70.c: 71: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  4195  000DD0  B481               	btfsc	3969,2,c	;volatile
  4196  000DD2  A681               	btfss	3969,3,c	;volatile
  4197  000DD4  D00C               	goto	l3114
  4198  000DD6  B081               	btfsc	3969,0,c	;volatile
  4199  000DD8  A881               	btfss	3969,4,c	;volatile
  4200  000DDA  D009               	goto	l3114
  4201  000DDC  A281               	btfss	3969,1,c	;volatile
  4202  000DDE  D007               	goto	l3114
  4203                           
  4204                           ;cny70.c: 72: go_back();
  4205  000DE0  EC17  F00F         	call	_go_back	;wreg free
  4206                           
  4207                           ;cny70.c: 73: return -10;
  4208  000DE4  0EFF               	movlw	255
  4209  000DE6  0100               	movlb	0	; () banked
  4210  000DE8  6FE0               	movwf	(?_getCNY70Value+1)& (0+255),b
  4211  000DEA  0EF6               	movlw	246
  4212  000DEC  D004               	goto	L9
  4213  000DEE                     l3114:
  4214                           
  4215                           ;cny70.c: 76: else
  4216                           ;cny70.c: 77: return 0;
  4217  000DEE  0E00               	movlw	0
  4218  000DF0  0100               	movlb	0	; () banked
  4219  000DF2  6FE0               	movwf	(?_getCNY70Value+1)& (0+255),b
  4220  000DF4  0E00               	movlw	0
  4221  000DF6                     L9:
  4222  000DF6  0100               	movlb	0	; () banked
  4223  000DF8  6FDF               	movwf	?_getCNY70Value& (0+255),b
  4224  000DFA                     l405:
  4225                           
  4226                           ; BSR set to: 0
  4227  000DFA  0012               	return	
  4228  000DFC                     __end_of_getCNY70Value:
  4229                           	opt stack 0
  4230                           tblptru	equ	0xFF8
  4231                           tblptrh	equ	0xFF7
  4232                           tblptrl	equ	0xFF6
  4233                           tablat	equ	0xFF5
  4234                           prodh	equ	0xFF4
  4235                           prodl	equ	0xFF3
  4236                           intcon	equ	0xFF2
  4237                           indf0	equ	0xFEF
  4238                           postinc0	equ	0xFEE
  4239                           fsr0h	equ	0xFEA
  4240                           fsr0l	equ	0xFE9
  4241                           wreg	equ	0xFE8
  4242                           postinc1	equ	0xFE6
  4243                           postdec1	equ	0xFE5
  4244                           fsr1l	equ	0xFE1
  4245                           indf2	equ	0xFDF
  4246                           postinc2	equ	0xFDE
  4247                           postdec2	equ	0xFDD
  4248                           fsr2h	equ	0xFDA
  4249                           fsr2l	equ	0xFD9
  4250                           status	equ	0xFD8
  4251                           
  4252 ;; *************** function _right *****************
  4253 ;; Defined at:
  4254 ;;		line 100 in file "cny70.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;		None
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;		None               void
  4261 ;; Registers used:
  4262 ;;		wreg, status,2, status,0, cstack
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4268 ;;      Params:         0       0       0       0       0       0       0       0       0
  4269 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4271 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4272 ;;Total ram usage:        0 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; Hardware stack levels required when called:    8
  4275 ;; This function calls:
  4276 ;;		_PWM_DutyCycle1
  4277 ;;		_PWM_DutyCycle2
  4278 ;;		_motor_Backforward1
  4279 ;;		_motor_forward1
  4280 ;; This function is called by:
  4281 ;;		_getCNY70Value
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text22
  4286  001D78                     __ptext22:
  4287                           	opt stack 0
  4288  001D78                     _right:
  4289                           	opt stack 21
  4290                           
  4291                           ;cny70.c: 102: motor_forward1();
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;incstack = 0
  4295  001D78  EC38  F00F         	call	_motor_forward1	;wreg free
  4296                           
  4297                           ;cny70.c: 103: motor_Backforward1();
  4298  001D7C  EC3B  F00F         	call	_motor_Backforward1	;wreg free
  4299                           
  4300                           ;cny70.c: 104: PWM_DutyCycle1(100);
  4301  001D80  0E64               	movlw	100
  4302  001D82  ECA9  F00B         	call	_PWM_DutyCycle1
  4303                           
  4304                           ;cny70.c: 105: PWM_DutyCycle2(100);
  4305  001D86  0E64               	movlw	100
  4306  001D88  EC6B  F00B         	call	_PWM_DutyCycle2
  4307                           
  4308                           ;cny70.c: 106: return;
  4309  001D8C  0012               	return	
  4310  001D8E                     __end_of_right:
  4311                           	opt stack 0
  4312                           tblptru	equ	0xFF8
  4313                           tblptrh	equ	0xFF7
  4314                           tblptrl	equ	0xFF6
  4315                           tablat	equ	0xFF5
  4316                           prodh	equ	0xFF4
  4317                           prodl	equ	0xFF3
  4318                           intcon	equ	0xFF2
  4319                           indf0	equ	0xFEF
  4320                           postinc0	equ	0xFEE
  4321                           fsr0h	equ	0xFEA
  4322                           fsr0l	equ	0xFE9
  4323                           wreg	equ	0xFE8
  4324                           postinc1	equ	0xFE6
  4325                           postdec1	equ	0xFE5
  4326                           fsr1l	equ	0xFE1
  4327                           indf2	equ	0xFDF
  4328                           postinc2	equ	0xFDE
  4329                           postdec2	equ	0xFDD
  4330                           fsr2h	equ	0xFDA
  4331                           fsr2l	equ	0xFD9
  4332                           status	equ	0xFD8
  4333                           
  4334 ;; *************** function _motor_forward1 *****************
  4335 ;; Defined at:
  4336 ;;		line 11 in file "motor.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  2  387[COMRAM] int 
  4343 ;; Registers used:
  4344 ;;		None
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4350 ;;      Params:         0       0       0       0       0       0       0       0       0
  4351 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4353 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4354 ;;Total ram usage:        0 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    5
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		_right
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           	psect	text23
  4365  001E70                     __ptext23:
  4366                           	opt stack 0
  4367  001E70                     _motor_forward1:
  4368                           	opt stack 23
  4369                           
  4370                           ;motor.c: 13: PORTDbits.RD7 = 1;
  4371                           
  4372                           ;incstack = 0
  4373  001E70  8E83               	bsf	3971,7,c	;volatile
  4374                           
  4375                           ;motor.c: 14: PORTDbits.RD4 = 0;
  4376  001E72  9883               	bcf	3971,4,c	;volatile
  4377                           
  4378                           ;motor.c: 17: return;
  4379  001E74  0012               	return	
  4380  001E76                     __end_of_motor_forward1:
  4381                           	opt stack 0
  4382                           tblptru	equ	0xFF8
  4383                           tblptrh	equ	0xFF7
  4384                           tblptrl	equ	0xFF6
  4385                           tablat	equ	0xFF5
  4386                           prodh	equ	0xFF4
  4387                           prodl	equ	0xFF3
  4388                           intcon	equ	0xFF2
  4389                           indf0	equ	0xFEF
  4390                           postinc0	equ	0xFEE
  4391                           fsr0h	equ	0xFEA
  4392                           fsr0l	equ	0xFE9
  4393                           wreg	equ	0xFE8
  4394                           postinc1	equ	0xFE6
  4395                           postdec1	equ	0xFE5
  4396                           fsr1l	equ	0xFE1
  4397                           indf2	equ	0xFDF
  4398                           postinc2	equ	0xFDE
  4399                           postdec2	equ	0xFDD
  4400                           fsr2h	equ	0xFDA
  4401                           fsr2l	equ	0xFD9
  4402                           status	equ	0xFD8
  4403                           
  4404 ;; *************** function _motor_Backforward1 *****************
  4405 ;; Defined at:
  4406 ;;		line 20 in file "motor.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;		None
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;		None
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  2  389[COMRAM] int 
  4413 ;; Registers used:
  4414 ;;		None
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4420 ;;      Params:         0       0       0       0       0       0       0       0       0
  4421 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4423 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4424 ;;Total ram usage:        0 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; Hardware stack levels required when called:    5
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_right
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text24
  4435  001E76                     __ptext24:
  4436                           	opt stack 0
  4437  001E76                     _motor_Backforward1:
  4438                           	opt stack 23
  4439                           
  4440                           ;motor.c: 22: PORTDbits.RD7 = 0;
  4441                           
  4442                           ;incstack = 0
  4443  001E76  9E83               	bcf	3971,7,c	;volatile
  4444                           
  4445                           ;motor.c: 23: PORTDbits.RD4 = 1;
  4446  001E78  8883               	bsf	3971,4,c	;volatile
  4447                           
  4448                           ;motor.c: 26: return;
  4449  001E7A  0012               	return	
  4450  001E7C                     __end_of_motor_Backforward1:
  4451                           	opt stack 0
  4452                           tblptru	equ	0xFF8
  4453                           tblptrh	equ	0xFF7
  4454                           tblptrl	equ	0xFF6
  4455                           tablat	equ	0xFF5
  4456                           prodh	equ	0xFF4
  4457                           prodl	equ	0xFF3
  4458                           intcon	equ	0xFF2
  4459                           indf0	equ	0xFEF
  4460                           postinc0	equ	0xFEE
  4461                           fsr0h	equ	0xFEA
  4462                           fsr0l	equ	0xFE9
  4463                           wreg	equ	0xFE8
  4464                           postinc1	equ	0xFE6
  4465                           postdec1	equ	0xFE5
  4466                           fsr1l	equ	0xFE1
  4467                           indf2	equ	0xFDF
  4468                           postinc2	equ	0xFDE
  4469                           postdec2	equ	0xFDD
  4470                           fsr2h	equ	0xFDA
  4471                           fsr2l	equ	0xFD9
  4472                           status	equ	0xFD8
  4473                           
  4474 ;; *************** function _left *****************
  4475 ;; Defined at:
  4476 ;;		line 109 in file "cny70.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;		None
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;		None
  4481 ;; Return value:  Size  Location     Type
  4482 ;;		None               void
  4483 ;; Registers used:
  4484 ;;		wreg, status,2, status,0, cstack
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4490 ;;      Params:         0       0       0       0       0       0       0       0       0
  4491 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4493 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4494 ;;Total ram usage:        0 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; Hardware stack levels required when called:    8
  4497 ;; This function calls:
  4498 ;;		_PWM_DutyCycle1
  4499 ;;		_PWM_DutyCycle2
  4500 ;;		_motor_Backforward2
  4501 ;;		_motor_forward2
  4502 ;; This function is called by:
  4503 ;;		_getCNY70Value
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text25
  4508  001D8E                     __ptext25:
  4509                           	opt stack 0
  4510  001D8E                     _left:
  4511                           	opt stack 21
  4512                           
  4513                           ;cny70.c: 111: motor_forward2();
  4514                           
  4515                           ;incstack = 0
  4516  001D8E  EC3E  F00F         	call	_motor_forward2	;wreg free
  4517                           
  4518                           ;cny70.c: 112: motor_Backforward2();
  4519  001D92  EC41  F00F         	call	_motor_Backforward2	;wreg free
  4520                           
  4521                           ;cny70.c: 113: PWM_DutyCycle1(100);
  4522  001D96  0E64               	movlw	100
  4523  001D98  ECA9  F00B         	call	_PWM_DutyCycle1
  4524                           
  4525                           ;cny70.c: 114: PWM_DutyCycle2(100);
  4526  001D9C  0E64               	movlw	100
  4527  001D9E  EC6B  F00B         	call	_PWM_DutyCycle2
  4528                           
  4529                           ;cny70.c: 115: return;
  4530  001DA2  0012               	return	
  4531  001DA4                     __end_of_left:
  4532                           	opt stack 0
  4533                           tblptru	equ	0xFF8
  4534                           tblptrh	equ	0xFF7
  4535                           tblptrl	equ	0xFF6
  4536                           tablat	equ	0xFF5
  4537                           prodh	equ	0xFF4
  4538                           prodl	equ	0xFF3
  4539                           intcon	equ	0xFF2
  4540                           indf0	equ	0xFEF
  4541                           postinc0	equ	0xFEE
  4542                           fsr0h	equ	0xFEA
  4543                           fsr0l	equ	0xFE9
  4544                           wreg	equ	0xFE8
  4545                           postinc1	equ	0xFE6
  4546                           postdec1	equ	0xFE5
  4547                           fsr1l	equ	0xFE1
  4548                           indf2	equ	0xFDF
  4549                           postinc2	equ	0xFDE
  4550                           postdec2	equ	0xFDD
  4551                           fsr2h	equ	0xFDA
  4552                           fsr2l	equ	0xFD9
  4553                           status	equ	0xFD8
  4554                           
  4555 ;; *************** function _motor_forward2 *****************
  4556 ;; Defined at:
  4557 ;;		line 29 in file "motor.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;		None
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  2  395[COMRAM] int 
  4564 ;; Registers used:
  4565 ;;		None
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4571 ;;      Params:         0       0       0       0       0       0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4574 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4575 ;;Total ram usage:        0 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    5
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_left
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text26
  4586  001E7C                     __ptext26:
  4587                           	opt stack 0
  4588  001E7C                     _motor_forward2:
  4589                           	opt stack 23
  4590                           
  4591                           ;motor.c: 32: PORTDbits.RD2 = 1;
  4592                           
  4593                           ;incstack = 0
  4594  001E7C  8483               	bsf	3971,2,c	;volatile
  4595                           
  4596                           ;motor.c: 33: PORTDbits.RD3 = 0;
  4597  001E7E  9683               	bcf	3971,3,c	;volatile
  4598                           
  4599                           ;motor.c: 35: return;
  4600  001E80  0012               	return	
  4601  001E82                     __end_of_motor_forward2:
  4602                           	opt stack 0
  4603                           tblptru	equ	0xFF8
  4604                           tblptrh	equ	0xFF7
  4605                           tblptrl	equ	0xFF6
  4606                           tablat	equ	0xFF5
  4607                           prodh	equ	0xFF4
  4608                           prodl	equ	0xFF3
  4609                           intcon	equ	0xFF2
  4610                           indf0	equ	0xFEF
  4611                           postinc0	equ	0xFEE
  4612                           fsr0h	equ	0xFEA
  4613                           fsr0l	equ	0xFE9
  4614                           wreg	equ	0xFE8
  4615                           postinc1	equ	0xFE6
  4616                           postdec1	equ	0xFE5
  4617                           fsr1l	equ	0xFE1
  4618                           indf2	equ	0xFDF
  4619                           postinc2	equ	0xFDE
  4620                           postdec2	equ	0xFDD
  4621                           fsr2h	equ	0xFDA
  4622                           fsr2l	equ	0xFD9
  4623                           status	equ	0xFD8
  4624                           
  4625 ;; *************** function _motor_Backforward2 *****************
  4626 ;; Defined at:
  4627 ;;		line 38 in file "motor.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;		None
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;		None
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  2  397[COMRAM] int 
  4634 ;; Registers used:
  4635 ;;		None
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4641 ;;      Params:         0       0       0       0       0       0       0       0       0
  4642 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4644 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4645 ;;Total ram usage:        0 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; Hardware stack levels required when called:    5
  4648 ;; This function calls:
  4649 ;;		Nothing
  4650 ;; This function is called by:
  4651 ;;		_left
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           	psect	text27
  4656  001E82                     __ptext27:
  4657                           	opt stack 0
  4658  001E82                     _motor_Backforward2:
  4659                           	opt stack 23
  4660                           
  4661                           ;motor.c: 41: PORTDbits.RD2 = 0;
  4662                           
  4663                           ;incstack = 0
  4664  001E82  9483               	bcf	3971,2,c	;volatile
  4665                           
  4666                           ;motor.c: 42: PORTDbits.RD3 = 1;
  4667  001E84  8683               	bsf	3971,3,c	;volatile
  4668                           
  4669                           ;motor.c: 44: return;
  4670  001E86  0012               	return	
  4671  001E88                     __end_of_motor_Backforward2:
  4672                           	opt stack 0
  4673                           tblptru	equ	0xFF8
  4674                           tblptrh	equ	0xFF7
  4675                           tblptrl	equ	0xFF6
  4676                           tablat	equ	0xFF5
  4677                           prodh	equ	0xFF4
  4678                           prodl	equ	0xFF3
  4679                           intcon	equ	0xFF2
  4680                           indf0	equ	0xFEF
  4681                           postinc0	equ	0xFEE
  4682                           fsr0h	equ	0xFEA
  4683                           fsr0l	equ	0xFE9
  4684                           wreg	equ	0xFE8
  4685                           postinc1	equ	0xFE6
  4686                           postdec1	equ	0xFE5
  4687                           fsr1l	equ	0xFE1
  4688                           indf2	equ	0xFDF
  4689                           postinc2	equ	0xFDE
  4690                           postdec2	equ	0xFDD
  4691                           fsr2h	equ	0xFDA
  4692                           fsr2l	equ	0xFD9
  4693                           status	equ	0xFD8
  4694                           
  4695 ;; *************** function _go_straight *****************
  4696 ;; Defined at:
  4697 ;;		line 118 in file "cny70.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;		None
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;		None
  4702 ;; Return value:  Size  Location     Type
  4703 ;;		None               void
  4704 ;; Registers used:
  4705 ;;		wreg, status,2, status,0, cstack
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4711 ;;      Params:         0       0       0       0       0       0       0       0       0
  4712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4714 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4715 ;;Total ram usage:        0 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    8
  4718 ;; This function calls:
  4719 ;;		_PWM_DutyCycle1
  4720 ;;		_PWM_DutyCycle2
  4721 ;;		_motor_forward
  4722 ;; This function is called by:
  4723 ;;		_getCNY70Value
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           	psect	text28
  4728  001E1C                     __ptext28:
  4729                           	opt stack 0
  4730  001E1C                     _go_straight:
  4731                           	opt stack 21
  4732                           
  4733                           ;cny70.c: 120: motor_forward();
  4734                           
  4735                           ;incstack = 0
  4736  001E1C  EC29  F00F         	call	_motor_forward	;wreg free
  4737                           
  4738                           ;cny70.c: 121: PWM_DutyCycle1(100);
  4739  001E20  0E64               	movlw	100
  4740  001E22  ECA9  F00B         	call	_PWM_DutyCycle1
  4741                           
  4742                           ;cny70.c: 122: PWM_DutyCycle2(100);
  4743  001E26  0E64               	movlw	100
  4744  001E28  EC6B  F00B         	call	_PWM_DutyCycle2
  4745                           
  4746                           ;cny70.c: 123: return;
  4747  001E2C  0012               	return	
  4748  001E2E                     __end_of_go_straight:
  4749                           	opt stack 0
  4750                           tblptru	equ	0xFF8
  4751                           tblptrh	equ	0xFF7
  4752                           tblptrl	equ	0xFF6
  4753                           tablat	equ	0xFF5
  4754                           prodh	equ	0xFF4
  4755                           prodl	equ	0xFF3
  4756                           intcon	equ	0xFF2
  4757                           indf0	equ	0xFEF
  4758                           postinc0	equ	0xFEE
  4759                           fsr0h	equ	0xFEA
  4760                           fsr0l	equ	0xFE9
  4761                           wreg	equ	0xFE8
  4762                           postinc1	equ	0xFE6
  4763                           postdec1	equ	0xFE5
  4764                           fsr1l	equ	0xFE1
  4765                           indf2	equ	0xFDF
  4766                           postinc2	equ	0xFDE
  4767                           postdec2	equ	0xFDD
  4768                           fsr2h	equ	0xFDA
  4769                           fsr2l	equ	0xFD9
  4770                           status	equ	0xFD8
  4771                           
  4772 ;; *************** function _motor_forward *****************
  4773 ;; Defined at:
  4774 ;;		line 47 in file "motor.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;		None
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;		None
  4779 ;; Return value:  Size  Location     Type
  4780 ;;		None               void
  4781 ;; Registers used:
  4782 ;;		None
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4788 ;;      Params:         0       0       0       0       0       0       0       0       0
  4789 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4790 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4791 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4792 ;;Total ram usage:        0 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; Hardware stack levels required when called:    5
  4795 ;; This function calls:
  4796 ;;		Nothing
  4797 ;; This function is called by:
  4798 ;;		_go_straight
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text29
  4803  001E52                     __ptext29:
  4804                           	opt stack 0
  4805  001E52                     _motor_forward:
  4806                           	opt stack 23
  4807                           
  4808                           ;motor.c: 49: PORTDbits.RD7 = 1;
  4809                           
  4810                           ;incstack = 0
  4811  001E52  8E83               	bsf	3971,7,c	;volatile
  4812                           
  4813                           ;motor.c: 50: PORTDbits.RD4 = 0;
  4814  001E54  9883               	bcf	3971,4,c	;volatile
  4815                           
  4816                           ;motor.c: 51: PORTDbits.RD2 = 1;
  4817  001E56  8483               	bsf	3971,2,c	;volatile
  4818                           
  4819                           ;motor.c: 52: PORTDbits.RD3 = 0;
  4820  001E58  9683               	bcf	3971,3,c	;volatile
  4821                           
  4822                           ;motor.c: 54: return;
  4823  001E5A  0012               	return	
  4824  001E5C                     __end_of_motor_forward:
  4825                           	opt stack 0
  4826                           tblptru	equ	0xFF8
  4827                           tblptrh	equ	0xFF7
  4828                           tblptrl	equ	0xFF6
  4829                           tablat	equ	0xFF5
  4830                           prodh	equ	0xFF4
  4831                           prodl	equ	0xFF3
  4832                           intcon	equ	0xFF2
  4833                           indf0	equ	0xFEF
  4834                           postinc0	equ	0xFEE
  4835                           fsr0h	equ	0xFEA
  4836                           fsr0l	equ	0xFE9
  4837                           wreg	equ	0xFE8
  4838                           postinc1	equ	0xFE6
  4839                           postdec1	equ	0xFE5
  4840                           fsr1l	equ	0xFE1
  4841                           indf2	equ	0xFDF
  4842                           postinc2	equ	0xFDE
  4843                           postdec2	equ	0xFDD
  4844                           fsr2h	equ	0xFDA
  4845                           fsr2l	equ	0xFD9
  4846                           status	equ	0xFD8
  4847                           
  4848 ;; *************** function _go_back *****************
  4849 ;; Defined at:
  4850 ;;		line 126 in file "cny70.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;		None
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;		None
  4855 ;; Return value:  Size  Location     Type
  4856 ;;		None               void
  4857 ;; Registers used:
  4858 ;;		wreg, status,2, status,0, cstack
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4864 ;;      Params:         0       0       0       0       0       0       0       0       0
  4865 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4867 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4868 ;;Total ram usage:        0 bytes
  4869 ;; Hardware stack levels used:    1
  4870 ;; Hardware stack levels required when called:    8
  4871 ;; This function calls:
  4872 ;;		_PWM_DutyCycle1
  4873 ;;		_PWM_DutyCycle2
  4874 ;;		_motor_Backforward
  4875 ;; This function is called by:
  4876 ;;		_getCNY70Value
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           	psect	text30
  4881  001E2E                     __ptext30:
  4882                           	opt stack 0
  4883  001E2E                     _go_back:
  4884                           	opt stack 21
  4885                           
  4886                           ;cny70.c: 128: motor_Backforward();
  4887                           
  4888                           ;incstack = 0
  4889  001E2E  EC2E  F00F         	call	_motor_Backforward	;wreg free
  4890                           
  4891                           ;cny70.c: 129: PWM_DutyCycle1(100);
  4892  001E32  0E64               	movlw	100
  4893  001E34  ECA9  F00B         	call	_PWM_DutyCycle1
  4894                           
  4895                           ;cny70.c: 130: PWM_DutyCycle2(100);
  4896  001E38  0E64               	movlw	100
  4897  001E3A  EC6B  F00B         	call	_PWM_DutyCycle2
  4898                           
  4899                           ;cny70.c: 131: return;
  4900  001E3E  0012               	return	
  4901  001E40                     __end_of_go_back:
  4902                           	opt stack 0
  4903                           tblptru	equ	0xFF8
  4904                           tblptrh	equ	0xFF7
  4905                           tblptrl	equ	0xFF6
  4906                           tablat	equ	0xFF5
  4907                           prodh	equ	0xFF4
  4908                           prodl	equ	0xFF3
  4909                           intcon	equ	0xFF2
  4910                           indf0	equ	0xFEF
  4911                           postinc0	equ	0xFEE
  4912                           fsr0h	equ	0xFEA
  4913                           fsr0l	equ	0xFE9
  4914                           wreg	equ	0xFE8
  4915                           postinc1	equ	0xFE6
  4916                           postdec1	equ	0xFE5
  4917                           fsr1l	equ	0xFE1
  4918                           indf2	equ	0xFDF
  4919                           postinc2	equ	0xFDE
  4920                           postdec2	equ	0xFDD
  4921                           fsr2h	equ	0xFDA
  4922                           fsr2l	equ	0xFD9
  4923                           status	equ	0xFD8
  4924                           
  4925 ;; *************** function _motor_Backforward *****************
  4926 ;; Defined at:
  4927 ;;		line 57 in file "motor.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;		None
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;		None
  4932 ;; Return value:  Size  Location     Type
  4933 ;;		None               void
  4934 ;; Registers used:
  4935 ;;		None
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4941 ;;      Params:         0       0       0       0       0       0       0       0       0
  4942 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4943 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4944 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4945 ;;Total ram usage:        0 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; Hardware stack levels required when called:    5
  4948 ;; This function calls:
  4949 ;;		Nothing
  4950 ;; This function is called by:
  4951 ;;		_go_back
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text31
  4956  001E5C                     __ptext31:
  4957                           	opt stack 0
  4958  001E5C                     _motor_Backforward:
  4959                           	opt stack 23
  4960                           
  4961                           ;motor.c: 59: PORTDbits.RD7 = 0;
  4962                           
  4963                           ;incstack = 0
  4964  001E5C  9E83               	bcf	3971,7,c	;volatile
  4965                           
  4966                           ;motor.c: 60: PORTDbits.RD4 = 1;
  4967  001E5E  8883               	bsf	3971,4,c	;volatile
  4968                           
  4969                           ;motor.c: 61: PORTDbits.RD2 = 0;
  4970  001E60  9483               	bcf	3971,2,c	;volatile
  4971                           
  4972                           ;motor.c: 62: PORTDbits.RD3 = 1;
  4973  001E62  8683               	bsf	3971,3,c	;volatile
  4974                           
  4975                           ;motor.c: 64: return;
  4976  001E64  0012               	return	
  4977  001E66                     __end_of_motor_Backforward:
  4978                           	opt stack 0
  4979                           tblptru	equ	0xFF8
  4980                           tblptrh	equ	0xFF7
  4981                           tblptrl	equ	0xFF6
  4982                           tablat	equ	0xFF5
  4983                           prodh	equ	0xFF4
  4984                           prodl	equ	0xFF3
  4985                           intcon	equ	0xFF2
  4986                           indf0	equ	0xFEF
  4987                           postinc0	equ	0xFEE
  4988                           fsr0h	equ	0xFEA
  4989                           fsr0l	equ	0xFE9
  4990                           wreg	equ	0xFE8
  4991                           postinc1	equ	0xFE6
  4992                           postdec1	equ	0xFE5
  4993                           fsr1l	equ	0xFE1
  4994                           indf2	equ	0xFDF
  4995                           postinc2	equ	0xFDE
  4996                           postdec2	equ	0xFDD
  4997                           fsr2h	equ	0xFDA
  4998                           fsr2l	equ	0xFD9
  4999                           status	equ	0xFD8
  5000                           
  5001 ;; *************** function _PWM_DutyCycle2 *****************
  5002 ;; Defined at:
  5003 ;;		line 55 in file "pwm.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  percentageDu    1    wreg     unsigned char 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;  percentageDu    1   48[BANK0 ] unsigned char 
  5008 ;;  DC              2   49[BANK0 ] unsigned int 
  5009 ;;  DutyCycle       2   46[BANK0 ] unsigned int 
  5010 ;; Return value:  Size  Location     Type
  5011 ;;		None               void
  5012 ;; Registers used:
  5013 ;;		wreg, status,2, status,0, cstack
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5019 ;;      Params:         0       0       0       0       0       0       0       0       0
  5020 ;;      Locals:         0       5       0       0       0       0       0       0       0
  5021 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5022 ;;      Totals:         0       9       0       0       0       0       0       0       0
  5023 ;;Total ram usage:        9 bytes
  5024 ;; Hardware stack levels used:    1
  5025 ;; Hardware stack levels required when called:    7
  5026 ;; This function calls:
  5027 ;;		_SetDCPWM2
  5028 ;;		___ftmul
  5029 ;;		___fttol
  5030 ;;		___lbtoft
  5031 ;; This function is called by:
  5032 ;;		_Inicializa_Driveby
  5033 ;;		_Comando_Tablet
  5034 ;;		_right
  5035 ;;		_left
  5036 ;;		_go_straight
  5037 ;;		_go_back
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	text32
  5042  0016D6                     __ptext32:
  5043                           	opt stack 0
  5044  0016D6                     _PWM_DutyCycle2:
  5045                           	opt stack 21
  5046                           
  5047                           ;incstack = 0
  5048                           ;PWM_DutyCycle2@percentageDuty stored from wreg
  5049  0016D6  0100               	movlb	0	; () banked
  5050  0016D8  6FDC               	movwf	PWM_DutyCycle2@percentageDuty& (0+255),b
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;pwm.c: 57: unsigned int DC = 0, DutyCycle = 0;
  5054  0016DA  0E00               	movlw	0
  5055  0016DC  0100               	movlb	0	; () banked
  5056  0016DE  6FDE               	movwf	(PWM_DutyCycle2@DC+1)& (0+255),b
  5057  0016E0  0E00               	movlw	0
  5058  0016E2  0100               	movlb	0	; () banked
  5059  0016E4  6FDD               	movwf	PWM_DutyCycle2@DC& (0+255),b
  5060  0016E6  0E00               	movlw	0
  5061  0016E8  0100               	movlb	0	; () banked
  5062  0016EA  6FDB               	movwf	(PWM_DutyCycle2@DutyCycle+1)& (0+255),b
  5063  0016EC  0E00               	movlw	0
  5064  0016EE  0100               	movlb	0	; () banked
  5065  0016F0  6FDA               	movwf	PWM_DutyCycle2@DutyCycle& (0+255),b
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;pwm.c: 59: DC = (unsigned int)(percentageDuty * 10.23);
  5069  0016F2  0EAE               	movlw	174
  5070  0016F4  0100               	movlb	0	; () banked
  5071  0016F6  6FBB               	movwf	___ftmul@f2& (0+255),b
  5072  0016F8  0E23               	movlw	35
  5073  0016FA  0100               	movlb	0	; () banked
  5074  0016FC  6FBC               	movwf	(___ftmul@f2+1)& (0+255),b
  5075  0016FE  0E41               	movlw	65
  5076  001700  0100               	movlb	0	; () banked
  5077  001702  6FBD               	movwf	(___ftmul@f2+2)& (0+255),b
  5078  001704  0100               	movlb	0	; () banked
  5079  001706  51DC               	movf	PWM_DutyCycle2@percentageDuty& (0+255),w,b
  5080  001708  EC44  F00E         	call	___lbtoft
  5081  00170C  C0B4  F0B8         	movff	?___lbtoft,___ftmul@f1
  5082  001710  C0B5  F0B9         	movff	?___lbtoft+1,___ftmul@f1+1
  5083  001714  C0B6  F0BA         	movff	?___lbtoft+2,___ftmul@f1+2
  5084  001718  EC1E  F005         	call	___ftmul	;wreg free
  5085  00171C  C0B8  F0C7         	movff	?___ftmul,___fttol@f1
  5086  001720  C0B9  F0C8         	movff	?___ftmul+1,___fttol@f1+1
  5087  001724  C0BA  F0C9         	movff	?___ftmul+2,___fttol@f1+2
  5088  001728  ECD0  F005         	call	___fttol	;wreg free
  5089  00172C  C0C7  F0D6         	movff	?___fttol,??_PWM_DutyCycle2
  5090  001730  C0C8  F0D7         	movff	?___fttol+1,??_PWM_DutyCycle2+1
  5091  001734  C0C9  F0D8         	movff	?___fttol+2,??_PWM_DutyCycle2+2
  5092  001738  C0CA  F0D9         	movff	?___fttol+3,??_PWM_DutyCycle2+3
  5093  00173C  C0D6  F0DD         	movff	??_PWM_DutyCycle2,PWM_DutyCycle2@DC
  5094  001740  C0D7  F0DE         	movff	??_PWM_DutyCycle2+1,PWM_DutyCycle2@DC+1
  5095                           
  5096                           ;pwm.c: 60: SetDCPWM2(DC);
  5097  001744  C0DD  F0AC         	movff	PWM_DutyCycle2@DC,SetDCPWM2@dutycycle
  5098  001748  C0DE  F0AD         	movff	PWM_DutyCycle2@DC+1,SetDCPWM2@dutycycle+1
  5099  00174C  EC5B  F00D         	call	_SetDCPWM2	;wreg free
  5100                           
  5101                           ;pwm.c: 61: return;
  5102  001750  0012               	return	
  5103  001752                     __end_of_PWM_DutyCycle2:
  5104                           	opt stack 0
  5105                           tblptru	equ	0xFF8
  5106                           tblptrh	equ	0xFF7
  5107                           tblptrl	equ	0xFF6
  5108                           tablat	equ	0xFF5
  5109                           prodh	equ	0xFF4
  5110                           prodl	equ	0xFF3
  5111                           intcon	equ	0xFF2
  5112                           indf0	equ	0xFEF
  5113                           postinc0	equ	0xFEE
  5114                           fsr0h	equ	0xFEA
  5115                           fsr0l	equ	0xFE9
  5116                           wreg	equ	0xFE8
  5117                           postinc1	equ	0xFE6
  5118                           postdec1	equ	0xFE5
  5119                           fsr1l	equ	0xFE1
  5120                           indf2	equ	0xFDF
  5121                           postinc2	equ	0xFDE
  5122                           postdec2	equ	0xFDD
  5123                           fsr2h	equ	0xFDA
  5124                           fsr2l	equ	0xFD9
  5125                           status	equ	0xFD8
  5126                           
  5127 ;; *************** function _SetDCPWM2 *****************
  5128 ;; Defined at:
  5129 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2setdc.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  5134 ;; Return value:  Size  Location     Type
  5135 ;;		None               void
  5136 ;; Registers used:
  5137 ;;		wreg, status,2, status,0
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5143 ;;      Params:         0       2       0       0       0       0       0       0       0
  5144 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5145 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5146 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5147 ;;Total ram usage:        6 bytes
  5148 ;; Hardware stack levels used:    1
  5149 ;; Hardware stack levels required when called:    5
  5150 ;; This function calls:
  5151 ;;		Nothing
  5152 ;; This function is called by:
  5153 ;;		_PWM_DutyCycle2
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text33
  5158  001AB6                     __ptext33:
  5159                           	opt stack 0
  5160  001AB6                     _SetDCPWM2:
  5161                           	opt stack 22
  5162                           
  5163                           ;incstack = 0
  5164  001AB6  0100               	movlb	0	; () banked
  5165  001AB8  C0AC  F0AE         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  5166  001ABC  0100               	movlb	0	; () banked
  5167  001ABE  C0AD  F0AF         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  5168  001AC2  0E06               	movlw	6
  5169  001AC4                     u1775:
  5170  001AC4  90D8               	bcf	status,0,c
  5171  001AC6  0100               	movlb	0	; () banked
  5172  001AC8  37AE               	rlcf	??_SetDCPWM2& (0+255),f,b
  5173  001ACA  37AF               	rlcf	(??_SetDCPWM2+1)& (0+255),f,b
  5174  001ACC  2EE8               	decfsz	wreg,f,c
  5175  001ACE  D7FA               	goto	u1775
  5176  001AD0  C0AE  F0B0         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  5177  001AD4  C0AF  F0B1         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  5178                           
  5179                           ; BSR set to: 0
  5180  001AD8  C0B1  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  5181  001ADC  C0B0  F0AE         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  5182  001AE0  0100               	movlb	0	; () banked
  5183  001AE2  90D8               	bcf	status,0,c
  5184  001AE4  33AE               	rrcf	??_SetDCPWM2& (0+255),f,b
  5185  001AE6  0100               	movlb	0	; () banked
  5186  001AE8  90D8               	bcf	status,0,c
  5187  001AEA  33AE               	rrcf	??_SetDCPWM2& (0+255),f,b
  5188  001AEC  0E30               	movlw	48
  5189  001AEE  0100               	movlb	0	; () banked
  5190  001AF0  17AE               	andwf	??_SetDCPWM2& (0+255),f,b
  5191  001AF2  50BA               	movf	4026,w,c	;volatile
  5192  001AF4  0BCF               	andlw	207
  5193  001AF6  0100               	movlb	0	; () banked
  5194  001AF8  11AE               	iorwf	??_SetDCPWM2& (0+255),w,b
  5195  001AFA  6EBA               	movwf	4026,c	;volatile
  5196                           
  5197                           ; BSR set to: 0
  5198  001AFC  0012               	return	
  5199  001AFE                     __end_of_SetDCPWM2:
  5200                           	opt stack 0
  5201                           tblptru	equ	0xFF8
  5202                           tblptrh	equ	0xFF7
  5203                           tblptrl	equ	0xFF6
  5204                           tablat	equ	0xFF5
  5205                           prodh	equ	0xFF4
  5206                           prodl	equ	0xFF3
  5207                           intcon	equ	0xFF2
  5208                           indf0	equ	0xFEF
  5209                           postinc0	equ	0xFEE
  5210                           fsr0h	equ	0xFEA
  5211                           fsr0l	equ	0xFE9
  5212                           wreg	equ	0xFE8
  5213                           postinc1	equ	0xFE6
  5214                           postdec1	equ	0xFE5
  5215                           fsr1l	equ	0xFE1
  5216                           indf2	equ	0xFDF
  5217                           postinc2	equ	0xFDE
  5218                           postdec2	equ	0xFDD
  5219                           fsr2h	equ	0xFDA
  5220                           fsr2l	equ	0xFD9
  5221                           status	equ	0xFD8
  5222                           
  5223 ;; *************** function _PWM_DutyCycle1 *****************
  5224 ;; Defined at:
  5225 ;;		line 33 in file "pwm.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  percentageDu    1    wreg     unsigned char 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  percentageDu    1   48[BANK0 ] unsigned char 
  5230 ;;  DC              2   49[BANK0 ] unsigned int 
  5231 ;;  DutyCycle       2   46[BANK0 ] unsigned int 
  5232 ;; Return value:  Size  Location     Type
  5233 ;;		None               void
  5234 ;; Registers used:
  5235 ;;		wreg, status,2, status,0, cstack
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5241 ;;      Params:         0       0       0       0       0       0       0       0       0
  5242 ;;      Locals:         0       5       0       0       0       0       0       0       0
  5243 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5244 ;;      Totals:         0       9       0       0       0       0       0       0       0
  5245 ;;Total ram usage:        9 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; Hardware stack levels required when called:    7
  5248 ;; This function calls:
  5249 ;;		_SetDCPWM1
  5250 ;;		___ftmul
  5251 ;;		___fttol
  5252 ;;		___lbtoft
  5253 ;; This function is called by:
  5254 ;;		_Inicializa_Driveby
  5255 ;;		_Comando_Tablet
  5256 ;;		_right
  5257 ;;		_left
  5258 ;;		_go_straight
  5259 ;;		_go_back
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263                           	psect	text34
  5264  001752                     __ptext34:
  5265                           	opt stack 0
  5266  001752                     _PWM_DutyCycle1:
  5267                           	opt stack 21
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;incstack = 0
  5271                           ;PWM_DutyCycle1@percentageDuty stored from wreg
  5272  001752  0100               	movlb	0	; () banked
  5273  001754  6FDC               	movwf	PWM_DutyCycle1@percentageDuty& (0+255),b
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;pwm.c: 35: unsigned int DC = 0, DutyCycle = 0;
  5277  001756  0E00               	movlw	0
  5278  001758  0100               	movlb	0	; () banked
  5279  00175A  6FDE               	movwf	(PWM_DutyCycle1@DC+1)& (0+255),b
  5280  00175C  0E00               	movlw	0
  5281  00175E  0100               	movlb	0	; () banked
  5282  001760  6FDD               	movwf	PWM_DutyCycle1@DC& (0+255),b
  5283  001762  0E00               	movlw	0
  5284  001764  0100               	movlb	0	; () banked
  5285  001766  6FDB               	movwf	(PWM_DutyCycle1@DutyCycle+1)& (0+255),b
  5286  001768  0E00               	movlw	0
  5287  00176A  0100               	movlb	0	; () banked
  5288  00176C  6FDA               	movwf	PWM_DutyCycle1@DutyCycle& (0+255),b
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;pwm.c: 37: DC = (unsigned int)(percentageDuty * 10.23);
  5292  00176E  0EAE               	movlw	174
  5293  001770  0100               	movlb	0	; () banked
  5294  001772  6FBB               	movwf	___ftmul@f2& (0+255),b
  5295  001774  0E23               	movlw	35
  5296  001776  0100               	movlb	0	; () banked
  5297  001778  6FBC               	movwf	(___ftmul@f2+1)& (0+255),b
  5298  00177A  0E41               	movlw	65
  5299  00177C  0100               	movlb	0	; () banked
  5300  00177E  6FBD               	movwf	(___ftmul@f2+2)& (0+255),b
  5301  001780  0100               	movlb	0	; () banked
  5302  001782  51DC               	movf	PWM_DutyCycle1@percentageDuty& (0+255),w,b
  5303  001784  EC44  F00E         	call	___lbtoft
  5304  001788  C0B4  F0B8         	movff	?___lbtoft,___ftmul@f1
  5305  00178C  C0B5  F0B9         	movff	?___lbtoft+1,___ftmul@f1+1
  5306  001790  C0B6  F0BA         	movff	?___lbtoft+2,___ftmul@f1+2
  5307  001794  EC1E  F005         	call	___ftmul	;wreg free
  5308  001798  C0B8  F0C7         	movff	?___ftmul,___fttol@f1
  5309  00179C  C0B9  F0C8         	movff	?___ftmul+1,___fttol@f1+1
  5310  0017A0  C0BA  F0C9         	movff	?___ftmul+2,___fttol@f1+2
  5311  0017A4  ECD0  F005         	call	___fttol	;wreg free
  5312  0017A8  C0C7  F0D6         	movff	?___fttol,??_PWM_DutyCycle1
  5313  0017AC  C0C8  F0D7         	movff	?___fttol+1,??_PWM_DutyCycle1+1
  5314  0017B0  C0C9  F0D8         	movff	?___fttol+2,??_PWM_DutyCycle1+2
  5315  0017B4  C0CA  F0D9         	movff	?___fttol+3,??_PWM_DutyCycle1+3
  5316  0017B8  C0D6  F0DD         	movff	??_PWM_DutyCycle1,PWM_DutyCycle1@DC
  5317  0017BC  C0D7  F0DE         	movff	??_PWM_DutyCycle1+1,PWM_DutyCycle1@DC+1
  5318                           
  5319                           ;pwm.c: 38: SetDCPWM1(DC);
  5320  0017C0  C0DD  F0AC         	movff	PWM_DutyCycle1@DC,SetDCPWM1@dutycycle
  5321  0017C4  C0DE  F0AD         	movff	PWM_DutyCycle1@DC+1,SetDCPWM1@dutycycle+1
  5322  0017C8  EC7F  F00D         	call	_SetDCPWM1	;wreg free
  5323                           
  5324                           ;pwm.c: 39: return;
  5325  0017CC  0012               	return	
  5326  0017CE                     __end_of_PWM_DutyCycle1:
  5327                           	opt stack 0
  5328                           tblptru	equ	0xFF8
  5329                           tblptrh	equ	0xFF7
  5330                           tblptrl	equ	0xFF6
  5331                           tablat	equ	0xFF5
  5332                           prodh	equ	0xFF4
  5333                           prodl	equ	0xFF3
  5334                           intcon	equ	0xFF2
  5335                           indf0	equ	0xFEF
  5336                           postinc0	equ	0xFEE
  5337                           fsr0h	equ	0xFEA
  5338                           fsr0l	equ	0xFE9
  5339                           wreg	equ	0xFE8
  5340                           postinc1	equ	0xFE6
  5341                           postdec1	equ	0xFE5
  5342                           fsr1l	equ	0xFE1
  5343                           indf2	equ	0xFDF
  5344                           postinc2	equ	0xFDE
  5345                           postdec2	equ	0xFDD
  5346                           fsr2h	equ	0xFDA
  5347                           fsr2l	equ	0xFD9
  5348                           status	equ	0xFD8
  5349                           
  5350 ;; *************** function ___lbtoft *****************
  5351 ;; Defined at:
  5352 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lbtoft.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;  c               1    wreg     unsigned char 
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;  c               1   11[BANK0 ] unsigned char 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  3    8[BANK0 ] float 
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0, cstack
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5366 ;;      Params:         0       3       0       0       0       0       0       0       0
  5367 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5369 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5370 ;;Total ram usage:        4 bytes
  5371 ;; Hardware stack levels used:    1
  5372 ;; Hardware stack levels required when called:    6
  5373 ;; This function calls:
  5374 ;;		___ftpack
  5375 ;; This function is called by:
  5376 ;;		_PWM_DutyCycle1
  5377 ;;		_PWM_DutyCycle2
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           	psect	text35
  5382  001C88                     __ptext35:
  5383                           	opt stack 0
  5384  001C88                     ___lbtoft:
  5385                           	opt stack 21
  5386                           
  5387                           ;incstack = 0
  5388                           ;___lbtoft@c stored from wreg
  5389  001C88  0100               	movlb	0	; () banked
  5390  001C8A  6FB7               	movwf	___lbtoft@c& (0+255),b
  5391                           
  5392                           ; BSR set to: 0
  5393  001C8C  0100               	movlb	0	; () banked
  5394  001C8E  51B7               	movf	___lbtoft@c& (0+255),w,b
  5395  001C90  0100               	movlb	0	; () banked
  5396  001C92  6FAC               	movwf	___ftpack@arg& (0+255),b
  5397  001C94  0100               	movlb	0	; () banked
  5398  001C96  6BAD               	clrf	(___ftpack@arg+1)& (0+255),b
  5399  001C98  0100               	movlb	0	; () banked
  5400  001C9A  6BAE               	clrf	(___ftpack@arg+2)& (0+255),b
  5401  001C9C  0E8E               	movlw	142
  5402  001C9E  0100               	movlb	0	; () banked
  5403  001CA0  6FAF               	movwf	___ftpack@exp& (0+255),b
  5404  001CA2  0E00               	movlw	0
  5405  001CA4  0100               	movlb	0	; () banked
  5406  001CA6  6FB0               	movwf	___ftpack@sign& (0+255),b
  5407  001CA8  ECFE  F006         	call	___ftpack	;wreg free
  5408  001CAC  C0AC  F0B4         	movff	?___ftpack,?___lbtoft
  5409  001CB0  C0AD  F0B5         	movff	?___ftpack+1,?___lbtoft+1
  5410  001CB4  C0AE  F0B6         	movff	?___ftpack+2,?___lbtoft+2
  5411  001CB8  0012               	return	
  5412  001CBA                     __end_of___lbtoft:
  5413                           	opt stack 0
  5414                           tblptru	equ	0xFF8
  5415                           tblptrh	equ	0xFF7
  5416                           tblptrl	equ	0xFF6
  5417                           tablat	equ	0xFF5
  5418                           prodh	equ	0xFF4
  5419                           prodl	equ	0xFF3
  5420                           intcon	equ	0xFF2
  5421                           indf0	equ	0xFEF
  5422                           postinc0	equ	0xFEE
  5423                           fsr0h	equ	0xFEA
  5424                           fsr0l	equ	0xFE9
  5425                           wreg	equ	0xFE8
  5426                           postinc1	equ	0xFE6
  5427                           postdec1	equ	0xFE5
  5428                           fsr1l	equ	0xFE1
  5429                           indf2	equ	0xFDF
  5430                           postinc2	equ	0xFDE
  5431                           postdec2	equ	0xFDD
  5432                           fsr2h	equ	0xFDA
  5433                           fsr2l	equ	0xFD9
  5434                           status	equ	0xFD8
  5435                           
  5436 ;; *************** function ___fttol *****************
  5437 ;; Defined at:
  5438 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;  f1              3   27[BANK0 ] float 
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;  lval            4   37[BANK0 ] unsigned long 
  5443 ;;  exp1            1   41[BANK0 ] unsigned char 
  5444 ;;  sign1           1   36[BANK0 ] unsigned char 
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  4   27[BANK0 ] long 
  5447 ;; Registers used:
  5448 ;;		wreg, status,2, status,0
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5454 ;;      Params:         0       4       0       0       0       0       0       0       0
  5455 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5456 ;;      Temps:          0       5       0       0       0       0       0       0       0
  5457 ;;      Totals:         0      15       0       0       0       0       0       0       0
  5458 ;;Total ram usage:       15 bytes
  5459 ;; Hardware stack levels used:    1
  5460 ;; Hardware stack levels required when called:    5
  5461 ;; This function calls:
  5462 ;;		Nothing
  5463 ;; This function is called by:
  5464 ;;		_PWM_DutyCycle1
  5465 ;;		_PWM_DutyCycle2
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           	psect	text36
  5470  000BA0                     __ptext36:
  5471                           	opt stack 0
  5472  000BA0                     ___fttol:
  5473                           	opt stack 22
  5474                           
  5475                           ;incstack = 0
  5476  000BA0  0100               	movlb	0	; () banked
  5477  000BA2  C0C9  F0CB         	movff	___fttol@f1+2,??___fttol
  5478  000BA6  0100               	movlb	0	; () banked
  5479  000BA8  6BCC               	clrf	(??___fttol+1)& (0+255),b
  5480  000BAA  6BCD               	clrf	(??___fttol+2)& (0+255),b
  5481  000BAC  0100               	movlb	0	; () banked
  5482  000BAE  35C8               	rlcf	(___fttol@f1+1)& (0+255),w,b
  5483  000BB0  0100               	movlb	0	; () banked
  5484  000BB2  37CB               	rlcf	??___fttol& (0+255),f,b
  5485  000BB4  E301               	bnc	u1841
  5486  000BB6  81CC               	bsf	(??___fttol+1)& (0+255),0,b
  5487  000BB8                     u1841:
  5488  000BB8  0100               	movlb	0	; () banked
  5489  000BBA  51CB               	movf	??___fttol& (0+255),w,b
  5490  000BBC  0100               	movlb	0	; () banked
  5491  000BBE  6FD5               	movwf	___fttol@exp1& (0+255),b
  5492  000BC0  0100               	movlb	0	; () banked
  5493  000BC2  67D5               	tstfsz	___fttol@exp1& (0+255),b
  5494  000BC4  D001               	goto	l2392
  5495  000BC6  D059               	goto	u1890
  5496  000BC8                     l2392:
  5497                           
  5498                           ; BSR set to: 0
  5499  000BC8  0E17               	movlw	23
  5500  000BCA  0100               	movlb	0	; () banked
  5501  000BCC  6FCB               	movwf	??___fttol& (0+255),b
  5502  000BCE  0100               	movlb	0	; () banked
  5503  000BD0  C0C7  F0CC         	movff	___fttol@f1,??___fttol+1
  5504  000BD4  0100               	movlb	0	; () banked
  5505  000BD6  C0C8  F0CD         	movff	___fttol@f1+1,??___fttol+2
  5506  000BDA  0100               	movlb	0	; () banked
  5507  000BDC  C0C9  F0CE         	movff	___fttol@f1+2,??___fttol+3
  5508  000BE0  0100               	movlb	0	; () banked
  5509  000BE2  29CB               	incf	??___fttol& (0+255),w,b
  5510  000BE4  0100               	movlb	0	; () banked
  5511  000BE6  6FCF               	movwf	(??___fttol+4)& (0+255),b
  5512  000BE8  D005               	goto	u1860
  5513  000BEA                     u1865:
  5514  000BEA  0100               	movlb	0	; () banked
  5515  000BEC  90D8               	bcf	status,0,c
  5516  000BEE  33CE               	rrcf	(??___fttol+3)& (0+255),f,b
  5517  000BF0  33CD               	rrcf	(??___fttol+2)& (0+255),f,b
  5518  000BF2  33CC               	rrcf	(??___fttol+1)& (0+255),f,b
  5519  000BF4                     u1860:
  5520  000BF4  0100               	movlb	0	; () banked
  5521  000BF6  2FCF               	decfsz	(??___fttol+4)& (0+255),f,b
  5522  000BF8  D7F8               	goto	u1865
  5523  000BFA  0100               	movlb	0	; () banked
  5524  000BFC  51CC               	movf	(??___fttol+1)& (0+255),w,b
  5525  000BFE  0100               	movlb	0	; () banked
  5526  000C00  6FD0               	movwf	___fttol@sign1& (0+255),b
  5527                           
  5528                           ; BSR set to: 0
  5529  000C02  0100               	movlb	0	; () banked
  5530  000C04  8FC8               	bsf	(___fttol@f1+1)& (0+255),7,b
  5531                           
  5532                           ; BSR set to: 0
  5533  000C06  0EFF               	movlw	255
  5534  000C08  0100               	movlb	0	; () banked
  5535  000C0A  17C7               	andwf	___fttol@f1& (0+255),f,b
  5536  000C0C  0EFF               	movlw	255
  5537  000C0E  0100               	movlb	0	; () banked
  5538  000C10  17C8               	andwf	(___fttol@f1+1)& (0+255),f,b
  5539  000C12  0E00               	movlw	0
  5540  000C14  0100               	movlb	0	; () banked
  5541  000C16  17C9               	andwf	(___fttol@f1+2)& (0+255),f,b
  5542                           
  5543                           ; BSR set to: 0
  5544  000C18  0100               	movlb	0	; () banked
  5545  000C1A  51C7               	movf	___fttol@f1& (0+255),w,b
  5546  000C1C  0100               	movlb	0	; () banked
  5547  000C1E  6FD1               	movwf	___fttol@lval& (0+255),b
  5548  000C20  0100               	movlb	0	; () banked
  5549  000C22  51C8               	movf	(___fttol@f1+1)& (0+255),w,b
  5550  000C24  0100               	movlb	0	; () banked
  5551  000C26  6FD2               	movwf	(___fttol@lval+1)& (0+255),b
  5552  000C28  0100               	movlb	0	; () banked
  5553  000C2A  51C9               	movf	(___fttol@f1+2)& (0+255),w,b
  5554  000C2C  0100               	movlb	0	; () banked
  5555  000C2E  6FD3               	movwf	(___fttol@lval+2)& (0+255),b
  5556  000C30  0100               	movlb	0	; () banked
  5557  000C32  6BD4               	clrf	(___fttol@lval+3)& (0+255),b
  5558                           
  5559                           ; BSR set to: 0
  5560  000C34  0E8E               	movlw	142
  5561  000C36  0100               	movlb	0	; () banked
  5562  000C38  5FD5               	subwf	___fttol@exp1& (0+255),f,b
  5563                           
  5564                           ; BSR set to: 0
  5565  000C3A  0100               	movlb	0	; () banked
  5566  000C3C  AFD5               	btfss	___fttol@exp1& (0+255),7,b
  5567  000C3E  D019               	goto	l2414
  5568                           
  5569                           ; BSR set to: 0
  5570  000C40  0100               	movlb	0	; () banked
  5571  000C42  51D5               	movf	___fttol@exp1& (0+255),w,b
  5572  000C44  0A80               	xorlw	128
  5573  000C46  0100               	movlb	0	; () banked
  5574  000C48  6FCB               	movwf	??___fttol& (0+255),b
  5575  000C4A  0EF1               	movlw	241
  5576  000C4C  0A80               	xorlw	128
  5577  000C4E  0100               	movlb	0	; () banked
  5578  000C50  5DCB               	subwf	??___fttol& (0+255),w,b
  5579  000C52  A0D8               	btfss	status,0,c
  5580  000C54  D012               	goto	u1890
  5581  000C56                     l2410:
  5582                           
  5583                           ; BSR set to: 0
  5584  000C56  0100               	movlb	0	; () banked
  5585  000C58  90D8               	bcf	status,0,c
  5586  000C5A  0100               	movlb	0	; () banked
  5587  000C5C  33D4               	rrcf	(___fttol@lval+3)& (0+255),f,b
  5588  000C5E  0100               	movlb	0	; () banked
  5589  000C60  33D3               	rrcf	(___fttol@lval+2)& (0+255),f,b
  5590  000C62  0100               	movlb	0	; () banked
  5591  000C64  33D2               	rrcf	(___fttol@lval+1)& (0+255),f,b
  5592  000C66  0100               	movlb	0	; () banked
  5593  000C68  33D1               	rrcf	___fttol@lval& (0+255),f,b
  5594                           
  5595                           ; BSR set to: 0
  5596  000C6A  0100               	movlb	0	; () banked
  5597  000C6C  3FD5               	incfsz	___fttol@exp1& (0+255),f,b
  5598  000C6E  D7F3               	goto	l2410
  5599  000C70  D020               	goto	l2424
  5600  000C72                     l2414:
  5601                           
  5602                           ; BSR set to: 0
  5603  000C72  0E17               	movlw	23
  5604  000C74  0100               	movlb	0	; () banked
  5605  000C76  65D5               	cpfsgt	___fttol@exp1& (0+255),b
  5606  000C78  D019               	goto	l2422
  5607  000C7A                     u1890:
  5608                           
  5609                           ; BSR set to: 0
  5610  000C7A  0E00               	movlw	0
  5611  000C7C  0100               	movlb	0	; () banked
  5612  000C7E  6FC7               	movwf	?___fttol& (0+255),b
  5613  000C80  0E00               	movlw	0
  5614  000C82  0100               	movlb	0	; () banked
  5615  000C84  6FC8               	movwf	(?___fttol+1)& (0+255),b
  5616  000C86  0E00               	movlw	0
  5617  000C88  0100               	movlb	0	; () banked
  5618  000C8A  6FC9               	movwf	(?___fttol+2)& (0+255),b
  5619  000C8C  0E00               	movlw	0
  5620  000C8E  0100               	movlb	0	; () banked
  5621  000C90  6FCA               	movwf	(?___fttol+3)& (0+255),b
  5622  000C92  D02A               	goto	l999
  5623  000C94                     l2420:
  5624                           
  5625                           ; BSR set to: 0
  5626  000C94  0100               	movlb	0	; () banked
  5627  000C96  90D8               	bcf	status,0,c
  5628  000C98  0100               	movlb	0	; () banked
  5629  000C9A  37D1               	rlcf	___fttol@lval& (0+255),f,b
  5630  000C9C  0100               	movlb	0	; () banked
  5631  000C9E  37D2               	rlcf	(___fttol@lval+1)& (0+255),f,b
  5632  000CA0  0100               	movlb	0	; () banked
  5633  000CA2  37D3               	rlcf	(___fttol@lval+2)& (0+255),f,b
  5634  000CA4  0100               	movlb	0	; () banked
  5635  000CA6  37D4               	rlcf	(___fttol@lval+3)& (0+255),f,b
  5636  000CA8  0100               	movlb	0	; () banked
  5637  000CAA  07D5               	decf	___fttol@exp1& (0+255),f,b
  5638  000CAC                     l2422:
  5639                           
  5640                           ; BSR set to: 0
  5641  000CAC  0100               	movlb	0	; () banked
  5642  000CAE  67D5               	tstfsz	___fttol@exp1& (0+255),b
  5643  000CB0  D7F1               	goto	l2420
  5644  000CB2                     l2424:
  5645                           
  5646                           ; BSR set to: 0
  5647  000CB2  0100               	movlb	0	; () banked
  5648  000CB4  51D0               	movf	___fttol@sign1& (0+255),w,b
  5649  000CB6  B4D8               	btfsc	status,2,c
  5650  000CB8  D00F               	goto	l2428
  5651                           
  5652                           ; BSR set to: 0
  5653  000CBA  0100               	movlb	0	; () banked
  5654  000CBC  1FD4               	comf	(___fttol@lval+3)& (0+255),f,b
  5655  000CBE  0100               	movlb	0	; () banked
  5656  000CC0  1FD3               	comf	(___fttol@lval+2)& (0+255),f,b
  5657  000CC2  0100               	movlb	0	; () banked
  5658  000CC4  1FD2               	comf	(___fttol@lval+1)& (0+255),f,b
  5659  000CC6  0100               	movlb	0	; () banked
  5660  000CC8  6DD1               	negf	___fttol@lval& (0+255),b
  5661  000CCA  0E00               	movlw	0
  5662  000CCC  0100               	movlb	0	; () banked
  5663  000CCE  23D2               	addwfc	(___fttol@lval+1)& (0+255),f,b
  5664  000CD0  0100               	movlb	0	; () banked
  5665  000CD2  23D3               	addwfc	(___fttol@lval+2)& (0+255),f,b
  5666  000CD4  0100               	movlb	0	; () banked
  5667  000CD6  23D4               	addwfc	(___fttol@lval+3)& (0+255),f,b
  5668  000CD8                     l2428:
  5669                           
  5670                           ; BSR set to: 0
  5671  000CD8  C0D1  F0C7         	movff	___fttol@lval,?___fttol
  5672  000CDC  C0D2  F0C8         	movff	___fttol@lval+1,?___fttol+1
  5673  000CE0  C0D3  F0C9         	movff	___fttol@lval+2,?___fttol+2
  5674  000CE4  C0D4  F0CA         	movff	___fttol@lval+3,?___fttol+3
  5675  000CE8                     l999:
  5676                           
  5677                           ; BSR set to: 0
  5678  000CE8  0012               	return	
  5679  000CEA                     __end_of___fttol:
  5680                           	opt stack 0
  5681                           tblptru	equ	0xFF8
  5682                           tblptrh	equ	0xFF7
  5683                           tblptrl	equ	0xFF6
  5684                           tablat	equ	0xFF5
  5685                           prodh	equ	0xFF4
  5686                           prodl	equ	0xFF3
  5687                           intcon	equ	0xFF2
  5688                           indf0	equ	0xFEF
  5689                           postinc0	equ	0xFEE
  5690                           fsr0h	equ	0xFEA
  5691                           fsr0l	equ	0xFE9
  5692                           wreg	equ	0xFE8
  5693                           postinc1	equ	0xFE6
  5694                           postdec1	equ	0xFE5
  5695                           fsr1l	equ	0xFE1
  5696                           indf2	equ	0xFDF
  5697                           postinc2	equ	0xFDE
  5698                           postdec2	equ	0xFDD
  5699                           fsr2h	equ	0xFDA
  5700                           fsr2l	equ	0xFD9
  5701                           status	equ	0xFD8
  5702                           
  5703 ;; *************** function ___ftmul *****************
  5704 ;; Defined at:
  5705 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;  f1              3   12[BANK0 ] float 
  5708 ;;  f2              3   15[BANK0 ] float 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  5711 ;;  sign            1   26[BANK0 ] unsigned char 
  5712 ;;  cntr            1   25[BANK0 ] unsigned char 
  5713 ;;  exp             1   21[BANK0 ] unsigned char 
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  3   12[BANK0 ] float 
  5716 ;; Registers used:
  5717 ;;		wreg, status,2, status,0, cstack
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5723 ;;      Params:         0       6       0       0       0       0       0       0       0
  5724 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5725 ;;      Temps:          0       3       0       0       0       0       0       0       0
  5726 ;;      Totals:         0      15       0       0       0       0       0       0       0
  5727 ;;Total ram usage:       15 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:    6
  5730 ;; This function calls:
  5731 ;;		___ftpack
  5732 ;; This function is called by:
  5733 ;;		_PWM_DutyCycle1
  5734 ;;		_PWM_DutyCycle2
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           	psect	text37
  5739  000A3C                     __ptext37:
  5740                           	opt stack 0
  5741  000A3C                     ___ftmul:
  5742                           	opt stack 21
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;incstack = 0
  5746  000A3C  0100               	movlb	0	; () banked
  5747  000A3E  C0BA  F0BE         	movff	___ftmul@f1+2,??___ftmul
  5748  000A42  0100               	movlb	0	; () banked
  5749  000A44  6BBF               	clrf	(??___ftmul+1)& (0+255),b
  5750  000A46  6BC0               	clrf	(??___ftmul+2)& (0+255),b
  5751  000A48  0100               	movlb	0	; () banked
  5752  000A4A  35B9               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  5753  000A4C  0100               	movlb	0	; () banked
  5754  000A4E  37BE               	rlcf	??___ftmul& (0+255),f,b
  5755  000A50  E301               	bnc	u1781
  5756  000A52  81BF               	bsf	(??___ftmul+1)& (0+255),0,b
  5757  000A54                     u1781:
  5758  000A54  0100               	movlb	0	; () banked
  5759  000A56  51BE               	movf	??___ftmul& (0+255),w,b
  5760  000A58  0100               	movlb	0	; () banked
  5761  000A5A  6FC1               	movwf	___ftmul@exp& (0+255),b
  5762  000A5C  0100               	movlb	0	; () banked
  5763  000A5E  67C1               	tstfsz	___ftmul@exp& (0+255),b
  5764  000A60  D001               	goto	l2344
  5765  000A62  D013               	goto	u1810
  5766  000A64                     l2344:
  5767                           
  5768                           ; BSR set to: 0
  5769  000A64  0100               	movlb	0	; () banked
  5770  000A66  C0BD  F0BE         	movff	___ftmul@f2+2,??___ftmul
  5771  000A6A  0100               	movlb	0	; () banked
  5772  000A6C  6BBF               	clrf	(??___ftmul+1)& (0+255),b
  5773  000A6E  6BC0               	clrf	(??___ftmul+2)& (0+255),b
  5774  000A70  0100               	movlb	0	; () banked
  5775  000A72  35BC               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  5776  000A74  0100               	movlb	0	; () banked
  5777  000A76  37BE               	rlcf	??___ftmul& (0+255),f,b
  5778  000A78  E301               	bnc	u1801
  5779  000A7A  81BF               	bsf	(??___ftmul+1)& (0+255),0,b
  5780  000A7C                     u1801:
  5781  000A7C  0100               	movlb	0	; () banked
  5782  000A7E  51BE               	movf	??___ftmul& (0+255),w,b
  5783  000A80  0100               	movlb	0	; () banked
  5784  000A82  6FC6               	movwf	___ftmul@sign& (0+255),b
  5785  000A84  0100               	movlb	0	; () banked
  5786  000A86  67C6               	tstfsz	___ftmul@sign& (0+255),b
  5787  000A88  D00A               	goto	l2350
  5788  000A8A                     u1810:
  5789                           
  5790                           ; BSR set to: 0
  5791  000A8A  0E00               	movlw	0
  5792  000A8C  0100               	movlb	0	; () banked
  5793  000A8E  6FB8               	movwf	?___ftmul& (0+255),b
  5794  000A90  0E00               	movlw	0
  5795  000A92  0100               	movlb	0	; () banked
  5796  000A94  6FB9               	movwf	(?___ftmul+1)& (0+255),b
  5797  000A96  0E00               	movlw	0
  5798  000A98  0100               	movlb	0	; () banked
  5799  000A9A  6FBA               	movwf	(?___ftmul+2)& (0+255),b
  5800  000A9C  D080               	goto	l979
  5801  000A9E                     l2350:
  5802                           
  5803                           ; BSR set to: 0
  5804  000A9E  0100               	movlb	0	; () banked
  5805  000AA0  51C6               	movf	___ftmul@sign& (0+255),w,b
  5806  000AA2  0F7B               	addlw	123
  5807  000AA4  0100               	movlb	0	; () banked
  5808  000AA6  27C1               	addwf	___ftmul@exp& (0+255),f,b
  5809                           
  5810                           ; BSR set to: 0
  5811  000AA8  C0BA  F0C6         	movff	___ftmul@f1+2,___ftmul@sign
  5812  000AAC  0100               	movlb	0	; () banked
  5813  000AAE  51BD               	movf	(___ftmul@f2+2)& (0+255),w,b
  5814  000AB0  0100               	movlb	0	; () banked
  5815  000AB2  1BC6               	xorwf	___ftmul@sign& (0+255),f,b
  5816  000AB4  0E80               	movlw	128
  5817  000AB6  0100               	movlb	0	; () banked
  5818  000AB8  17C6               	andwf	___ftmul@sign& (0+255),f,b
  5819                           
  5820                           ; BSR set to: 0
  5821  000ABA  0100               	movlb	0	; () banked
  5822  000ABC  8FB9               	bsf	(___ftmul@f1+1)& (0+255),7,b
  5823                           
  5824                           ; BSR set to: 0
  5825  000ABE  0100               	movlb	0	; () banked
  5826  000AC0  8FBC               	bsf	(___ftmul@f2+1)& (0+255),7,b
  5827                           
  5828                           ; BSR set to: 0
  5829  000AC2  0EFF               	movlw	255
  5830  000AC4  0100               	movlb	0	; () banked
  5831  000AC6  17BB               	andwf	___ftmul@f2& (0+255),f,b
  5832  000AC8  0EFF               	movlw	255
  5833  000ACA  0100               	movlb	0	; () banked
  5834  000ACC  17BC               	andwf	(___ftmul@f2+1)& (0+255),f,b
  5835  000ACE  0E00               	movlw	0
  5836  000AD0  0100               	movlb	0	; () banked
  5837  000AD2  17BD               	andwf	(___ftmul@f2+2)& (0+255),f,b
  5838                           
  5839                           ; BSR set to: 0
  5840  000AD4  0E00               	movlw	0
  5841  000AD6  0100               	movlb	0	; () banked
  5842  000AD8  6FC2               	movwf	___ftmul@f3_as_product& (0+255),b
  5843  000ADA  0E00               	movlw	0
  5844  000ADC  0100               	movlb	0	; () banked
  5845  000ADE  6FC3               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  5846  000AE0  0E00               	movlw	0
  5847  000AE2  0100               	movlb	0	; () banked
  5848  000AE4  6FC4               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  5849                           
  5850                           ; BSR set to: 0
  5851  000AE6  0E07               	movlw	7
  5852  000AE8  0100               	movlb	0	; () banked
  5853  000AEA  6FC5               	movwf	___ftmul@cntr& (0+255),b
  5854  000AEC                     l2364:
  5855                           
  5856                           ; BSR set to: 0
  5857  000AEC  0100               	movlb	0	; () banked
  5858  000AEE  A1B8               	btfss	___ftmul@f1& (0+255),0,b
  5859  000AF0  D00C               	goto	l2368
  5860                           
  5861                           ; BSR set to: 0
  5862  000AF2  0100               	movlb	0	; () banked
  5863  000AF4  51BB               	movf	___ftmul@f2& (0+255),w,b
  5864  000AF6  0100               	movlb	0	; () banked
  5865  000AF8  27C2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5866  000AFA  0100               	movlb	0	; () banked
  5867  000AFC  51BC               	movf	(___ftmul@f2+1)& (0+255),w,b
  5868  000AFE  0100               	movlb	0	; () banked
  5869  000B00  23C3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5870  000B02  0100               	movlb	0	; () banked
  5871  000B04  51BD               	movf	(___ftmul@f2+2)& (0+255),w,b
  5872  000B06  0100               	movlb	0	; () banked
  5873  000B08  23C4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5874  000B0A                     l2368:
  5875                           
  5876                           ; BSR set to: 0
  5877  000B0A  0100               	movlb	0	; () banked
  5878  000B0C  90D8               	bcf	status,0,c
  5879  000B0E  0100               	movlb	0	; () banked
  5880  000B10  33BA               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5881  000B12  0100               	movlb	0	; () banked
  5882  000B14  33B9               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5883  000B16  0100               	movlb	0	; () banked
  5884  000B18  33B8               	rrcf	___ftmul@f1& (0+255),f,b
  5885  000B1A  0100               	movlb	0	; () banked
  5886  000B1C  90D8               	bcf	status,0,c
  5887  000B1E  0100               	movlb	0	; () banked
  5888  000B20  37BB               	rlcf	___ftmul@f2& (0+255),f,b
  5889  000B22  0100               	movlb	0	; () banked
  5890  000B24  37BC               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  5891  000B26  0100               	movlb	0	; () banked
  5892  000B28  37BD               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  5893                           
  5894                           ; BSR set to: 0
  5895  000B2A  0100               	movlb	0	; () banked
  5896  000B2C  2FC5               	decfsz	___ftmul@cntr& (0+255),f,b
  5897  000B2E  D7DE               	goto	l2364
  5898                           
  5899                           ; BSR set to: 0
  5900                           
  5901                           ; BSR set to: 0
  5902  000B30  0E09               	movlw	9
  5903  000B32  0100               	movlb	0	; () banked
  5904  000B34  6FC5               	movwf	___ftmul@cntr& (0+255),b
  5905  000B36                     l2374:
  5906                           
  5907                           ; BSR set to: 0
  5908  000B36  0100               	movlb	0	; () banked
  5909  000B38  A1B8               	btfss	___ftmul@f1& (0+255),0,b
  5910  000B3A  D00C               	goto	l2378
  5911                           
  5912                           ; BSR set to: 0
  5913  000B3C  0100               	movlb	0	; () banked
  5914  000B3E  51BB               	movf	___ftmul@f2& (0+255),w,b
  5915  000B40  0100               	movlb	0	; () banked
  5916  000B42  27C2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5917  000B44  0100               	movlb	0	; () banked
  5918  000B46  51BC               	movf	(___ftmul@f2+1)& (0+255),w,b
  5919  000B48  0100               	movlb	0	; () banked
  5920  000B4A  23C3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5921  000B4C  0100               	movlb	0	; () banked
  5922  000B4E  51BD               	movf	(___ftmul@f2+2)& (0+255),w,b
  5923  000B50  0100               	movlb	0	; () banked
  5924  000B52  23C4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5925  000B54                     l2378:
  5926                           
  5927                           ; BSR set to: 0
  5928  000B54  0100               	movlb	0	; () banked
  5929  000B56  90D8               	bcf	status,0,c
  5930  000B58  0100               	movlb	0	; () banked
  5931  000B5A  33BA               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5932  000B5C  0100               	movlb	0	; () banked
  5933  000B5E  33B9               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5934  000B60  0100               	movlb	0	; () banked
  5935  000B62  33B8               	rrcf	___ftmul@f1& (0+255),f,b
  5936  000B64  0100               	movlb	0	; () banked
  5937  000B66  90D8               	bcf	status,0,c
  5938  000B68  0100               	movlb	0	; () banked
  5939  000B6A  33C4               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  5940  000B6C  0100               	movlb	0	; () banked
  5941  000B6E  33C3               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  5942  000B70  0100               	movlb	0	; () banked
  5943  000B72  33C2               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  5944                           
  5945                           ; BSR set to: 0
  5946  000B74  0100               	movlb	0	; () banked
  5947  000B76  2FC5               	decfsz	___ftmul@cntr& (0+255),f,b
  5948  000B78  D7DE               	goto	l2374
  5949                           
  5950                           ; BSR set to: 0
  5951                           
  5952                           ; BSR set to: 0
  5953  000B7A  C0C2  F0AC         	movff	___ftmul@f3_as_product,___ftpack@arg
  5954  000B7E  C0C3  F0AD         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5955  000B82  C0C4  F0AE         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5956  000B86  C0C1  F0AF         	movff	___ftmul@exp,___ftpack@exp
  5957  000B8A  C0C6  F0B0         	movff	___ftmul@sign,___ftpack@sign
  5958  000B8E  ECFE  F006         	call	___ftpack	;wreg free
  5959  000B92  C0AC  F0B8         	movff	?___ftpack,?___ftmul
  5960  000B96  C0AD  F0B9         	movff	?___ftpack+1,?___ftmul+1
  5961  000B9A  C0AE  F0BA         	movff	?___ftpack+2,?___ftmul+2
  5962  000B9E                     l979:
  5963  000B9E  0012               	return	
  5964  000BA0                     __end_of___ftmul:
  5965                           	opt stack 0
  5966                           tblptru	equ	0xFF8
  5967                           tblptrh	equ	0xFF7
  5968                           tblptrl	equ	0xFF6
  5969                           tablat	equ	0xFF5
  5970                           prodh	equ	0xFF4
  5971                           prodl	equ	0xFF3
  5972                           intcon	equ	0xFF2
  5973                           indf0	equ	0xFEF
  5974                           postinc0	equ	0xFEE
  5975                           fsr0h	equ	0xFEA
  5976                           fsr0l	equ	0xFE9
  5977                           wreg	equ	0xFE8
  5978                           postinc1	equ	0xFE6
  5979                           postdec1	equ	0xFE5
  5980                           fsr1l	equ	0xFE1
  5981                           indf2	equ	0xFDF
  5982                           postinc2	equ	0xFDE
  5983                           postdec2	equ	0xFDD
  5984                           fsr2h	equ	0xFDA
  5985                           fsr2l	equ	0xFD9
  5986                           status	equ	0xFD8
  5987                           
  5988 ;; *************** function ___ftpack *****************
  5989 ;; Defined at:
  5990 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;  arg             3    0[BANK0 ] unsigned um
  5993 ;;  exp             1    3[BANK0 ] unsigned char 
  5994 ;;  sign            1    4[BANK0 ] unsigned char 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;		None
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  3    0[BANK0 ] float 
  5999 ;; Registers used:
  6000 ;;		wreg, status,2, status,0
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6006 ;;      Params:         0       5       0       0       0       0       0       0       0
  6007 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6008 ;;      Temps:          0       3       0       0       0       0       0       0       0
  6009 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6010 ;;Total ram usage:        8 bytes
  6011 ;; Hardware stack levels used:    1
  6012 ;; Hardware stack levels required when called:    5
  6013 ;; This function calls:
  6014 ;;		Nothing
  6015 ;; This function is called by:
  6016 ;;		___ftmul
  6017 ;;		___lbtoft
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           	psect	text38
  6022  000DFC                     __ptext38:
  6023                           	opt stack 0
  6024  000DFC                     ___ftpack:
  6025                           	opt stack 21
  6026                           
  6027                           ;incstack = 0
  6028  000DFC  0100               	movlb	0	; () banked
  6029  000DFE  51AF               	movf	___ftpack@exp& (0+255),w,b
  6030  000E00  B4D8               	btfsc	status,2,c
  6031  000E02  D008               	goto	l2298
  6032                           
  6033                           ; BSR set to: 0
  6034  000E04  0100               	movlb	0	; () banked
  6035  000E06  51AC               	movf	___ftpack@arg& (0+255),w,b
  6036  000E08  0100               	movlb	0	; () banked
  6037  000E0A  11AD               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  6038  000E0C  0100               	movlb	0	; () banked
  6039  000E0E  11AE               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  6040  000E10  A4D8               	btfss	status,2,c
  6041  000E12  D014               	goto	l2304
  6042  000E14                     l2298:
  6043                           
  6044                           ; BSR set to: 0
  6045  000E14  0E00               	movlw	0
  6046  000E16  0100               	movlb	0	; () banked
  6047  000E18  6FAC               	movwf	?___ftpack& (0+255),b
  6048  000E1A  0E00               	movlw	0
  6049  000E1C  0100               	movlb	0	; () banked
  6050  000E1E  6FAD               	movwf	(?___ftpack+1)& (0+255),b
  6051  000E20  0E00               	movlw	0
  6052  000E22  0100               	movlb	0	; () banked
  6053  000E24  6FAE               	movwf	(?___ftpack+2)& (0+255),b
  6054  000E26  D06E               	goto	l895
  6055  000E28                     l2302:
  6056                           
  6057                           ; BSR set to: 0
  6058  000E28  0100               	movlb	0	; () banked
  6059  000E2A  2BAF               	incf	___ftpack@exp& (0+255),f,b
  6060  000E2C  0100               	movlb	0	; () banked
  6061  000E2E  90D8               	bcf	status,0,c
  6062  000E30  0100               	movlb	0	; () banked
  6063  000E32  33AE               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  6064  000E34  0100               	movlb	0	; () banked
  6065  000E36  33AD               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  6066  000E38  0100               	movlb	0	; () banked
  6067  000E3A  33AC               	rrcf	___ftpack@arg& (0+255),f,b
  6068  000E3C                     l2304:
  6069                           
  6070                           ; BSR set to: 0
  6071  000E3C  0E00               	movlw	0
  6072  000E3E  0100               	movlb	0	; () banked
  6073  000E40  15AC               	andwf	___ftpack@arg& (0+255),w,b
  6074  000E42  0100               	movlb	0	; () banked
  6075  000E44  6FB1               	movwf	??___ftpack& (0+255),b
  6076  000E46  0E00               	movlw	0
  6077  000E48  0100               	movlb	0	; () banked
  6078  000E4A  15AD               	andwf	(___ftpack@arg+1)& (0+255),w,b
  6079  000E4C  0100               	movlb	0	; () banked
  6080  000E4E  6FB2               	movwf	(??___ftpack+1)& (0+255),b
  6081  000E50  0EFE               	movlw	254
  6082  000E52  0100               	movlb	0	; () banked
  6083  000E54  15AE               	andwf	(___ftpack@arg+2)& (0+255),w,b
  6084  000E56  0100               	movlb	0	; () banked
  6085  000E58  6FB3               	movwf	(??___ftpack+2)& (0+255),b
  6086  000E5A  0100               	movlb	0	; () banked
  6087  000E5C  51B1               	movf	??___ftpack& (0+255),w,b
  6088  000E5E  11B2               	iorwf	(??___ftpack+1)& (0+255),w,b
  6089  000E60  11B3               	iorwf	(??___ftpack+2)& (0+255),w,b
  6090  000E62  B4D8               	btfsc	status,2,c
  6091  000E64  D014               	goto	l2310
  6092  000E66  D7E0               	goto	l2302
  6093  000E68                     l2306:
  6094                           
  6095                           ; BSR set to: 0
  6096  000E68  0100               	movlb	0	; () banked
  6097  000E6A  2BAF               	incf	___ftpack@exp& (0+255),f,b
  6098                           
  6099                           ; BSR set to: 0
  6100  000E6C  0E01               	movlw	1
  6101  000E6E  0100               	movlb	0	; () banked
  6102  000E70  27AC               	addwf	___ftpack@arg& (0+255),f,b
  6103  000E72  0E00               	movlw	0
  6104  000E74  0100               	movlb	0	; () banked
  6105  000E76  23AD               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  6106  000E78  0E00               	movlw	0
  6107  000E7A  0100               	movlb	0	; () banked
  6108  000E7C  23AE               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  6109  000E7E  0100               	movlb	0	; () banked
  6110  000E80  90D8               	bcf	status,0,c
  6111  000E82  0100               	movlb	0	; () banked
  6112  000E84  33AE               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  6113  000E86  0100               	movlb	0	; () banked
  6114  000E88  33AD               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  6115  000E8A  0100               	movlb	0	; () banked
  6116  000E8C  33AC               	rrcf	___ftpack@arg& (0+255),f,b
  6117  000E8E                     l2310:
  6118                           
  6119                           ; BSR set to: 0
  6120  000E8E  0E00               	movlw	0
  6121  000E90  0100               	movlb	0	; () banked
  6122  000E92  15AC               	andwf	___ftpack@arg& (0+255),w,b
  6123  000E94  0100               	movlb	0	; () banked
  6124  000E96  6FB1               	movwf	??___ftpack& (0+255),b
  6125  000E98  0E00               	movlw	0
  6126  000E9A  0100               	movlb	0	; () banked
  6127  000E9C  15AD               	andwf	(___ftpack@arg+1)& (0+255),w,b
  6128  000E9E  0100               	movlb	0	; () banked
  6129  000EA0  6FB2               	movwf	(??___ftpack+1)& (0+255),b
  6130  000EA2  0EFF               	movlw	255
  6131  000EA4  0100               	movlb	0	; () banked
  6132  000EA6  15AE               	andwf	(___ftpack@arg+2)& (0+255),w,b
  6133  000EA8  0100               	movlb	0	; () banked
  6134  000EAA  6FB3               	movwf	(??___ftpack+2)& (0+255),b
  6135  000EAC  0100               	movlb	0	; () banked
  6136  000EAE  51B1               	movf	??___ftpack& (0+255),w,b
  6137  000EB0  11B2               	iorwf	(??___ftpack+1)& (0+255),w,b
  6138  000EB2  11B3               	iorwf	(??___ftpack+2)& (0+255),w,b
  6139  000EB4  B4D8               	btfsc	status,2,c
  6140  000EB6  D00B               	goto	l2314
  6141  000EB8  D7D7               	goto	l2306
  6142  000EBA                     l2312:
  6143                           
  6144                           ; BSR set to: 0
  6145  000EBA  0100               	movlb	0	; () banked
  6146  000EBC  07AF               	decf	___ftpack@exp& (0+255),f,b
  6147  000EBE  0100               	movlb	0	; () banked
  6148  000EC0  90D8               	bcf	status,0,c
  6149  000EC2  0100               	movlb	0	; () banked
  6150  000EC4  37AC               	rlcf	___ftpack@arg& (0+255),f,b
  6151  000EC6  0100               	movlb	0	; () banked
  6152  000EC8  37AD               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  6153  000ECA  0100               	movlb	0	; () banked
  6154  000ECC  37AE               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  6155  000ECE                     l2314:
  6156                           
  6157                           ; BSR set to: 0
  6158  000ECE  0100               	movlb	0	; () banked
  6159  000ED0  AFAD               	btfss	(___ftpack@arg+1)& (0+255),7,b
  6160  000ED2  D7F3               	goto	l2312
  6161                           
  6162                           ; BSR set to: 0
  6163  000ED4  0100               	movlb	0	; () banked
  6164  000ED6  B1AF               	btfsc	___ftpack@exp& (0+255),0,b
  6165  000ED8  D002               	goto	l2318
  6166                           
  6167                           ; BSR set to: 0
  6168  000EDA  0100               	movlb	0	; () banked
  6169  000EDC  9FAD               	bcf	(___ftpack@arg+1)& (0+255),7,b
  6170  000EDE                     l2318:
  6171                           
  6172                           ; BSR set to: 0
  6173  000EDE  0100               	movlb	0	; () banked
  6174  000EE0  90D8               	bcf	status,0,c
  6175  000EE2  33AF               	rrcf	___ftpack@exp& (0+255),f,b
  6176  000EE4  0100               	movlb	0	; () banked
  6177  000EE6  51AF               	movf	___ftpack@exp& (0+255),w,b
  6178  000EE8  0100               	movlb	0	; () banked
  6179  000EEA  13AE               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  6180                           
  6181                           ; BSR set to: 0
  6182  000EEC  0100               	movlb	0	; () banked
  6183  000EEE  51B0               	movf	___ftpack@sign& (0+255),w,b
  6184  000EF0  B4D8               	btfsc	status,2,c
  6185  000EF2  D002               	goto	l2324
  6186                           
  6187                           ; BSR set to: 0
  6188  000EF4  0100               	movlb	0	; () banked
  6189  000EF6  8FAE               	bsf	(___ftpack@arg+2)& (0+255),7,b
  6190  000EF8                     l2324:
  6191                           
  6192                           ; BSR set to: 0
  6193  000EF8  C0AC  F0AC         	movff	___ftpack@arg,?___ftpack
  6194  000EFC  C0AD  F0AD         	movff	___ftpack@arg+1,?___ftpack+1
  6195  000F00  C0AE  F0AE         	movff	___ftpack@arg+2,?___ftpack+2
  6196  000F04                     l895:
  6197                           
  6198                           ; BSR set to: 0
  6199  000F04  0012               	return	
  6200  000F06                     __end_of___ftpack:
  6201                           	opt stack 0
  6202                           tblptru	equ	0xFF8
  6203                           tblptrh	equ	0xFF7
  6204                           tblptrl	equ	0xFF6
  6205                           tablat	equ	0xFF5
  6206                           prodh	equ	0xFF4
  6207                           prodl	equ	0xFF3
  6208                           intcon	equ	0xFF2
  6209                           indf0	equ	0xFEF
  6210                           postinc0	equ	0xFEE
  6211                           fsr0h	equ	0xFEA
  6212                           fsr0l	equ	0xFE9
  6213                           wreg	equ	0xFE8
  6214                           postinc1	equ	0xFE6
  6215                           postdec1	equ	0xFE5
  6216                           fsr1l	equ	0xFE1
  6217                           indf2	equ	0xFDF
  6218                           postinc2	equ	0xFDE
  6219                           postdec2	equ	0xFDD
  6220                           fsr2h	equ	0xFDA
  6221                           fsr2l	equ	0xFD9
  6222                           status	equ	0xFD8
  6223                           
  6224 ;; *************** function _SetDCPWM1 *****************
  6225 ;; Defined at:
  6226 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1setdc.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  6231 ;; Return value:  Size  Location     Type
  6232 ;;		None               void
  6233 ;; Registers used:
  6234 ;;		wreg, status,2, status,0
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6240 ;;      Params:         0       2       0       0       0       0       0       0       0
  6241 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6242 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6243 ;;      Totals:         0       6       0       0       0       0       0       0       0
  6244 ;;Total ram usage:        6 bytes
  6245 ;; Hardware stack levels used:    1
  6246 ;; Hardware stack levels required when called:    5
  6247 ;; This function calls:
  6248 ;;		Nothing
  6249 ;; This function is called by:
  6250 ;;		_PWM_DutyCycle1
  6251 ;; This function uses a non-reentrant model
  6252 ;;
  6253                           
  6254                           	psect	text39
  6255  001AFE                     __ptext39:
  6256                           	opt stack 0
  6257  001AFE                     _SetDCPWM1:
  6258                           	opt stack 22
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;incstack = 0
  6262  001AFE  0100               	movlb	0	; () banked
  6263  001B00  C0AC  F0AE         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  6264  001B04  0100               	movlb	0	; () banked
  6265  001B06  C0AD  F0AF         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  6266  001B0A  0E06               	movlw	6
  6267  001B0C                     u1765:
  6268  001B0C  90D8               	bcf	status,0,c
  6269  001B0E  0100               	movlb	0	; () banked
  6270  001B10  37AE               	rlcf	??_SetDCPWM1& (0+255),f,b
  6271  001B12  37AF               	rlcf	(??_SetDCPWM1+1)& (0+255),f,b
  6272  001B14  2EE8               	decfsz	wreg,f,c
  6273  001B16  D7FA               	goto	u1765
  6274  001B18  C0AE  F0B0         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  6275  001B1C  C0AF  F0B1         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  6276                           
  6277                           ; BSR set to: 0
  6278  001B20  C0B1  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  6279  001B24  C0B0  F0AE         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  6280  001B28  0100               	movlb	0	; () banked
  6281  001B2A  90D8               	bcf	status,0,c
  6282  001B2C  33AE               	rrcf	??_SetDCPWM1& (0+255),f,b
  6283  001B2E  0100               	movlb	0	; () banked
  6284  001B30  90D8               	bcf	status,0,c
  6285  001B32  33AE               	rrcf	??_SetDCPWM1& (0+255),f,b
  6286  001B34  0E30               	movlw	48
  6287  001B36  0100               	movlb	0	; () banked
  6288  001B38  17AE               	andwf	??_SetDCPWM1& (0+255),f,b
  6289  001B3A  50BD               	movf	4029,w,c	;volatile
  6290  001B3C  0BCF               	andlw	207
  6291  001B3E  0100               	movlb	0	; () banked
  6292  001B40  11AE               	iorwf	??_SetDCPWM1& (0+255),w,b
  6293  001B42  6EBD               	movwf	4029,c	;volatile
  6294                           
  6295                           ; BSR set to: 0
  6296  001B44  0012               	return	
  6297  001B46                     __end_of_SetDCPWM1:
  6298                           	opt stack 0
  6299                           tblptru	equ	0xFF8
  6300                           tblptrh	equ	0xFF7
  6301                           tblptrl	equ	0xFF6
  6302                           tablat	equ	0xFF5
  6303                           prodh	equ	0xFF4
  6304                           prodl	equ	0xFF3
  6305                           intcon	equ	0xFF2
  6306                           indf0	equ	0xFEF
  6307                           postinc0	equ	0xFEE
  6308                           fsr0h	equ	0xFEA
  6309                           fsr0l	equ	0xFE9
  6310                           wreg	equ	0xFE8
  6311                           postinc1	equ	0xFE6
  6312                           postdec1	equ	0xFE5
  6313                           fsr1l	equ	0xFE1
  6314                           indf2	equ	0xFDF
  6315                           postinc2	equ	0xFDE
  6316                           postdec2	equ	0xFDD
  6317                           fsr2h	equ	0xFDA
  6318                           fsr2l	equ	0xFD9
  6319                           status	equ	0xFD8
  6320                           
  6321 ;; *************** function _clrBufferUSART *****************
  6322 ;; Defined at:
  6323 ;;		line 68 in file "Bluetooth.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;		None
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;  i               2    0[BANK0 ] int 
  6328 ;; Return value:  Size  Location     Type
  6329 ;;		None               void
  6330 ;; Registers used:
  6331 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6332 ;; Tracked objects:
  6333 ;;		On entry : 0/0
  6334 ;;		On exit  : 0/0
  6335 ;;		Unchanged: 0/0
  6336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6337 ;;      Params:         0       0       0       0       0       0       0       0       0
  6338 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6340 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6341 ;;Total ram usage:        2 bytes
  6342 ;; Hardware stack levels used:    1
  6343 ;; Hardware stack levels required when called:    5
  6344 ;; This function calls:
  6345 ;;		Nothing
  6346 ;; This function is called by:
  6347 ;;		_Inicializa_Driveby
  6348 ;;		_Comando_Tablet
  6349 ;;		_main
  6350 ;;		_CheckTX
  6351 ;;		_EstadoBluetooth
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           	psect	text40
  6356  001BD0                     __ptext40:
  6357                           	opt stack 0
  6358  001BD0                     _clrBufferUSART:
  6359                           	opt stack 25
  6360                           
  6361                           ;Bluetooth.c: 69: int i;
  6362                           ;Bluetooth.c: 70: for (i = 0; i < 20; i++) {
  6363                           
  6364                           ; BSR set to: 0
  6365                           ;incstack = 0
  6366  001BD0  0E00               	movlw	0
  6367  001BD2  0100               	movlb	0	; () banked
  6368  001BD4  6FAD               	movwf	(clrBufferUSART@i+1)& (0+255),b
  6369  001BD6  0E00               	movlw	0
  6370  001BD8  0100               	movlb	0	; () banked
  6371  001BDA  6FAC               	movwf	clrBufferUSART@i& (0+255),b
  6372  001BDC                     
  6373                           ; BSR set to: 0
  6374  001BDC  0100               	movlb	0	; () banked
  6375  001BDE  51AD               	movf	(clrBufferUSART@i+1)& (0+255),w,b
  6376  001BE0  0A80               	xorlw	128
  6377  001BE2  0F80               	addlw	-128
  6378  001BE4  0E14               	movlw	20
  6379  001BE6  B4D8               	btfsc	status,2,c
  6380  001BE8  5DAC               	subwf	clrBufferUSART@i& (0+255),w,b
  6381  001BEA  B0D8               	btfsc	status,0,c
  6382  001BEC  D012               	goto	l54
  6383                           
  6384                           ; BSR set to: 0
  6385                           ;Bluetooth.c: 71: BluetoothDato[i] = 0;
  6386                           
  6387                           ; BSR set to: 0
  6388                           
  6389                           ; BSR set to: 0
  6390  001BEE  0100               	movlb	0	; () banked
  6391  001BF0  0E65               	movlw	low _BluetoothDato
  6392  001BF2  0100               	movlb	0	; () banked
  6393  001BF4  25AC               	addwf	clrBufferUSART@i& (0+255),w,b
  6394  001BF6  6ED9               	movwf	fsr2l,c
  6395  001BF8  0100               	movlb	0	; () banked
  6396  001BFA  0E00               	movlw	high _BluetoothDato
  6397  001BFC  0100               	movlb	0	; () banked
  6398  001BFE  21AD               	addwfc	(clrBufferUSART@i+1)& (0+255),w,b
  6399  001C00  6EDA               	movwf	fsr2h,c
  6400  001C02  0E00               	movlw	0
  6401  001C04  6EDF               	movwf	indf2,c
  6402                           
  6403                           ; BSR set to: 0
  6404                           ;Bluetooth.c: 72: cad = 0;
  6405  001C06  0E00               	movlw	0
  6406  001C08  6E55               	movwf	_cad,c
  6407                           
  6408                           ; BSR set to: 0
  6409  001C0A  0100               	movlb	0	; () banked
  6410  001C0C  4BAC               	infsnz	clrBufferUSART@i& (0+255),f,b
  6411  001C0E  2BAD               	incf	(clrBufferUSART@i+1)& (0+255),f,b
  6412  001C10  D7E5               	goto	L11
  6413  001C12                     l54:
  6414                           
  6415                           ; BSR set to: 0
  6416  001C12  0012               	return	
  6417  001C14                     __end_of_clrBufferUSART:
  6418                           	opt stack 0
  6419                           tblptru	equ	0xFF8
  6420                           tblptrh	equ	0xFF7
  6421                           tblptrl	equ	0xFF6
  6422                           tablat	equ	0xFF5
  6423                           prodh	equ	0xFF4
  6424                           prodl	equ	0xFF3
  6425                           intcon	equ	0xFF2
  6426                           indf0	equ	0xFEF
  6427                           postinc0	equ	0xFEE
  6428                           fsr0h	equ	0xFEA
  6429                           fsr0l	equ	0xFE9
  6430                           wreg	equ	0xFE8
  6431                           postinc1	equ	0xFE6
  6432                           postdec1	equ	0xFE5
  6433                           fsr1l	equ	0xFE1
  6434                           indf2	equ	0xFDF
  6435                           postinc2	equ	0xFDE
  6436                           postdec2	equ	0xFDD
  6437                           fsr2h	equ	0xFDA
  6438                           fsr2l	equ	0xFD9
  6439                           status	equ	0xFD8
  6440                           
  6441 ;; *************** function _TMRO_USART *****************
  6442 ;; Defined at:
  6443 ;;		line 85 in file "robot.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;		None
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;		None
  6448 ;; Return value:  Size  Location     Type
  6449 ;;		None               void
  6450 ;; Registers used:
  6451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6457 ;;      Params:         0       0       0       0       0       0       0       0       0
  6458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6459 ;;      Temps:         14       0       0       0       0       0       0       0       0
  6460 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6461 ;;Total ram usage:       14 bytes
  6462 ;; Hardware stack levels used:    1
  6463 ;; Hardware stack levels required when called:    4
  6464 ;; This function calls:
  6465 ;;		_ReadUSART
  6466 ;;		i2_go_straight
  6467 ;;		i2_left
  6468 ;;		i2_right
  6469 ;; This function is called by:
  6470 ;;		Interrupt level 2
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	intcode
  6475  000008                     __pintcode:
  6476                           	opt stack 0
  6477  000008                     _TMRO_USART:
  6478                           	opt stack 20
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;incstack = 0
  6482  000008  CFFA F034          	movff	pclath,??_TMRO_USART
  6483  00000C  CFFB F035          	movff	pclatu,??_TMRO_USART+1
  6484  000010  CFE9 F036          	movff	fsr0l,??_TMRO_USART+2
  6485  000014  ED83  F007         	call	int_func,f	;refresh shadow registers
  6486                           pclatu	equ	0xFFB
  6487                           pclath	equ	0xFFA
  6488                           tblptru	equ	0xFF8
  6489                           tblptrh	equ	0xFF7
  6490                           tblptrl	equ	0xFF6
  6491                           tablat	equ	0xFF5
  6492                           prodh	equ	0xFF4
  6493                           prodl	equ	0xFF3
  6494                           intcon	equ	0xFF2
  6495                           indf0	equ	0xFEF
  6496                           postinc0	equ	0xFEE
  6497                           fsr0h	equ	0xFEA
  6498                           fsr0l	equ	0xFE9
  6499                           wreg	equ	0xFE8
  6500                           postinc1	equ	0xFE6
  6501                           postdec1	equ	0xFE5
  6502                           fsr1l	equ	0xFE1
  6503                           indf2	equ	0xFDF
  6504                           postinc2	equ	0xFDE
  6505                           postdec2	equ	0xFDD
  6506                           fsr2h	equ	0xFDA
  6507                           fsr2l	equ	0xFD9
  6508                           status	equ	0xFD8
  6509                           
  6510                           	psect	intcode_body
  6511  000F06                     __pintcode_body:
  6512                           	opt stack 20
  6513  000F06                     int_func:
  6514                           	opt stack 20
  6515  000F06  0006               	pop		; remove dummy address from shadow register refresh
  6516  000F08  CFEA F037          	movff	fsr0h,??_TMRO_USART+3
  6517  000F0C  CFE1 F038          	movff	fsr1l,??_TMRO_USART+4
  6518  000F10  CFE2 F039          	movff	fsr1h,??_TMRO_USART+5
  6519  000F14  CFD9 F03A          	movff	fsr2l,??_TMRO_USART+6
  6520  000F18  CFDA F03B          	movff	fsr2h,??_TMRO_USART+7
  6521  000F1C  CFF3 F03C          	movff	prodl,??_TMRO_USART+8
  6522  000F20  CFF4 F03D          	movff	prodh,??_TMRO_USART+9
  6523  000F24  CFF6 F03E          	movff	tblptrl,??_TMRO_USART+10
  6524  000F28  CFF7 F03F          	movff	tblptrh,??_TMRO_USART+11
  6525  000F2C  CFF8 F040          	movff	tblptru,??_TMRO_USART+12
  6526  000F30  CFF5 F041          	movff	tablat,??_TMRO_USART+13
  6527                           
  6528                           ;robot.c: 90: if (PIR1bits.RCIF) {
  6529  000F34  AA9E               	btfss	3998,5,c	;volatile
  6530  000F36  D032               	goto	i2l3330
  6531                           
  6532                           ;robot.c: 92: BluetoothDato[cad] = ReadUSART();
  6533  000F38  5055               	movf	_cad,w,c
  6534  000F3A  0D01               	mullw	1
  6535  000F3C  0100               	movlb	0	; () banked
  6536  000F3E  0E65               	movlw	low _BluetoothDato
  6537  000F40  24F3               	addwf	prodl,w,c
  6538  000F42  6ED9               	movwf	fsr2l,c
  6539  000F44  0100               	movlb	0	; () banked
  6540  000F46  0E00               	movlw	high _BluetoothDato
  6541  000F48  20F4               	addwfc	prodh,w,c
  6542  000F4A  6EDA               	movwf	fsr2h,c
  6543  000F4C  EC95  F00E         	call	_ReadUSART	;wreg free
  6544  000F50  6EDF               	movwf	indf2,c
  6545                           
  6546                           ;robot.c: 93: if (BluetoothDato[cad] == '#') {
  6547  000F52  5055               	movf	_cad,w,c
  6548  000F54  0D01               	mullw	1
  6549  000F56  0100               	movlb	0	; () banked
  6550  000F58  0E65               	movlw	low _BluetoothDato
  6551  000F5A  24F3               	addwf	prodl,w,c
  6552  000F5C  6ED9               	movwf	fsr2l,c
  6553  000F5E  0100               	movlb	0	; () banked
  6554  000F60  0E00               	movlw	high _BluetoothDato
  6555  000F62  20F4               	addwfc	prodh,w,c
  6556  000F64  6EDA               	movwf	fsr2h,c
  6557  000F66  0E23               	movlw	35
  6558  000F68  62DF               	cpfseq	indf2,c
  6559  000F6A  D015               	goto	i2l3326
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;robot.c: 94: if (ComanTFlag == 0) {
  6563  000F6C  664C               	tstfsz	_ComanTFlag,c
  6564  000F6E  D008               	goto	i2l3322
  6565                           
  6566                           ; BSR set to: 0
  6567                           ;robot.c: 95: EntTrama = 1;
  6568  000F70  0E01               	movlw	1
  6569  000F72  6E4F               	movwf	_EntTrama,c
  6570                           
  6571                           ;robot.c: 96: FinComandT = 0;
  6572  000F74  0E00               	movlw	0
  6573  000F76  0100               	movlb	0	; () banked
  6574  000F78  6F63               	movwf	_FinComandT& (0+255),b
  6575                           
  6576                           ;robot.c: 97: ComanTFlag = 1;
  6577  000F7A  0E01               	movlw	1
  6578  000F7C  6E4C               	movwf	_ComanTFlag,c
  6579  000F7E  D00D               	goto	i2u323_40
  6580  000F80                     i2l3322:
  6581                           
  6582                           ; BSR set to: 0
  6583                           ;robot.c: 100: else if (ComanTFlag == 1) {
  6584  000F80  044C               	decf	_ComanTFlag,w,c
  6585  000F82  A4D8               	btfss	status,2,c
  6586  000F84  D00B               	goto	i2l3330
  6587                           
  6588                           ; BSR set to: 0
  6589                           ;robot.c: 101: ComanTFlag = 0;
  6590  000F86  0E00               	movlw	0
  6591  000F88  6E4C               	movwf	_ComanTFlag,c
  6592                           
  6593                           ;robot.c: 102: FinComandT = 1;
  6594  000F8A  0E01               	movlw	1
  6595  000F8C  0100               	movlb	0	; () banked
  6596  000F8E  6F63               	movwf	_FinComandT& (0+255),b
  6597                           
  6598                           ;robot.c: 103: EntTrama = 0;
  6599  000F90  0E00               	movlw	0
  6600  000F92  6E4F               	movwf	_EntTrama,c
  6601  000F94  D003               	goto	i2l3330
  6602  000F96                     i2l3326:
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;robot.c: 107: else if (EntTrama == 1)
  6606  000F96  044F               	decf	_EntTrama,w,c
  6607  000F98  B4D8               	btfsc	status,2,c
  6608  000F9A                     i2u323_40:
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;robot.c: 108: cad++;
  6612  000F9A  2A55               	incf	_cad,f,c
  6613  000F9C                     i2l3330:
  6614                           
  6615                           ;robot.c: 110: }
  6616                           ;robot.c: 112: if(INTCONbits.INT0F == 1){
  6617  000F9C  B2F2               	btfsc	intcon,1,c	;volatile
  6618                           
  6619                           ;robot.c: 121: go_straight();
  6620  000F9E  EC20  F00F         	call	i2_go_straight	;wreg free
  6621                           
  6622                           ;robot.c: 122: }
  6623                           ;robot.c: 124: if(INTCON3bits.INT1F == 1){
  6624  000FA2  B0F0               	btfsc	intcon3,0,c	;volatile
  6625                           
  6626                           ;robot.c: 131: right();
  6627  000FA4  ECD2  F00E         	call	i2_right	;wreg free
  6628                           
  6629                           ;robot.c: 132: }
  6630                           ;robot.c: 133: if(INTCON3bits.INT2F == 1){
  6631  000FA8  A2F0               	btfss	intcon3,1,c	;volatile
  6632  000FAA  D003               	goto	i2l324
  6633                           
  6634                           ;robot.c: 140: left();
  6635  000FAC  ECDD  F00E         	call	i2_left	;wreg free
  6636                           
  6637                           ;robot.c: 141: }
  6638  000FB0  D002               	goto	i2l325
  6639  000FB2                     i2l324:
  6640                           
  6641                           ;robot.c: 142: else if(PIR1bits.TMR2IF){
  6642  000FB2  B29E               	btfsc	3998,1,c	;volatile
  6643                           
  6644                           ;robot.c: 144: PIE1bits.TMR2IE = 0;
  6645  000FB4  929D               	bcf	3997,1,c	;volatile
  6646  000FB6                     i2l325:
  6647                           
  6648                           ;robot.c: 145: }
  6649                           ;robot.c: 146: INTCON3bits.INT2F = 0;
  6650  000FB6  92F0               	bcf	intcon3,1,c	;volatile
  6651                           
  6652                           ;robot.c: 147: INTCON3bits.INT1F = 0;
  6653  000FB8  90F0               	bcf	intcon3,0,c	;volatile
  6654                           
  6655                           ;robot.c: 148: INTCONbits.INT0F = 0;
  6656  000FBA  92F2               	bcf	intcon,1,c	;volatile
  6657                           
  6658                           ;robot.c: 149: PIR1bits.TMR2IF=0;
  6659  000FBC  929E               	bcf	3998,1,c	;volatile
  6660                           
  6661                           ;robot.c: 150: PIR1bits.RCIF=0;
  6662  000FBE  9A9E               	bcf	3998,5,c	;volatile
  6663                           
  6664                           ;robot.c: 152: return;
  6665  000FC0  C041  FFF5         	movff	??_TMRO_USART+13,tablat
  6666  000FC4  C040  FFF8         	movff	??_TMRO_USART+12,tblptru
  6667  000FC8  C03F  FFF7         	movff	??_TMRO_USART+11,tblptrh
  6668  000FCC  C03E  FFF6         	movff	??_TMRO_USART+10,tblptrl
  6669  000FD0  C03D  FFF4         	movff	??_TMRO_USART+9,prodh
  6670  000FD4  C03C  FFF3         	movff	??_TMRO_USART+8,prodl
  6671  000FD8  C03B  FFDA         	movff	??_TMRO_USART+7,fsr2h
  6672  000FDC  C03A  FFD9         	movff	??_TMRO_USART+6,fsr2l
  6673  000FE0  C039  FFE2         	movff	??_TMRO_USART+5,fsr1h
  6674  000FE4  C038  FFE1         	movff	??_TMRO_USART+4,fsr1l
  6675  000FE8  C037  FFEA         	movff	??_TMRO_USART+3,fsr0h
  6676  000FEC  C036  FFE9         	movff	??_TMRO_USART+2,fsr0l
  6677  000FF0  C035  FFFB         	movff	??_TMRO_USART+1,pclatu
  6678  000FF4  C034  FFFA         	movff	??_TMRO_USART,pclath
  6679  000FF8  0011               	retfie		f
  6680  000FFA                     __end_of_TMRO_USART:
  6681                           	opt stack 0
  6682                           pclatu	equ	0xFFB
  6683                           pclath	equ	0xFFA
  6684                           tblptru	equ	0xFF8
  6685                           tblptrh	equ	0xFF7
  6686                           tblptrl	equ	0xFF6
  6687                           tablat	equ	0xFF5
  6688                           prodh	equ	0xFF4
  6689                           prodl	equ	0xFF3
  6690                           intcon	equ	0xFF2
  6691                           intcon3	equ	0xFF0
  6692                           indf0	equ	0xFEF
  6693                           postinc0	equ	0xFEE
  6694                           fsr0h	equ	0xFEA
  6695                           fsr0l	equ	0xFE9
  6696                           wreg	equ	0xFE8
  6697                           postinc1	equ	0xFE6
  6698                           postdec1	equ	0xFE5
  6699                           fsr1h	equ	0xFE2
  6700                           fsr1l	equ	0xFE1
  6701                           indf2	equ	0xFDF
  6702                           postinc2	equ	0xFDE
  6703                           postdec2	equ	0xFDD
  6704                           fsr2h	equ	0xFDA
  6705                           fsr2l	equ	0xFD9
  6706                           status	equ	0xFD8
  6707                           
  6708 ;; *************** function i2_right *****************
  6709 ;; Defined at:
  6710 ;;		line 100 in file "cny70.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;		None
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;		None
  6715 ;; Return value:  Size  Location     Type
  6716 ;;		None               void
  6717 ;; Registers used:
  6718 ;;		wreg, status,2, status,0, cstack
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6724 ;;      Params:         0       0       0       0       0       0       0       0       0
  6725 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6726 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6727 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6728 ;;Total ram usage:        0 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; Hardware stack levels required when called:    3
  6731 ;; This function calls:
  6732 ;;		i2_PWM_DutyCycle1
  6733 ;;		i2_PWM_DutyCycle2
  6734 ;;		i2_motor_Backforward1
  6735 ;;		i2_motor_forward1
  6736 ;; This function is called by:
  6737 ;;		_TMRO_USART
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text42
  6742  001DA4                     __ptext42:
  6743                           	opt stack 0
  6744  001DA4                     i2_right:
  6745                           	opt stack 20
  6746                           
  6747                           ;cny70.c: 102: motor_forward1();
  6748                           
  6749                           ;incstack = 0
  6750  001DA4  EC44  F00F         	call	i2_motor_forward1	;wreg free
  6751                           
  6752                           ;cny70.c: 103: motor_Backforward1();
  6753  001DA8  EC47  F00F         	call	i2_motor_Backforward1	;wreg free
  6754                           
  6755                           ;cny70.c: 104: PWM_DutyCycle1(100);
  6756  001DAC  0E64               	movlw	100
  6757  001DAE  EC93  F00C         	call	i2_PWM_DutyCycle1
  6758                           
  6759                           ;cny70.c: 105: PWM_DutyCycle2(100);
  6760  001DB2  0E64               	movlw	100
  6761  001DB4  EC5E  F00C         	call	i2_PWM_DutyCycle2
  6762                           
  6763                           ;cny70.c: 106: return;
  6764  001DB8  0012               	return	
  6765  001DBA                     __end_ofi2_right:
  6766                           	opt stack 0
  6767                           pclatu	equ	0xFFB
  6768                           pclath	equ	0xFFA
  6769                           tblptru	equ	0xFF8
  6770                           tblptrh	equ	0xFF7
  6771                           tblptrl	equ	0xFF6
  6772                           tablat	equ	0xFF5
  6773                           prodh	equ	0xFF4
  6774                           prodl	equ	0xFF3
  6775                           intcon	equ	0xFF2
  6776                           intcon3	equ	0xFF0
  6777                           indf0	equ	0xFEF
  6778                           postinc0	equ	0xFEE
  6779                           fsr0h	equ	0xFEA
  6780                           fsr0l	equ	0xFE9
  6781                           wreg	equ	0xFE8
  6782                           postinc1	equ	0xFE6
  6783                           postdec1	equ	0xFE5
  6784                           fsr1h	equ	0xFE2
  6785                           fsr1l	equ	0xFE1
  6786                           indf2	equ	0xFDF
  6787                           postinc2	equ	0xFDE
  6788                           postdec2	equ	0xFDD
  6789                           fsr2h	equ	0xFDA
  6790                           fsr2l	equ	0xFD9
  6791                           status	equ	0xFD8
  6792                           
  6793 ;; *************** function i2_motor_forward1 *****************
  6794 ;; Defined at:
  6795 ;;		line 11 in file "motor.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;		None
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;		None
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  2    0[COMRAM] int 
  6802 ;; Registers used:
  6803 ;;		None
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6809 ;;      Params:         0       0       0       0       0       0       0       0       0
  6810 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6811 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6812 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6813 ;;Total ram usage:        0 bytes
  6814 ;; Hardware stack levels used:    1
  6815 ;; This function calls:
  6816 ;;		Nothing
  6817 ;; This function is called by:
  6818 ;;		i2_right
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822                           	psect	text43
  6823  001E88                     __ptext43:
  6824                           	opt stack 0
  6825  001E88                     i2_motor_forward1:
  6826                           	opt stack 22
  6827                           
  6828                           ;motor.c: 13: PORTDbits.RD7 = 1;
  6829                           
  6830                           ;incstack = 0
  6831  001E88  8E83               	bsf	3971,7,c	;volatile
  6832                           
  6833                           ;motor.c: 14: PORTDbits.RD4 = 0;
  6834  001E8A  9883               	bcf	3971,4,c	;volatile
  6835                           
  6836                           ;motor.c: 17: return;
  6837  001E8C  0012               	return	
  6838  001E8E                     __end_ofi2_motor_forward1:
  6839                           	opt stack 0
  6840                           pclatu	equ	0xFFB
  6841                           pclath	equ	0xFFA
  6842                           tblptru	equ	0xFF8
  6843                           tblptrh	equ	0xFF7
  6844                           tblptrl	equ	0xFF6
  6845                           tablat	equ	0xFF5
  6846                           prodh	equ	0xFF4
  6847                           prodl	equ	0xFF3
  6848                           intcon	equ	0xFF2
  6849                           intcon3	equ	0xFF0
  6850                           indf0	equ	0xFEF
  6851                           postinc0	equ	0xFEE
  6852                           fsr0h	equ	0xFEA
  6853                           fsr0l	equ	0xFE9
  6854                           wreg	equ	0xFE8
  6855                           postinc1	equ	0xFE6
  6856                           postdec1	equ	0xFE5
  6857                           fsr1h	equ	0xFE2
  6858                           fsr1l	equ	0xFE1
  6859                           indf2	equ	0xFDF
  6860                           postinc2	equ	0xFDE
  6861                           postdec2	equ	0xFDD
  6862                           fsr2h	equ	0xFDA
  6863                           fsr2l	equ	0xFD9
  6864                           status	equ	0xFD8
  6865                           
  6866 ;; *************** function i2_motor_Backforward1 *****************
  6867 ;; Defined at:
  6868 ;;		line 20 in file "motor.c"
  6869 ;; Parameters:    Size  Location     Type
  6870 ;;		None
  6871 ;; Auto vars:     Size  Location     Type
  6872 ;;		None
  6873 ;; Return value:  Size  Location     Type
  6874 ;;                  2    0[COMRAM] int 
  6875 ;; Registers used:
  6876 ;;		None
  6877 ;; Tracked objects:
  6878 ;;		On entry : 0/0
  6879 ;;		On exit  : 0/0
  6880 ;;		Unchanged: 0/0
  6881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6882 ;;      Params:         0       0       0       0       0       0       0       0       0
  6883 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6884 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6885 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6886 ;;Total ram usage:        0 bytes
  6887 ;; Hardware stack levels used:    1
  6888 ;; This function calls:
  6889 ;;		Nothing
  6890 ;; This function is called by:
  6891 ;;		i2_right
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           	psect	text44
  6896  001E8E                     __ptext44:
  6897                           	opt stack 0
  6898  001E8E                     i2_motor_Backforward1:
  6899                           	opt stack 22
  6900                           
  6901                           ;motor.c: 22: PORTDbits.RD7 = 0;
  6902                           
  6903                           ;incstack = 0
  6904  001E8E  9E83               	bcf	3971,7,c	;volatile
  6905                           
  6906                           ;motor.c: 23: PORTDbits.RD4 = 1;
  6907  001E90  8883               	bsf	3971,4,c	;volatile
  6908                           
  6909                           ;motor.c: 26: return;
  6910  001E92  0012               	return	
  6911  001E94                     __end_ofi2_motor_Backforward1:
  6912                           	opt stack 0
  6913                           pclatu	equ	0xFFB
  6914                           pclath	equ	0xFFA
  6915                           tblptru	equ	0xFF8
  6916                           tblptrh	equ	0xFF7
  6917                           tblptrl	equ	0xFF6
  6918                           tablat	equ	0xFF5
  6919                           prodh	equ	0xFF4
  6920                           prodl	equ	0xFF3
  6921                           intcon	equ	0xFF2
  6922                           intcon3	equ	0xFF0
  6923                           indf0	equ	0xFEF
  6924                           postinc0	equ	0xFEE
  6925                           fsr0h	equ	0xFEA
  6926                           fsr0l	equ	0xFE9
  6927                           wreg	equ	0xFE8
  6928                           postinc1	equ	0xFE6
  6929                           postdec1	equ	0xFE5
  6930                           fsr1h	equ	0xFE2
  6931                           fsr1l	equ	0xFE1
  6932                           indf2	equ	0xFDF
  6933                           postinc2	equ	0xFDE
  6934                           postdec2	equ	0xFDD
  6935                           fsr2h	equ	0xFDA
  6936                           fsr2l	equ	0xFD9
  6937                           status	equ	0xFD8
  6938                           
  6939 ;; *************** function i2_left *****************
  6940 ;; Defined at:
  6941 ;;		line 109 in file "cny70.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;		None
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;		None
  6946 ;; Return value:  Size  Location     Type
  6947 ;;		None               void
  6948 ;; Registers used:
  6949 ;;		wreg, status,2, status,0, cstack
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6955 ;;      Params:         0       0       0       0       0       0       0       0       0
  6956 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6957 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6958 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6959 ;;Total ram usage:        0 bytes
  6960 ;; Hardware stack levels used:    1
  6961 ;; Hardware stack levels required when called:    3
  6962 ;; This function calls:
  6963 ;;		i2_PWM_DutyCycle1
  6964 ;;		i2_PWM_DutyCycle2
  6965 ;;		i2_motor_Backforward2
  6966 ;;		i2_motor_forward2
  6967 ;; This function is called by:
  6968 ;;		_TMRO_USART
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           
  6972                           	psect	text45
  6973  001DBA                     __ptext45:
  6974                           	opt stack 0
  6975  001DBA                     i2_left:
  6976                           	opt stack 20
  6977                           
  6978                           ;cny70.c: 111: motor_forward2();
  6979                           
  6980                           ;incstack = 0
  6981  001DBA  EC4A  F00F         	call	i2_motor_forward2	;wreg free
  6982                           
  6983                           ;cny70.c: 112: motor_Backforward2();
  6984  001DBE  EC4D  F00F         	call	i2_motor_Backforward2	;wreg free
  6985                           
  6986                           ;cny70.c: 113: PWM_DutyCycle1(100);
  6987  001DC2  0E64               	movlw	100
  6988  001DC4  EC93  F00C         	call	i2_PWM_DutyCycle1
  6989                           
  6990                           ;cny70.c: 114: PWM_DutyCycle2(100);
  6991  001DC8  0E64               	movlw	100
  6992  001DCA  EC5E  F00C         	call	i2_PWM_DutyCycle2
  6993                           
  6994                           ;cny70.c: 115: return;
  6995  001DCE  0012               	return	
  6996  001DD0                     __end_ofi2_left:
  6997                           	opt stack 0
  6998                           pclatu	equ	0xFFB
  6999                           pclath	equ	0xFFA
  7000                           tblptru	equ	0xFF8
  7001                           tblptrh	equ	0xFF7
  7002                           tblptrl	equ	0xFF6
  7003                           tablat	equ	0xFF5
  7004                           prodh	equ	0xFF4
  7005                           prodl	equ	0xFF3
  7006                           intcon	equ	0xFF2
  7007                           intcon3	equ	0xFF0
  7008                           indf0	equ	0xFEF
  7009                           postinc0	equ	0xFEE
  7010                           fsr0h	equ	0xFEA
  7011                           fsr0l	equ	0xFE9
  7012                           wreg	equ	0xFE8
  7013                           postinc1	equ	0xFE6
  7014                           postdec1	equ	0xFE5
  7015                           fsr1h	equ	0xFE2
  7016                           fsr1l	equ	0xFE1
  7017                           indf2	equ	0xFDF
  7018                           postinc2	equ	0xFDE
  7019                           postdec2	equ	0xFDD
  7020                           fsr2h	equ	0xFDA
  7021                           fsr2l	equ	0xFD9
  7022                           status	equ	0xFD8
  7023                           
  7024 ;; *************** function i2_motor_forward2 *****************
  7025 ;; Defined at:
  7026 ;;		line 29 in file "motor.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;		None
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;		None
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  2    0[COMRAM] int 
  7033 ;; Registers used:
  7034 ;;		None
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7040 ;;      Params:         0       0       0       0       0       0       0       0       0
  7041 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7042 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7043 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7044 ;;Total ram usage:        0 bytes
  7045 ;; Hardware stack levels used:    1
  7046 ;; This function calls:
  7047 ;;		Nothing
  7048 ;; This function is called by:
  7049 ;;		i2_left
  7050 ;; This function uses a non-reentrant model
  7051 ;;
  7052                           
  7053                           	psect	text46
  7054  001E94                     __ptext46:
  7055                           	opt stack 0
  7056  001E94                     i2_motor_forward2:
  7057                           	opt stack 22
  7058                           
  7059                           ;motor.c: 32: PORTDbits.RD2 = 1;
  7060                           
  7061                           ;incstack = 0
  7062  001E94  8483               	bsf	3971,2,c	;volatile
  7063                           
  7064                           ;motor.c: 33: PORTDbits.RD3 = 0;
  7065  001E96  9683               	bcf	3971,3,c	;volatile
  7066                           
  7067                           ;motor.c: 35: return;
  7068  001E98  0012               	return	
  7069  001E9A                     __end_ofi2_motor_forward2:
  7070                           	opt stack 0
  7071                           pclatu	equ	0xFFB
  7072                           pclath	equ	0xFFA
  7073                           tblptru	equ	0xFF8
  7074                           tblptrh	equ	0xFF7
  7075                           tblptrl	equ	0xFF6
  7076                           tablat	equ	0xFF5
  7077                           prodh	equ	0xFF4
  7078                           prodl	equ	0xFF3
  7079                           intcon	equ	0xFF2
  7080                           intcon3	equ	0xFF0
  7081                           indf0	equ	0xFEF
  7082                           postinc0	equ	0xFEE
  7083                           fsr0h	equ	0xFEA
  7084                           fsr0l	equ	0xFE9
  7085                           wreg	equ	0xFE8
  7086                           postinc1	equ	0xFE6
  7087                           postdec1	equ	0xFE5
  7088                           fsr1h	equ	0xFE2
  7089                           fsr1l	equ	0xFE1
  7090                           indf2	equ	0xFDF
  7091                           postinc2	equ	0xFDE
  7092                           postdec2	equ	0xFDD
  7093                           fsr2h	equ	0xFDA
  7094                           fsr2l	equ	0xFD9
  7095                           status	equ	0xFD8
  7096                           
  7097 ;; *************** function i2_motor_Backforward2 *****************
  7098 ;; Defined at:
  7099 ;;		line 38 in file "motor.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;		None
  7102 ;; Auto vars:     Size  Location     Type
  7103 ;;		None
  7104 ;; Return value:  Size  Location     Type
  7105 ;;                  2    0[COMRAM] int 
  7106 ;; Registers used:
  7107 ;;		None
  7108 ;; Tracked objects:
  7109 ;;		On entry : 0/0
  7110 ;;		On exit  : 0/0
  7111 ;;		Unchanged: 0/0
  7112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7113 ;;      Params:         0       0       0       0       0       0       0       0       0
  7114 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7116 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7117 ;;Total ram usage:        0 bytes
  7118 ;; Hardware stack levels used:    1
  7119 ;; This function calls:
  7120 ;;		Nothing
  7121 ;; This function is called by:
  7122 ;;		i2_left
  7123 ;; This function uses a non-reentrant model
  7124 ;;
  7125                           
  7126                           	psect	text47
  7127  001E9A                     __ptext47:
  7128                           	opt stack 0
  7129  001E9A                     i2_motor_Backforward2:
  7130                           	opt stack 22
  7131                           
  7132                           ;motor.c: 41: PORTDbits.RD2 = 0;
  7133                           
  7134                           ;incstack = 0
  7135  001E9A  9483               	bcf	3971,2,c	;volatile
  7136                           
  7137                           ;motor.c: 42: PORTDbits.RD3 = 1;
  7138  001E9C  8683               	bsf	3971,3,c	;volatile
  7139                           
  7140                           ;motor.c: 44: return;
  7141  001E9E  0012               	return	
  7142  001EA0                     __end_ofi2_motor_Backforward2:
  7143                           	opt stack 0
  7144                           pclatu	equ	0xFFB
  7145                           pclath	equ	0xFFA
  7146                           tblptru	equ	0xFF8
  7147                           tblptrh	equ	0xFF7
  7148                           tblptrl	equ	0xFF6
  7149                           tablat	equ	0xFF5
  7150                           prodh	equ	0xFF4
  7151                           prodl	equ	0xFF3
  7152                           intcon	equ	0xFF2
  7153                           intcon3	equ	0xFF0
  7154                           indf0	equ	0xFEF
  7155                           postinc0	equ	0xFEE
  7156                           fsr0h	equ	0xFEA
  7157                           fsr0l	equ	0xFE9
  7158                           wreg	equ	0xFE8
  7159                           postinc1	equ	0xFE6
  7160                           postdec1	equ	0xFE5
  7161                           fsr1h	equ	0xFE2
  7162                           fsr1l	equ	0xFE1
  7163                           indf2	equ	0xFDF
  7164                           postinc2	equ	0xFDE
  7165                           postdec2	equ	0xFDD
  7166                           fsr2h	equ	0xFDA
  7167                           fsr2l	equ	0xFD9
  7168                           status	equ	0xFD8
  7169                           
  7170 ;; *************** function i2_go_straight *****************
  7171 ;; Defined at:
  7172 ;;		line 118 in file "cny70.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;		None
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;		None
  7177 ;; Return value:  Size  Location     Type
  7178 ;;		None               void
  7179 ;; Registers used:
  7180 ;;		wreg, status,2, status,0, cstack
  7181 ;; Tracked objects:
  7182 ;;		On entry : 0/0
  7183 ;;		On exit  : 0/0
  7184 ;;		Unchanged: 0/0
  7185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7186 ;;      Params:         0       0       0       0       0       0       0       0       0
  7187 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7188 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7189 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7190 ;;Total ram usage:        0 bytes
  7191 ;; Hardware stack levels used:    1
  7192 ;; Hardware stack levels required when called:    3
  7193 ;; This function calls:
  7194 ;;		i2_PWM_DutyCycle1
  7195 ;;		i2_PWM_DutyCycle2
  7196 ;;		i2_motor_forward
  7197 ;; This function is called by:
  7198 ;;		_TMRO_USART
  7199 ;; This function uses a non-reentrant model
  7200 ;;
  7201                           
  7202                           	psect	text48
  7203  001E40                     __ptext48:
  7204                           	opt stack 0
  7205  001E40                     i2_go_straight:
  7206                           	opt stack 20
  7207                           
  7208                           ;cny70.c: 120: motor_forward();
  7209                           
  7210                           ;incstack = 0
  7211  001E40  EC33  F00F         	call	i2_motor_forward	;wreg free
  7212                           
  7213                           ;cny70.c: 121: PWM_DutyCycle1(100);
  7214  001E44  0E64               	movlw	100
  7215  001E46  EC93  F00C         	call	i2_PWM_DutyCycle1
  7216                           
  7217                           ;cny70.c: 122: PWM_DutyCycle2(100);
  7218  001E4A  0E64               	movlw	100
  7219  001E4C  EC5E  F00C         	call	i2_PWM_DutyCycle2
  7220                           
  7221                           ;cny70.c: 123: return;
  7222  001E50  0012               	return	
  7223  001E52                     __end_ofi2_go_straight:
  7224                           	opt stack 0
  7225                           pclatu	equ	0xFFB
  7226                           pclath	equ	0xFFA
  7227                           tblptru	equ	0xFF8
  7228                           tblptrh	equ	0xFF7
  7229                           tblptrl	equ	0xFF6
  7230                           tablat	equ	0xFF5
  7231                           prodh	equ	0xFF4
  7232                           prodl	equ	0xFF3
  7233                           intcon	equ	0xFF2
  7234                           intcon3	equ	0xFF0
  7235                           indf0	equ	0xFEF
  7236                           postinc0	equ	0xFEE
  7237                           fsr0h	equ	0xFEA
  7238                           fsr0l	equ	0xFE9
  7239                           wreg	equ	0xFE8
  7240                           postinc1	equ	0xFE6
  7241                           postdec1	equ	0xFE5
  7242                           fsr1h	equ	0xFE2
  7243                           fsr1l	equ	0xFE1
  7244                           indf2	equ	0xFDF
  7245                           postinc2	equ	0xFDE
  7246                           postdec2	equ	0xFDD
  7247                           fsr2h	equ	0xFDA
  7248                           fsr2l	equ	0xFD9
  7249                           status	equ	0xFD8
  7250                           
  7251 ;; *************** function i2_motor_forward *****************
  7252 ;; Defined at:
  7253 ;;		line 47 in file "motor.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;		None
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;		None
  7258 ;; Return value:  Size  Location     Type
  7259 ;;		None               void
  7260 ;; Registers used:
  7261 ;;		None
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7267 ;;      Params:         0       0       0       0       0       0       0       0       0
  7268 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7270 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7271 ;;Total ram usage:        0 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; This function calls:
  7274 ;;		Nothing
  7275 ;; This function is called by:
  7276 ;;		i2_go_straight
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280                           	psect	text49
  7281  001E66                     __ptext49:
  7282                           	opt stack 0
  7283  001E66                     i2_motor_forward:
  7284                           	opt stack 22
  7285                           
  7286                           ;motor.c: 49: PORTDbits.RD7 = 1;
  7287                           
  7288                           ;incstack = 0
  7289  001E66  8E83               	bsf	3971,7,c	;volatile
  7290                           
  7291                           ;motor.c: 50: PORTDbits.RD4 = 0;
  7292  001E68  9883               	bcf	3971,4,c	;volatile
  7293                           
  7294                           ;motor.c: 51: PORTDbits.RD2 = 1;
  7295  001E6A  8483               	bsf	3971,2,c	;volatile
  7296                           
  7297                           ;motor.c: 52: PORTDbits.RD3 = 0;
  7298  001E6C  9683               	bcf	3971,3,c	;volatile
  7299                           
  7300                           ;motor.c: 54: return;
  7301  001E6E  0012               	return	
  7302  001E70                     __end_ofi2_motor_forward:
  7303                           	opt stack 0
  7304                           pclatu	equ	0xFFB
  7305                           pclath	equ	0xFFA
  7306                           tblptru	equ	0xFF8
  7307                           tblptrh	equ	0xFF7
  7308                           tblptrl	equ	0xFF6
  7309                           tablat	equ	0xFF5
  7310                           prodh	equ	0xFF4
  7311                           prodl	equ	0xFF3
  7312                           intcon	equ	0xFF2
  7313                           intcon3	equ	0xFF0
  7314                           indf0	equ	0xFEF
  7315                           postinc0	equ	0xFEE
  7316                           fsr0h	equ	0xFEA
  7317                           fsr0l	equ	0xFE9
  7318                           wreg	equ	0xFE8
  7319                           postinc1	equ	0xFE6
  7320                           postdec1	equ	0xFE5
  7321                           fsr1h	equ	0xFE2
  7322                           fsr1l	equ	0xFE1
  7323                           indf2	equ	0xFDF
  7324                           postinc2	equ	0xFDE
  7325                           postdec2	equ	0xFDD
  7326                           fsr2h	equ	0xFDA
  7327                           fsr2l	equ	0xFD9
  7328                           status	equ	0xFD8
  7329                           
  7330 ;; *************** function i2_PWM_DutyCycle2 *****************
  7331 ;; Defined at:
  7332 ;;		line 55 in file "pwm.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;  percentageDu    1    wreg     unsigned char 
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  percentageDu    1   48[COMRAM] unsigned char 
  7337 ;;  PWM_DutyCycl    2   49[COMRAM] unsigned int 
  7338 ;;  PWM_DutyCycl    2   46[COMRAM] unsigned int 
  7339 ;; Return value:  Size  Location     Type
  7340 ;;		None               void
  7341 ;; Registers used:
  7342 ;;		wreg, status,2, status,0, cstack
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7348 ;;      Params:         0       0       0       0       0       0       0       0       0
  7349 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7350 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7351 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7352 ;;Total ram usage:        9 bytes
  7353 ;; Hardware stack levels used:    1
  7354 ;; Hardware stack levels required when called:    2
  7355 ;; This function calls:
  7356 ;;		i2_SetDCPWM2
  7357 ;;		i2___ftmul
  7358 ;;		i2___fttol
  7359 ;;		i2___lbtoft
  7360 ;; This function is called by:
  7361 ;;		i2_right
  7362 ;;		i2_left
  7363 ;;		i2_go_straight
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           	psect	text50
  7368  0018BC                     __ptext50:
  7369                           	opt stack 0
  7370  0018BC                     i2_PWM_DutyCycle2:
  7371                           	opt stack 20
  7372                           
  7373                           ;incstack = 0
  7374                           ;i2PWM_DutyCycle2@percentageDuty stored from wreg
  7375  0018BC  6E31               	movwf	i2PWM_DutyCycle2@percentageDuty,c
  7376                           
  7377                           ;pwm.c: 57: unsigned int DC = 0, DutyCycle = 0;
  7378  0018BE  0E00               	movlw	0
  7379  0018C0  6E33               	movwf	i2PWM_DutyCycle2@DC+1,c
  7380  0018C2  0E00               	movlw	0
  7381  0018C4  6E32               	movwf	i2PWM_DutyCycle2@DC,c
  7382  0018C6  0E00               	movlw	0
  7383  0018C8  6E30               	movwf	i2PWM_DutyCycle2@DutyCycle+1,c
  7384  0018CA  0E00               	movlw	0
  7385  0018CC  6E2F               	movwf	i2PWM_DutyCycle2@DutyCycle,c
  7386                           
  7387                           ;pwm.c: 59: DC = (unsigned int)(percentageDuty * 10.23);
  7388  0018CE  0EAE               	movlw	174
  7389  0018D0  6E10               	movwf	i2___ftmul@f2,c
  7390  0018D2  0E23               	movlw	35
  7391  0018D4  6E11               	movwf	i2___ftmul@f2+1,c
  7392  0018D6  0E41               	movlw	65
  7393  0018D8  6E12               	movwf	i2___ftmul@f2+2,c
  7394  0018DA  5031               	movf	i2PWM_DutyCycle2@percentageDuty,w,c
  7395  0018DC  EC83  F00E         	call	i2___lbtoft
  7396  0018E0  C009  F00D         	movff	?i2___lbtoft,i2___ftmul@f1
  7397  0018E4  C00A  F00E         	movff	?i2___lbtoft+1,i2___ftmul@f1+1
  7398  0018E8  C00B  F00F         	movff	?i2___lbtoft+2,i2___ftmul@f1+2
  7399  0018EC  ECFD  F007         	call	i2___ftmul	;wreg free
  7400  0018F0  C00D  F01C         	movff	?i2___ftmul,i2___fttol@f1
  7401  0018F4  C00E  F01D         	movff	?i2___ftmul+1,i2___fttol@f1+1
  7402  0018F8  C00F  F01E         	movff	?i2___ftmul+2,i2___fttol@f1+2
  7403  0018FC  ECDB  F008         	call	i2___fttol	;wreg free
  7404  001900  C01C  F02B         	movff	?i2___fttol,??i2_PWM_DutyCycle2
  7405  001904  C01D  F02C         	movff	?i2___fttol+1,??i2_PWM_DutyCycle2+1
  7406  001908  C01E  F02D         	movff	?i2___fttol+2,??i2_PWM_DutyCycle2+2
  7407  00190C  C01F  F02E         	movff	?i2___fttol+3,??i2_PWM_DutyCycle2+3
  7408  001910  C02B  F032         	movff	??i2_PWM_DutyCycle2,i2PWM_DutyCycle2@DC
  7409  001914  C02C  F033         	movff	??i2_PWM_DutyCycle2+1,i2PWM_DutyCycle2@DC+1
  7410                           
  7411                           ;pwm.c: 60: SetDCPWM2(DC);
  7412  001918  C032  F001         	movff	i2PWM_DutyCycle2@DC,i2SetDCPWM2@dutycycle
  7413  00191C  C033  F002         	movff	i2PWM_DutyCycle2@DC+1,i2SetDCPWM2@dutycycle+1
  7414  001920  EC0A  F00E         	call	i2_SetDCPWM2	;wreg free
  7415                           
  7416                           ;pwm.c: 61: return;
  7417  001924  0012               	return	
  7418  001926                     __end_ofi2_PWM_DutyCycle2:
  7419                           	opt stack 0
  7420                           pclatu	equ	0xFFB
  7421                           pclath	equ	0xFFA
  7422                           tblptru	equ	0xFF8
  7423                           tblptrh	equ	0xFF7
  7424                           tblptrl	equ	0xFF6
  7425                           tablat	equ	0xFF5
  7426                           prodh	equ	0xFF4
  7427                           prodl	equ	0xFF3
  7428                           intcon	equ	0xFF2
  7429                           intcon3	equ	0xFF0
  7430                           indf0	equ	0xFEF
  7431                           postinc0	equ	0xFEE
  7432                           fsr0h	equ	0xFEA
  7433                           fsr0l	equ	0xFE9
  7434                           wreg	equ	0xFE8
  7435                           postinc1	equ	0xFE6
  7436                           postdec1	equ	0xFE5
  7437                           fsr1h	equ	0xFE2
  7438                           fsr1l	equ	0xFE1
  7439                           indf2	equ	0xFDF
  7440                           postinc2	equ	0xFDE
  7441                           postdec2	equ	0xFDD
  7442                           fsr2h	equ	0xFDA
  7443                           fsr2l	equ	0xFD9
  7444                           status	equ	0xFD8
  7445                           
  7446 ;; *************** function i2_SetDCPWM2 *****************
  7447 ;; Defined at:
  7448 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2setdc.c"
  7449 ;; Parameters:    Size  Location     Type
  7450 ;;  dutycycle       2    0[COMRAM] unsigned int 
  7451 ;; Auto vars:     Size  Location     Type
  7452 ;;  SetDCPWM2       2    4[COMRAM] struct PWMDC
  7453 ;; Return value:  Size  Location     Type
  7454 ;;		None               void
  7455 ;; Registers used:
  7456 ;;		wreg, status,2, status,0
  7457 ;; Tracked objects:
  7458 ;;		On entry : 0/0
  7459 ;;		On exit  : 0/0
  7460 ;;		Unchanged: 0/0
  7461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7462 ;;      Params:         2       0       0       0       0       0       0       0       0
  7463 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7464 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7465 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7466 ;;Total ram usage:        6 bytes
  7467 ;; Hardware stack levels used:    1
  7468 ;; This function calls:
  7469 ;;		Nothing
  7470 ;; This function is called by:
  7471 ;;		i2_PWM_DutyCycle2
  7472 ;; This function uses a non-reentrant model
  7473 ;;
  7474                           
  7475                           	psect	text51
  7476  001C14                     __ptext51:
  7477                           	opt stack 0
  7478  001C14                     i2_SetDCPWM2:
  7479                           	opt stack 21
  7480                           
  7481                           ;incstack = 0
  7482  001C14  C001  F003         	movff	i2SetDCPWM2@dutycycle,??i2_SetDCPWM2
  7483  001C18  C002  F004         	movff	i2SetDCPWM2@dutycycle+1,??i2_SetDCPWM2+1
  7484  001C1C  0E06               	movlw	6
  7485  001C1E                     i2u233_45:
  7486  001C1E  90D8               	bcf	status,0,c
  7487  001C20  3603               	rlcf	??i2_SetDCPWM2,f,c
  7488  001C22  3604               	rlcf	??i2_SetDCPWM2+1,f,c
  7489  001C24  2EE8               	decfsz	wreg,f,c
  7490  001C26  D7FB               	goto	i2u233_45
  7491  001C28  C003  F005         	movff	??i2_SetDCPWM2,i2SetDCPWM2@DCycle
  7492  001C2C  C004  F006         	movff	??i2_SetDCPWM2+1,i2SetDCPWM2@DCycle+1
  7493  001C30  C006  FFBB         	movff	i2SetDCPWM2@DCycle+1,4027	;volatile
  7494  001C34  C005  F003         	movff	i2SetDCPWM2@DCycle,??i2_SetDCPWM2
  7495  001C38  90D8               	bcf	status,0,c
  7496  001C3A  3203               	rrcf	??i2_SetDCPWM2,f,c
  7497  001C3C  90D8               	bcf	status,0,c
  7498  001C3E  3203               	rrcf	??i2_SetDCPWM2,f,c
  7499  001C40  0E30               	movlw	48
  7500  001C42  1603               	andwf	??i2_SetDCPWM2,f,c
  7501  001C44  50BA               	movf	4026,w,c	;volatile
  7502  001C46  0BCF               	andlw	207
  7503  001C48  1003               	iorwf	??i2_SetDCPWM2,w,c
  7504  001C4A  6EBA               	movwf	4026,c	;volatile
  7505  001C4C  0012               	return	
  7506  001C4E                     __end_ofi2_SetDCPWM2:
  7507                           	opt stack 0
  7508                           pclatu	equ	0xFFB
  7509                           pclath	equ	0xFFA
  7510                           tblptru	equ	0xFF8
  7511                           tblptrh	equ	0xFF7
  7512                           tblptrl	equ	0xFF6
  7513                           tablat	equ	0xFF5
  7514                           prodh	equ	0xFF4
  7515                           prodl	equ	0xFF3
  7516                           intcon	equ	0xFF2
  7517                           intcon3	equ	0xFF0
  7518                           indf0	equ	0xFEF
  7519                           postinc0	equ	0xFEE
  7520                           fsr0h	equ	0xFEA
  7521                           fsr0l	equ	0xFE9
  7522                           wreg	equ	0xFE8
  7523                           postinc1	equ	0xFE6
  7524                           postdec1	equ	0xFE5
  7525                           fsr1h	equ	0xFE2
  7526                           fsr1l	equ	0xFE1
  7527                           indf2	equ	0xFDF
  7528                           postinc2	equ	0xFDE
  7529                           postdec2	equ	0xFDD
  7530                           fsr2h	equ	0xFDA
  7531                           fsr2l	equ	0xFD9
  7532                           status	equ	0xFD8
  7533                           
  7534 ;; *************** function i2_PWM_DutyCycle1 *****************
  7535 ;; Defined at:
  7536 ;;		line 33 in file "pwm.c"
  7537 ;; Parameters:    Size  Location     Type
  7538 ;;  percentageDu    1    wreg     unsigned char 
  7539 ;; Auto vars:     Size  Location     Type
  7540 ;;  percentageDu    1   48[COMRAM] unsigned char 
  7541 ;;  PWM_DutyCycl    2   49[COMRAM] unsigned int 
  7542 ;;  PWM_DutyCycl    2   46[COMRAM] unsigned int 
  7543 ;; Return value:  Size  Location     Type
  7544 ;;		None               void
  7545 ;; Registers used:
  7546 ;;		wreg, status,2, status,0, cstack
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7552 ;;      Params:         0       0       0       0       0       0       0       0       0
  7553 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7554 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7555 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7556 ;;Total ram usage:        9 bytes
  7557 ;; Hardware stack levels used:    1
  7558 ;; Hardware stack levels required when called:    2
  7559 ;; This function calls:
  7560 ;;		i2_SetDCPWM1
  7561 ;;		i2___ftmul
  7562 ;;		i2___fttol
  7563 ;;		i2___lbtoft
  7564 ;; This function is called by:
  7565 ;;		i2_right
  7566 ;;		i2_left
  7567 ;;		i2_go_straight
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           
  7571                           	psect	text52
  7572  001926                     __ptext52:
  7573                           	opt stack 0
  7574  001926                     i2_PWM_DutyCycle1:
  7575                           	opt stack 20
  7576                           
  7577                           ;incstack = 0
  7578                           ;i2PWM_DutyCycle1@percentageDuty stored from wreg
  7579  001926  6E31               	movwf	i2PWM_DutyCycle1@percentageDuty,c
  7580                           
  7581                           ;pwm.c: 35: unsigned int DC = 0, DutyCycle = 0;
  7582  001928  0E00               	movlw	0
  7583  00192A  6E33               	movwf	i2PWM_DutyCycle1@DC+1,c
  7584  00192C  0E00               	movlw	0
  7585  00192E  6E32               	movwf	i2PWM_DutyCycle1@DC,c
  7586  001930  0E00               	movlw	0
  7587  001932  6E30               	movwf	i2PWM_DutyCycle1@DutyCycle+1,c
  7588  001934  0E00               	movlw	0
  7589  001936  6E2F               	movwf	i2PWM_DutyCycle1@DutyCycle,c
  7590                           
  7591                           ;pwm.c: 37: DC = (unsigned int)(percentageDuty * 10.23);
  7592  001938  0EAE               	movlw	174
  7593  00193A  6E10               	movwf	i2___ftmul@f2,c
  7594  00193C  0E23               	movlw	35
  7595  00193E  6E11               	movwf	i2___ftmul@f2+1,c
  7596  001940  0E41               	movlw	65
  7597  001942  6E12               	movwf	i2___ftmul@f2+2,c
  7598  001944  5031               	movf	i2PWM_DutyCycle1@percentageDuty,w,c
  7599  001946  EC83  F00E         	call	i2___lbtoft
  7600  00194A  C009  F00D         	movff	?i2___lbtoft,i2___ftmul@f1
  7601  00194E  C00A  F00E         	movff	?i2___lbtoft+1,i2___ftmul@f1+1
  7602  001952  C00B  F00F         	movff	?i2___lbtoft+2,i2___ftmul@f1+2
  7603  001956  ECFD  F007         	call	i2___ftmul	;wreg free
  7604  00195A  C00D  F01C         	movff	?i2___ftmul,i2___fttol@f1
  7605  00195E  C00E  F01D         	movff	?i2___ftmul+1,i2___fttol@f1+1
  7606  001962  C00F  F01E         	movff	?i2___ftmul+2,i2___fttol@f1+2
  7607  001966  ECDB  F008         	call	i2___fttol	;wreg free
  7608  00196A  C01C  F02B         	movff	?i2___fttol,??i2_PWM_DutyCycle1
  7609  00196E  C01D  F02C         	movff	?i2___fttol+1,??i2_PWM_DutyCycle1+1
  7610  001972  C01E  F02D         	movff	?i2___fttol+2,??i2_PWM_DutyCycle1+2
  7611  001976  C01F  F02E         	movff	?i2___fttol+3,??i2_PWM_DutyCycle1+3
  7612  00197A  C02B  F032         	movff	??i2_PWM_DutyCycle1,i2PWM_DutyCycle1@DC
  7613  00197E  C02C  F033         	movff	??i2_PWM_DutyCycle1+1,i2PWM_DutyCycle1@DC+1
  7614                           
  7615                           ;pwm.c: 38: SetDCPWM1(DC);
  7616  001982  C032  F001         	movff	i2PWM_DutyCycle1@DC,i2SetDCPWM1@dutycycle
  7617  001986  C033  F002         	movff	i2PWM_DutyCycle1@DC+1,i2SetDCPWM1@dutycycle+1
  7618  00198A  EC27  F00E         	call	i2_SetDCPWM1	;wreg free
  7619                           
  7620                           ;pwm.c: 39: return;
  7621  00198E  0012               	return	
  7622  001990                     __end_ofi2_PWM_DutyCycle1:
  7623                           	opt stack 0
  7624                           pclatu	equ	0xFFB
  7625                           pclath	equ	0xFFA
  7626                           tblptru	equ	0xFF8
  7627                           tblptrh	equ	0xFF7
  7628                           tblptrl	equ	0xFF6
  7629                           tablat	equ	0xFF5
  7630                           prodh	equ	0xFF4
  7631                           prodl	equ	0xFF3
  7632                           intcon	equ	0xFF2
  7633                           intcon3	equ	0xFF0
  7634                           indf0	equ	0xFEF
  7635                           postinc0	equ	0xFEE
  7636                           fsr0h	equ	0xFEA
  7637                           fsr0l	equ	0xFE9
  7638                           wreg	equ	0xFE8
  7639                           postinc1	equ	0xFE6
  7640                           postdec1	equ	0xFE5
  7641                           fsr1h	equ	0xFE2
  7642                           fsr1l	equ	0xFE1
  7643                           indf2	equ	0xFDF
  7644                           postinc2	equ	0xFDE
  7645                           postdec2	equ	0xFDD
  7646                           fsr2h	equ	0xFDA
  7647                           fsr2l	equ	0xFD9
  7648                           status	equ	0xFD8
  7649                           
  7650 ;; *************** function i2___lbtoft *****************
  7651 ;; Defined at:
  7652 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lbtoft.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;  c               1    wreg     unsigned char 
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;  c               1   11[COMRAM] unsigned char 
  7657 ;; Return value:  Size  Location     Type
  7658 ;;                  3    8[COMRAM] float 
  7659 ;; Registers used:
  7660 ;;		wreg, status,2, status,0, cstack
  7661 ;; Tracked objects:
  7662 ;;		On entry : 0/0
  7663 ;;		On exit  : 0/0
  7664 ;;		Unchanged: 0/0
  7665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7666 ;;      Params:         3       0       0       0       0       0       0       0       0
  7667 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7669 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7670 ;;Total ram usage:        4 bytes
  7671 ;; Hardware stack levels used:    1
  7672 ;; Hardware stack levels required when called:    1
  7673 ;; This function calls:
  7674 ;;		i2___ftpack
  7675 ;; This function is called by:
  7676 ;;		i2_PWM_DutyCycle1
  7677 ;;		i2_PWM_DutyCycle2
  7678 ;; This function uses a non-reentrant model
  7679 ;;
  7680                           
  7681                           	psect	text53
  7682  001D06                     __ptext53:
  7683                           	opt stack 0
  7684  001D06                     i2___lbtoft:
  7685                           	opt stack 20
  7686                           
  7687                           ;incstack = 0
  7688                           ;i2___lbtoft@c stored from wreg
  7689  001D06  6E0C               	movwf	i2___lbtoft@c,c
  7690  001D08  500C               	movf	i2___lbtoft@c,w,c
  7691  001D0A  6E01               	movwf	i2___ftpack@arg,c
  7692  001D0C  6A02               	clrf	i2___ftpack@arg+1,c
  7693  001D0E  6A03               	clrf	i2___ftpack@arg+2,c
  7694  001D10  0E8E               	movlw	142
  7695  001D12  6E04               	movwf	i2___ftpack@exp,c
  7696  001D14  0E00               	movlw	0
  7697  001D16  6E05               	movwf	i2___ftpack@sign,c
  7698  001D18  EC0B  F00A         	call	i2___ftpack	;wreg free
  7699  001D1C  C001  F009         	movff	?i2___ftpack,?i2___lbtoft
  7700  001D20  C002  F00A         	movff	?i2___ftpack+1,?i2___lbtoft+1
  7701  001D24  C003  F00B         	movff	?i2___ftpack+2,?i2___lbtoft+2
  7702  001D28  0012               	return	
  7703  001D2A                     __end_ofi2___lbtoft:
  7704                           	opt stack 0
  7705                           pclatu	equ	0xFFB
  7706                           pclath	equ	0xFFA
  7707                           tblptru	equ	0xFF8
  7708                           tblptrh	equ	0xFF7
  7709                           tblptrl	equ	0xFF6
  7710                           tablat	equ	0xFF5
  7711                           prodh	equ	0xFF4
  7712                           prodl	equ	0xFF3
  7713                           intcon	equ	0xFF2
  7714                           intcon3	equ	0xFF0
  7715                           indf0	equ	0xFEF
  7716                           postinc0	equ	0xFEE
  7717                           fsr0h	equ	0xFEA
  7718                           fsr0l	equ	0xFE9
  7719                           wreg	equ	0xFE8
  7720                           postinc1	equ	0xFE6
  7721                           postdec1	equ	0xFE5
  7722                           fsr1h	equ	0xFE2
  7723                           fsr1l	equ	0xFE1
  7724                           indf2	equ	0xFDF
  7725                           postinc2	equ	0xFDE
  7726                           postdec2	equ	0xFDD
  7727                           fsr2h	equ	0xFDA
  7728                           fsr2l	equ	0xFD9
  7729                           status	equ	0xFD8
  7730                           
  7731 ;; *************** function i2___fttol *****************
  7732 ;; Defined at:
  7733 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
  7734 ;; Parameters:    Size  Location     Type
  7735 ;;  f1              3   27[COMRAM] float 
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;  __fttol         4   37[COMRAM] unsigned long 
  7738 ;;  __fttol         1   41[COMRAM] unsigned char 
  7739 ;;  __fttol         1   36[COMRAM] unsigned char 
  7740 ;; Return value:  Size  Location     Type
  7741 ;;                  4   27[COMRAM] long 
  7742 ;; Registers used:
  7743 ;;		wreg, status,2, status,0
  7744 ;; Tracked objects:
  7745 ;;		On entry : 0/0
  7746 ;;		On exit  : 0/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7749 ;;      Params:         4       0       0       0       0       0       0       0       0
  7750 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7751 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7752 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7753 ;;Total ram usage:       15 bytes
  7754 ;; Hardware stack levels used:    1
  7755 ;; This function calls:
  7756 ;;		Nothing
  7757 ;; This function is called by:
  7758 ;;		i2_PWM_DutyCycle1
  7759 ;;		i2_PWM_DutyCycle2
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text54
  7764  0011B6                     __ptext54:
  7765                           	opt stack 0
  7766  0011B6                     i2___fttol:
  7767                           	opt stack 21
  7768                           
  7769                           ;incstack = 0
  7770  0011B6  C01E  F020         	movff	i2___fttol@f1+2,??i2___fttol
  7771  0011BA  6A21               	clrf	(??i2___fttol+1)& (0+255),c
  7772  0011BC  6A22               	clrf	(??i2___fttol+2)& (0+255),c
  7773  0011BE  341D               	rlcf	i2___fttol@f1+1,w,c
  7774  0011C0  3620               	rlcf	??i2___fttol& (0+255),f,c
  7775  0011C2  E301               	bnc	u240_41
  7776  0011C4  8021               	bsf	(??i2___fttol+1)& (0+255),0,c
  7777  0011C6                     u240_41:
  7778  0011C6  5020               	movf	??i2___fttol,w,c
  7779  0011C8  6E2A               	movwf	i2___fttol@exp1,c
  7780  0011CA  662A               	tstfsz	i2___fttol@exp1& (0+255),c
  7781  0011CC  D001               	goto	i2l2800
  7782  0011CE  D038               	goto	i2u245_40
  7783  0011D0                     i2l2800:
  7784  0011D0  0E17               	movlw	23
  7785  0011D2  6E20               	movwf	??i2___fttol& (0+255),c
  7786  0011D4  C01C  F021         	movff	i2___fttol@f1,??i2___fttol+1
  7787  0011D8  C01D  F022         	movff	i2___fttol@f1+1,??i2___fttol+2
  7788  0011DC  C01E  F023         	movff	i2___fttol@f1+2,??i2___fttol+3
  7789  0011E0  2820               	incf	??i2___fttol,w,c
  7790  0011E2  6E24               	movwf	(??i2___fttol+4)& (0+255),c
  7791  0011E4  D004               	goto	i2u242_40
  7792  0011E6                     i2u242_45:
  7793  0011E6  90D8               	bcf	status,0,c
  7794  0011E8  3223               	rrcf	??i2___fttol+3,f,c
  7795  0011EA  3222               	rrcf	??i2___fttol+2,f,c
  7796  0011EC  3221               	rrcf	??i2___fttol+1,f,c
  7797  0011EE                     i2u242_40:
  7798  0011EE  2E24               	decfsz	(??i2___fttol+4)& (0+255),f,c
  7799  0011F0  D7FA               	goto	i2u242_45
  7800  0011F2  5021               	movf	??i2___fttol+1,w,c
  7801  0011F4  6E25               	movwf	i2___fttol@sign1,c
  7802  0011F6  8E1D               	bsf	i2___fttol@f1+1,7,c
  7803  0011F8  0EFF               	movlw	255
  7804  0011FA  161C               	andwf	i2___fttol@f1,f,c
  7805  0011FC  0EFF               	movlw	255
  7806  0011FE  161D               	andwf	i2___fttol@f1+1,f,c
  7807  001200  0E00               	movlw	0
  7808  001202  161E               	andwf	i2___fttol@f1+2,f,c
  7809  001204  501C               	movf	i2___fttol@f1,w,c
  7810  001206  6E26               	movwf	i2___fttol@lval,c
  7811  001208  501D               	movf	i2___fttol@f1+1,w,c
  7812  00120A  6E27               	movwf	i2___fttol@lval+1,c
  7813  00120C  501E               	movf	i2___fttol@f1+2,w,c
  7814  00120E  6E28               	movwf	i2___fttol@lval+2,c
  7815  001210  6A29               	clrf	i2___fttol@lval+3,c
  7816  001212  0E8E               	movlw	142
  7817  001214  5E2A               	subwf	i2___fttol@exp1,f,c
  7818  001216  AE2A               	btfss	i2___fttol@exp1,7,c
  7819  001218  D010               	goto	i2l2822
  7820  00121A  502A               	movf	i2___fttol@exp1,w,c
  7821  00121C  0A80               	xorlw	128
  7822  00121E  6E20               	movwf	??i2___fttol& (0+255),c
  7823  001220  0EF1               	movlw	241
  7824  001222  0A80               	xorlw	128
  7825  001224  5C20               	subwf	??i2___fttol,w,c
  7826  001226  A0D8               	btfss	status,0,c
  7827  001228  D00B               	goto	i2u245_40
  7828  00122A                     i2l2818:
  7829  00122A  90D8               	bcf	status,0,c
  7830  00122C  3229               	rrcf	i2___fttol@lval+3,f,c
  7831  00122E  3228               	rrcf	i2___fttol@lval+2,f,c
  7832  001230  3227               	rrcf	i2___fttol@lval+1,f,c
  7833  001232  3226               	rrcf	i2___fttol@lval,f,c
  7834  001234  3E2A               	incfsz	i2___fttol@exp1,f,c
  7835  001236  D7F9               	goto	i2l2818
  7836  001238  D014               	goto	i2l2832
  7837  00123A                     i2l2822:
  7838  00123A  0E17               	movlw	23
  7839  00123C  642A               	cpfsgt	i2___fttol@exp1,c
  7840  00123E  D00F               	goto	i2l2830
  7841  001240                     i2u245_40:
  7842  001240  0E00               	movlw	0
  7843  001242  6E1C               	movwf	?i2___fttol,c
  7844  001244  0E00               	movlw	0
  7845  001246  6E1D               	movwf	?i2___fttol+1,c
  7846  001248  0E00               	movlw	0
  7847  00124A  6E1E               	movwf	?i2___fttol+2,c
  7848  00124C  0E00               	movlw	0
  7849  00124E  6E1F               	movwf	?i2___fttol+3,c
  7850  001250  D01B               	goto	i2l999
  7851  001252                     i2l2828:
  7852  001252  90D8               	bcf	status,0,c
  7853  001254  3626               	rlcf	i2___fttol@lval,f,c
  7854  001256  3627               	rlcf	i2___fttol@lval+1,f,c
  7855  001258  3628               	rlcf	i2___fttol@lval+2,f,c
  7856  00125A  3629               	rlcf	i2___fttol@lval+3,f,c
  7857  00125C  062A               	decf	i2___fttol@exp1,f,c
  7858  00125E                     i2l2830:
  7859  00125E  662A               	tstfsz	i2___fttol@exp1,c
  7860  001260  D7F8               	goto	i2l2828
  7861  001262                     i2l2832:
  7862  001262  5025               	movf	i2___fttol@sign1,w,c
  7863  001264  B4D8               	btfsc	status,2,c
  7864  001266  D008               	goto	i2l2836
  7865  001268  1E29               	comf	i2___fttol@lval+3,f,c
  7866  00126A  1E28               	comf	i2___fttol@lval+2,f,c
  7867  00126C  1E27               	comf	i2___fttol@lval+1,f,c
  7868  00126E  6C26               	negf	i2___fttol@lval,c
  7869  001270  0E00               	movlw	0
  7870  001272  2227               	addwfc	i2___fttol@lval+1,f,c
  7871  001274  2228               	addwfc	i2___fttol@lval+2,f,c
  7872  001276  2229               	addwfc	i2___fttol@lval+3,f,c
  7873  001278                     i2l2836:
  7874  001278  C026  F01C         	movff	i2___fttol@lval,?i2___fttol
  7875  00127C  C027  F01D         	movff	i2___fttol@lval+1,?i2___fttol+1
  7876  001280  C028  F01E         	movff	i2___fttol@lval+2,?i2___fttol+2
  7877  001284  C029  F01F         	movff	i2___fttol@lval+3,?i2___fttol+3
  7878  001288                     i2l999:
  7879  001288  0012               	return	
  7880  00128A                     __end_ofi2___fttol:
  7881                           	opt stack 0
  7882                           pclatu	equ	0xFFB
  7883                           pclath	equ	0xFFA
  7884                           tblptru	equ	0xFF8
  7885                           tblptrh	equ	0xFF7
  7886                           tblptrl	equ	0xFF6
  7887                           tablat	equ	0xFF5
  7888                           prodh	equ	0xFF4
  7889                           prodl	equ	0xFF3
  7890                           intcon	equ	0xFF2
  7891                           intcon3	equ	0xFF0
  7892                           indf0	equ	0xFEF
  7893                           postinc0	equ	0xFEE
  7894                           fsr0h	equ	0xFEA
  7895                           fsr0l	equ	0xFE9
  7896                           wreg	equ	0xFE8
  7897                           postinc1	equ	0xFE6
  7898                           postdec1	equ	0xFE5
  7899                           fsr1h	equ	0xFE2
  7900                           fsr1l	equ	0xFE1
  7901                           indf2	equ	0xFDF
  7902                           postinc2	equ	0xFDE
  7903                           postdec2	equ	0xFDD
  7904                           fsr2h	equ	0xFDA
  7905                           fsr2l	equ	0xFD9
  7906                           status	equ	0xFD8
  7907                           
  7908 ;; *************** function i2___ftmul *****************
  7909 ;; Defined at:
  7910 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
  7911 ;; Parameters:    Size  Location     Type
  7912 ;;  f1              3   12[COMRAM] float 
  7913 ;;  f2              3   15[COMRAM] float 
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;  __ftmul         3   22[COMRAM] unsigned um
  7916 ;;  __ftmul         1   26[COMRAM] unsigned char 
  7917 ;;  __ftmul         1   25[COMRAM] unsigned char 
  7918 ;;  __ftmul         1   21[COMRAM] unsigned char 
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  3   12[COMRAM] float 
  7921 ;; Registers used:
  7922 ;;		wreg, status,2, status,0, cstack
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7928 ;;      Params:         6       0       0       0       0       0       0       0       0
  7929 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7930 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7931 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7932 ;;Total ram usage:       15 bytes
  7933 ;; Hardware stack levels used:    1
  7934 ;; Hardware stack levels required when called:    1
  7935 ;; This function calls:
  7936 ;;		i2___ftpack
  7937 ;; This function is called by:
  7938 ;;		i2_PWM_DutyCycle1
  7939 ;;		i2_PWM_DutyCycle2
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           	psect	text55
  7944  000FFA                     __ptext55:
  7945                           	opt stack 0
  7946  000FFA                     i2___ftmul:
  7947                           	opt stack 20
  7948                           
  7949                           ;incstack = 0
  7950  000FFA  C00F  F013         	movff	i2___ftmul@f1+2,??i2___ftmul
  7951  000FFE  6A14               	clrf	(??i2___ftmul+1)& (0+255),c
  7952  001000  6A15               	clrf	(??i2___ftmul+2)& (0+255),c
  7953  001002  340E               	rlcf	i2___ftmul@f1+1,w,c
  7954  001004  3613               	rlcf	??i2___ftmul& (0+255),f,c
  7955  001006  E301               	bnc	u234_41
  7956  001008  8014               	bsf	(??i2___ftmul+1)& (0+255),0,c
  7957  00100A                     u234_41:
  7958  00100A  5013               	movf	??i2___ftmul,w,c
  7959  00100C  6E16               	movwf	i2___ftmul@exp,c
  7960  00100E  6616               	tstfsz	i2___ftmul@exp& (0+255),c
  7961  001010  D001               	goto	i2l2752
  7962  001012  D00C               	goto	i2u237_40
  7963  001014                     i2l2752:
  7964  001014  C012  F013         	movff	i2___ftmul@f2+2,??i2___ftmul
  7965  001018  6A14               	clrf	(??i2___ftmul+1)& (0+255),c
  7966  00101A  6A15               	clrf	(??i2___ftmul+2)& (0+255),c
  7967  00101C  3411               	rlcf	i2___ftmul@f2+1,w,c
  7968  00101E  3613               	rlcf	??i2___ftmul& (0+255),f,c
  7969  001020  E301               	bnc	u236_41
  7970  001022  8014               	bsf	(??i2___ftmul+1)& (0+255),0,c
  7971  001024                     u236_41:
  7972  001024  5013               	movf	??i2___ftmul,w,c
  7973  001026  6E1B               	movwf	i2___ftmul@sign,c
  7974  001028  661B               	tstfsz	i2___ftmul@sign& (0+255),c
  7975  00102A  D007               	goto	i2l2758
  7976  00102C                     i2u237_40:
  7977  00102C  0E00               	movlw	0
  7978  00102E  6E0D               	movwf	?i2___ftmul,c
  7979  001030  0E00               	movlw	0
  7980  001032  6E0E               	movwf	?i2___ftmul+1,c
  7981  001034  0E00               	movlw	0
  7982  001036  6E0F               	movwf	?i2___ftmul+2,c
  7983  001038  D051               	goto	i2l979
  7984  00103A                     i2l2758:
  7985  00103A  501B               	movf	i2___ftmul@sign,w,c
  7986  00103C  0F7B               	addlw	123
  7987  00103E  2616               	addwf	i2___ftmul@exp,f,c
  7988  001040  C00F  F01B         	movff	i2___ftmul@f1+2,i2___ftmul@sign
  7989  001044  5012               	movf	i2___ftmul@f2+2,w,c
  7990  001046  1A1B               	xorwf	i2___ftmul@sign,f,c
  7991  001048  0E80               	movlw	128
  7992  00104A  161B               	andwf	i2___ftmul@sign,f,c
  7993  00104C  8E0E               	bsf	i2___ftmul@f1+1,7,c
  7994  00104E  8E11               	bsf	i2___ftmul@f2+1,7,c
  7995  001050  0EFF               	movlw	255
  7996  001052  1610               	andwf	i2___ftmul@f2,f,c
  7997  001054  0EFF               	movlw	255
  7998  001056  1611               	andwf	i2___ftmul@f2+1,f,c
  7999  001058  0E00               	movlw	0
  8000  00105A  1612               	andwf	i2___ftmul@f2+2,f,c
  8001  00105C  0E00               	movlw	0
  8002  00105E  6E17               	movwf	i2___ftmul@f3_as_product,c
  8003  001060  0E00               	movlw	0
  8004  001062  6E18               	movwf	i2___ftmul@f3_as_product+1,c
  8005  001064  0E00               	movlw	0
  8006  001066  6E19               	movwf	i2___ftmul@f3_as_product+2,c
  8007  001068  0E07               	movlw	7
  8008  00106A  6E1A               	movwf	i2___ftmul@cntr,c
  8009  00106C                     i2l2772:
  8010  00106C  A00D               	btfss	i2___ftmul@f1,0,c
  8011  00106E  D006               	goto	i2l2776
  8012  001070  5010               	movf	i2___ftmul@f2,w,c
  8013  001072  2617               	addwf	i2___ftmul@f3_as_product,f,c
  8014  001074  5011               	movf	i2___ftmul@f2+1,w,c
  8015  001076  2218               	addwfc	i2___ftmul@f3_as_product+1,f,c
  8016  001078  5012               	movf	i2___ftmul@f2+2,w,c
  8017  00107A  2219               	addwfc	i2___ftmul@f3_as_product+2,f,c
  8018  00107C                     i2l2776:
  8019  00107C  90D8               	bcf	status,0,c
  8020  00107E  320F               	rrcf	i2___ftmul@f1+2,f,c
  8021  001080  320E               	rrcf	i2___ftmul@f1+1,f,c
  8022  001082  320D               	rrcf	i2___ftmul@f1,f,c
  8023  001084  90D8               	bcf	status,0,c
  8024  001086  3610               	rlcf	i2___ftmul@f2,f,c
  8025  001088  3611               	rlcf	i2___ftmul@f2+1,f,c
  8026  00108A  3612               	rlcf	i2___ftmul@f2+2,f,c
  8027  00108C  2E1A               	decfsz	i2___ftmul@cntr,f,c
  8028  00108E  D7EE               	goto	i2l2772
  8029  001090  0E09               	movlw	9
  8030  001092  6E1A               	movwf	i2___ftmul@cntr,c
  8031  001094                     i2l2782:
  8032  001094  A00D               	btfss	i2___ftmul@f1,0,c
  8033  001096  D006               	goto	i2l2786
  8034  001098  5010               	movf	i2___ftmul@f2,w,c
  8035  00109A  2617               	addwf	i2___ftmul@f3_as_product,f,c
  8036  00109C  5011               	movf	i2___ftmul@f2+1,w,c
  8037  00109E  2218               	addwfc	i2___ftmul@f3_as_product+1,f,c
  8038  0010A0  5012               	movf	i2___ftmul@f2+2,w,c
  8039  0010A2  2219               	addwfc	i2___ftmul@f3_as_product+2,f,c
  8040  0010A4                     i2l2786:
  8041  0010A4  90D8               	bcf	status,0,c
  8042  0010A6  320F               	rrcf	i2___ftmul@f1+2,f,c
  8043  0010A8  320E               	rrcf	i2___ftmul@f1+1,f,c
  8044  0010AA  320D               	rrcf	i2___ftmul@f1,f,c
  8045  0010AC  90D8               	bcf	status,0,c
  8046  0010AE  3219               	rrcf	i2___ftmul@f3_as_product+2,f,c
  8047  0010B0  3218               	rrcf	i2___ftmul@f3_as_product+1,f,c
  8048  0010B2  3217               	rrcf	i2___ftmul@f3_as_product,f,c
  8049  0010B4  2E1A               	decfsz	i2___ftmul@cntr,f,c
  8050  0010B6  D7EE               	goto	i2l2782
  8051  0010B8  C017  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
  8052  0010BC  C018  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
  8053  0010C0  C019  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
  8054  0010C4  C016  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
  8055  0010C8  C01B  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
  8056  0010CC  EC0B  F00A         	call	i2___ftpack	;wreg free
  8057  0010D0  C001  F00D         	movff	?i2___ftpack,?i2___ftmul
  8058  0010D4  C002  F00E         	movff	?i2___ftpack+1,?i2___ftmul+1
  8059  0010D8  C003  F00F         	movff	?i2___ftpack+2,?i2___ftmul+2
  8060  0010DC                     i2l979:
  8061  0010DC  0012               	return	
  8062  0010DE                     __end_ofi2___ftmul:
  8063                           	opt stack 0
  8064                           pclatu	equ	0xFFB
  8065                           pclath	equ	0xFFA
  8066                           tblptru	equ	0xFF8
  8067                           tblptrh	equ	0xFF7
  8068                           tblptrl	equ	0xFF6
  8069                           tablat	equ	0xFF5
  8070                           prodh	equ	0xFF4
  8071                           prodl	equ	0xFF3
  8072                           intcon	equ	0xFF2
  8073                           intcon3	equ	0xFF0
  8074                           indf0	equ	0xFEF
  8075                           postinc0	equ	0xFEE
  8076                           fsr0h	equ	0xFEA
  8077                           fsr0l	equ	0xFE9
  8078                           wreg	equ	0xFE8
  8079                           postinc1	equ	0xFE6
  8080                           postdec1	equ	0xFE5
  8081                           fsr1h	equ	0xFE2
  8082                           fsr1l	equ	0xFE1
  8083                           indf2	equ	0xFDF
  8084                           postinc2	equ	0xFDE
  8085                           postdec2	equ	0xFDD
  8086                           fsr2h	equ	0xFDA
  8087                           fsr2l	equ	0xFD9
  8088                           status	equ	0xFD8
  8089                           
  8090 ;; *************** function i2___ftpack *****************
  8091 ;; Defined at:
  8092 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;  arg             3    0[COMRAM] unsigned um
  8095 ;;  exp             1    3[COMRAM] unsigned char 
  8096 ;;  sign            1    4[COMRAM] unsigned char 
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;		None
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  3    0[COMRAM] float 
  8101 ;; Registers used:
  8102 ;;		wreg, status,2, status,0
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8108 ;;      Params:         5       0       0       0       0       0       0       0       0
  8109 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8110 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8111 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8112 ;;Total ram usage:        8 bytes
  8113 ;; Hardware stack levels used:    1
  8114 ;; This function calls:
  8115 ;;		Nothing
  8116 ;; This function is called by:
  8117 ;;		i2___ftmul
  8118 ;;		i2___lbtoft
  8119 ;; This function uses a non-reentrant model
  8120 ;;
  8121                           
  8122                           	psect	text56
  8123  001416                     __ptext56:
  8124                           	opt stack 0
  8125  001416                     i2___ftpack:
  8126                           	opt stack 20
  8127                           
  8128                           ;incstack = 0
  8129  001416  5004               	movf	i2___ftpack@exp,w,c
  8130  001418  B4D8               	btfsc	status,2,c
  8131  00141A  D005               	goto	i2l2582
  8132  00141C  5001               	movf	i2___ftpack@arg,w,c
  8133  00141E  1002               	iorwf	i2___ftpack@arg+1,w,c
  8134  001420  1003               	iorwf	i2___ftpack@arg+2,w,c
  8135  001422  A4D8               	btfss	status,2,c
  8136  001424  D00C               	goto	i2l2588
  8137  001426                     i2l2582:
  8138  001426  0E00               	movlw	0
  8139  001428  6E01               	movwf	?i2___ftpack,c
  8140  00142A  0E00               	movlw	0
  8141  00142C  6E02               	movwf	?i2___ftpack+1,c
  8142  00142E  0E00               	movlw	0
  8143  001430  6E03               	movwf	?i2___ftpack+2,c
  8144  001432  D044               	goto	i2l895
  8145  001434                     i2l2586:
  8146  001434  2A04               	incf	i2___ftpack@exp,f,c
  8147  001436  90D8               	bcf	status,0,c
  8148  001438  3203               	rrcf	i2___ftpack@arg+2,f,c
  8149  00143A  3202               	rrcf	i2___ftpack@arg+1,f,c
  8150  00143C  3201               	rrcf	i2___ftpack@arg,f,c
  8151  00143E                     i2l2588:
  8152  00143E  0E00               	movlw	0
  8153  001440  1401               	andwf	i2___ftpack@arg,w,c
  8154  001442  6E06               	movwf	??i2___ftpack& (0+255),c
  8155  001444  0E00               	movlw	0
  8156  001446  1402               	andwf	i2___ftpack@arg+1,w,c
  8157  001448  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  8158  00144A  0EFE               	movlw	254
  8159  00144C  1403               	andwf	i2___ftpack@arg+2,w,c
  8160  00144E  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  8161  001450  5006               	movf	??i2___ftpack,w,c
  8162  001452  1007               	iorwf	??i2___ftpack+1,w,c
  8163  001454  1008               	iorwf	??i2___ftpack+2,w,c
  8164  001456  B4D8               	btfsc	status,2,c
  8165  001458  D00C               	goto	i2l2594
  8166  00145A  D7EC               	goto	i2l2586
  8167  00145C                     i2l2590:
  8168  00145C  2A04               	incf	i2___ftpack@exp,f,c
  8169  00145E  0E01               	movlw	1
  8170  001460  2601               	addwf	i2___ftpack@arg,f,c
  8171  001462  0E00               	movlw	0
  8172  001464  2202               	addwfc	i2___ftpack@arg+1,f,c
  8173  001466  0E00               	movlw	0
  8174  001468  2203               	addwfc	i2___ftpack@arg+2,f,c
  8175  00146A  90D8               	bcf	status,0,c
  8176  00146C  3203               	rrcf	i2___ftpack@arg+2,f,c
  8177  00146E  3202               	rrcf	i2___ftpack@arg+1,f,c
  8178  001470  3201               	rrcf	i2___ftpack@arg,f,c
  8179  001472                     i2l2594:
  8180  001472  0E00               	movlw	0
  8181  001474  1401               	andwf	i2___ftpack@arg,w,c
  8182  001476  6E06               	movwf	??i2___ftpack& (0+255),c
  8183  001478  0E00               	movlw	0
  8184  00147A  1402               	andwf	i2___ftpack@arg+1,w,c
  8185  00147C  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  8186  00147E  0EFF               	movlw	255
  8187  001480  1403               	andwf	i2___ftpack@arg+2,w,c
  8188  001482  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  8189  001484  5006               	movf	??i2___ftpack,w,c
  8190  001486  1007               	iorwf	??i2___ftpack+1,w,c
  8191  001488  1008               	iorwf	??i2___ftpack+2,w,c
  8192  00148A  B4D8               	btfsc	status,2,c
  8193  00148C  D006               	goto	i2l2598
  8194  00148E  D7E6               	goto	i2l2590
  8195  001490                     i2l2596:
  8196  001490  0604               	decf	i2___ftpack@exp,f,c
  8197  001492  90D8               	bcf	status,0,c
  8198  001494  3601               	rlcf	i2___ftpack@arg,f,c
  8199  001496  3602               	rlcf	i2___ftpack@arg+1,f,c
  8200  001498  3603               	rlcf	i2___ftpack@arg+2,f,c
  8201  00149A                     i2l2598:
  8202  00149A  AE02               	btfss	i2___ftpack@arg+1,7,c
  8203  00149C  D7F9               	goto	i2l2596
  8204  00149E  A004               	btfss	i2___ftpack@exp,0,c
  8205  0014A0  9E02               	bcf	i2___ftpack@arg+1,7,c
  8206  0014A2  90D8               	bcf	status,0,c
  8207  0014A4  3204               	rrcf	i2___ftpack@exp,f,c
  8208  0014A6  5004               	movf	i2___ftpack@exp,w,c
  8209  0014A8  1203               	iorwf	i2___ftpack@arg+2,f,c
  8210  0014AA  5005               	movf	i2___ftpack@sign,w,c
  8211  0014AC  A4D8               	btfss	status,2,c
  8212  0014AE  8E03               	bsf	i2___ftpack@arg+2,7,c
  8213  0014B0  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
  8214  0014B4  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
  8215  0014B8  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
  8216  0014BC                     i2l895:
  8217  0014BC  0012               	return	
  8218  0014BE                     __end_ofi2___ftpack:
  8219                           	opt stack 0
  8220                           pclatu	equ	0xFFB
  8221                           pclath	equ	0xFFA
  8222                           tblptru	equ	0xFF8
  8223                           tblptrh	equ	0xFF7
  8224                           tblptrl	equ	0xFF6
  8225                           tablat	equ	0xFF5
  8226                           prodh	equ	0xFF4
  8227                           prodl	equ	0xFF3
  8228                           intcon	equ	0xFF2
  8229                           intcon3	equ	0xFF0
  8230                           indf0	equ	0xFEF
  8231                           postinc0	equ	0xFEE
  8232                           fsr0h	equ	0xFEA
  8233                           fsr0l	equ	0xFE9
  8234                           wreg	equ	0xFE8
  8235                           postinc1	equ	0xFE6
  8236                           postdec1	equ	0xFE5
  8237                           fsr1h	equ	0xFE2
  8238                           fsr1l	equ	0xFE1
  8239                           indf2	equ	0xFDF
  8240                           postinc2	equ	0xFDE
  8241                           postdec2	equ	0xFDD
  8242                           fsr2h	equ	0xFDA
  8243                           fsr2l	equ	0xFD9
  8244                           status	equ	0xFD8
  8245                           
  8246 ;; *************** function i2_SetDCPWM1 *****************
  8247 ;; Defined at:
  8248 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1setdc.c"
  8249 ;; Parameters:    Size  Location     Type
  8250 ;;  dutycycle       2    0[COMRAM] unsigned int 
  8251 ;; Auto vars:     Size  Location     Type
  8252 ;;  SetDCPWM1       2    4[COMRAM] struct PWMDC
  8253 ;; Return value:  Size  Location     Type
  8254 ;;		None               void
  8255 ;; Registers used:
  8256 ;;		wreg, status,2, status,0
  8257 ;; Tracked objects:
  8258 ;;		On entry : 0/0
  8259 ;;		On exit  : 0/0
  8260 ;;		Unchanged: 0/0
  8261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8262 ;;      Params:         2       0       0       0       0       0       0       0       0
  8263 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8264 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8265 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8266 ;;Total ram usage:        6 bytes
  8267 ;; Hardware stack levels used:    1
  8268 ;; This function calls:
  8269 ;;		Nothing
  8270 ;; This function is called by:
  8271 ;;		i2_PWM_DutyCycle1
  8272 ;; This function uses a non-reentrant model
  8273 ;;
  8274                           
  8275                           	psect	text57
  8276  001C4E                     __ptext57:
  8277                           	opt stack 0
  8278  001C4E                     i2_SetDCPWM1:
  8279                           	opt stack 21
  8280                           
  8281                           ;incstack = 0
  8282  001C4E  C001  F003         	movff	i2SetDCPWM1@dutycycle,??i2_SetDCPWM1
  8283  001C52  C002  F004         	movff	i2SetDCPWM1@dutycycle+1,??i2_SetDCPWM1+1
  8284  001C56  0E06               	movlw	6
  8285  001C58                     i2u232_45:
  8286  001C58  90D8               	bcf	status,0,c
  8287  001C5A  3603               	rlcf	??i2_SetDCPWM1,f,c
  8288  001C5C  3604               	rlcf	??i2_SetDCPWM1+1,f,c
  8289  001C5E  2EE8               	decfsz	wreg,f,c
  8290  001C60  D7FB               	goto	i2u232_45
  8291  001C62  C003  F005         	movff	??i2_SetDCPWM1,i2SetDCPWM1@DCycle
  8292  001C66  C004  F006         	movff	??i2_SetDCPWM1+1,i2SetDCPWM1@DCycle+1
  8293  001C6A  C006  FFBE         	movff	i2SetDCPWM1@DCycle+1,4030	;volatile
  8294  001C6E  C005  F003         	movff	i2SetDCPWM1@DCycle,??i2_SetDCPWM1
  8295  001C72  90D8               	bcf	status,0,c
  8296  001C74  3203               	rrcf	??i2_SetDCPWM1,f,c
  8297  001C76  90D8               	bcf	status,0,c
  8298  001C78  3203               	rrcf	??i2_SetDCPWM1,f,c
  8299  001C7A  0E30               	movlw	48
  8300  001C7C  1603               	andwf	??i2_SetDCPWM1,f,c
  8301  001C7E  50BD               	movf	4029,w,c	;volatile
  8302  001C80  0BCF               	andlw	207
  8303  001C82  1003               	iorwf	??i2_SetDCPWM1,w,c
  8304  001C84  6EBD               	movwf	4029,c	;volatile
  8305  001C86  0012               	return	
  8306  001C88                     __end_ofi2_SetDCPWM1:
  8307                           	opt stack 0
  8308                           pclatu	equ	0xFFB
  8309                           pclath	equ	0xFFA
  8310                           tblptru	equ	0xFF8
  8311                           tblptrh	equ	0xFF7
  8312                           tblptrl	equ	0xFF6
  8313                           tablat	equ	0xFF5
  8314                           prodh	equ	0xFF4
  8315                           prodl	equ	0xFF3
  8316                           intcon	equ	0xFF2
  8317                           intcon3	equ	0xFF0
  8318                           indf0	equ	0xFEF
  8319                           postinc0	equ	0xFEE
  8320                           fsr0h	equ	0xFEA
  8321                           fsr0l	equ	0xFE9
  8322                           wreg	equ	0xFE8
  8323                           postinc1	equ	0xFE6
  8324                           postdec1	equ	0xFE5
  8325                           fsr1h	equ	0xFE2
  8326                           fsr1l	equ	0xFE1
  8327                           indf2	equ	0xFDF
  8328                           postinc2	equ	0xFDE
  8329                           postdec2	equ	0xFDD
  8330                           fsr2h	equ	0xFDA
  8331                           fsr2l	equ	0xFD9
  8332                           status	equ	0xFD8
  8333                           
  8334 ;; *************** function _ReadUSART *****************
  8335 ;; Defined at:
  8336 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uread.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;		None
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;  data            1    0[COMRAM] unsigned char 
  8341 ;; Return value:  Size  Location     Type
  8342 ;;                  1    wreg      unsigned char 
  8343 ;; Registers used:
  8344 ;;		wreg, status,2, status,0
  8345 ;; Tracked objects:
  8346 ;;		On entry : 0/0
  8347 ;;		On exit  : 0/0
  8348 ;;		Unchanged: 0/0
  8349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8350 ;;      Params:         0       0       0       0       0       0       0       0       0
  8351 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8352 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8353 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8354 ;;Total ram usage:        1 bytes
  8355 ;; Hardware stack levels used:    1
  8356 ;; This function calls:
  8357 ;;		Nothing
  8358 ;; This function is called by:
  8359 ;;		_TMRO_USART
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363                           	psect	text58
  8364  001D2A                     __ptext58:
  8365                           	opt stack 0
  8366  001D2A                     _ReadUSART:
  8367                           	opt stack 23
  8368                           
  8369                           ;incstack = 0
  8370  001D2A  0EF2               	movlw	242
  8371  001D2C  1654               	andwf	_USART_Status,f,c
  8372  001D2E  ACAB               	btfss	4011,6,c	;volatile
  8373  001D30  D003               	goto	i2l571
  8374  001D32  9054               	bcf	_USART_Status,0,c
  8375  001D34  B0AB               	btfsc	4011,0,c	;volatile
  8376  001D36  8054               	bsf	_USART_Status,0,c
  8377  001D38                     i2l571:
  8378  001D38  B4AB               	btfsc	4011,2,c	;volatile
  8379  001D3A  8454               	bsf	_USART_Status,2,c
  8380  001D3C  B2AB               	btfsc	4011,1,c	;volatile
  8381  001D3E  8654               	bsf	_USART_Status,3,c
  8382  001D40  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  8383  001D44  5001               	movf	ReadUSART@data,w,c
  8384  001D46  0012               	return	
  8385  001D48                     __end_of_ReadUSART:
  8386                           	opt stack 0
  8387                           pclatu	equ	0xFFB
  8388                           pclath	equ	0xFFA
  8389                           tblptru	equ	0xFF8
  8390                           tblptrh	equ	0xFF7
  8391                           tblptrl	equ	0xFF6
  8392                           tablat	equ	0xFF5
  8393                           prodh	equ	0xFF4
  8394                           prodl	equ	0xFF3
  8395                           intcon	equ	0xFF2
  8396                           intcon3	equ	0xFF0
  8397                           indf0	equ	0xFEF
  8398                           postinc0	equ	0xFEE
  8399                           fsr0h	equ	0xFEA
  8400                           fsr0l	equ	0xFE9
  8401                           wreg	equ	0xFE8
  8402                           postinc1	equ	0xFE6
  8403                           postdec1	equ	0xFE5
  8404                           fsr1h	equ	0xFE2
  8405                           fsr1l	equ	0xFE1
  8406                           indf2	equ	0xFDF
  8407                           postinc2	equ	0xFDE
  8408                           postdec2	equ	0xFDD
  8409                           fsr2h	equ	0xFDA
  8410                           fsr2l	equ	0xFD9
  8411                           status	equ	0xFD8
  8412                           pclatu	equ	0xFFB
  8413                           pclath	equ	0xFFA
  8414                           tblptru	equ	0xFF8
  8415                           tblptrh	equ	0xFF7
  8416                           tblptrl	equ	0xFF6
  8417                           tablat	equ	0xFF5
  8418                           prodh	equ	0xFF4
  8419                           prodl	equ	0xFF3
  8420                           intcon	equ	0xFF2
  8421                           intcon3	equ	0xFF0
  8422                           indf0	equ	0xFEF
  8423                           postinc0	equ	0xFEE
  8424                           fsr0h	equ	0xFEA
  8425                           fsr0l	equ	0xFE9
  8426                           wreg	equ	0xFE8
  8427                           postinc1	equ	0xFE6
  8428                           postdec1	equ	0xFE5
  8429                           fsr1h	equ	0xFE2
  8430                           fsr1l	equ	0xFE1
  8431                           indf2	equ	0xFDF
  8432                           postinc2	equ	0xFDE
  8433                           postdec2	equ	0xFDD
  8434                           fsr2h	equ	0xFDA
  8435                           fsr2l	equ	0xFD9
  8436                           status	equ	0xFD8
  8437                           
  8438                           	psect	rparam
  8439  0000                     pclatu	equ	0xFFB
  8440                           pclath	equ	0xFFA
  8441                           tblptru	equ	0xFF8
  8442                           tblptrh	equ	0xFF7
  8443                           tblptrl	equ	0xFF6
  8444                           tablat	equ	0xFF5
  8445                           prodh	equ	0xFF4
  8446                           prodl	equ	0xFF3
  8447                           intcon	equ	0xFF2
  8448                           intcon3	equ	0xFF0
  8449                           indf0	equ	0xFEF
  8450                           postinc0	equ	0xFEE
  8451                           fsr0h	equ	0xFEA
  8452                           fsr0l	equ	0xFE9
  8453                           wreg	equ	0xFE8
  8454                           postinc1	equ	0xFE6
  8455                           postdec1	equ	0xFE5
  8456                           fsr1h	equ	0xFE2
  8457                           fsr1l	equ	0xFE1
  8458                           indf2	equ	0xFDF
  8459                           postinc2	equ	0xFDE
  8460                           postdec2	equ	0xFDD
  8461                           fsr2h	equ	0xFDA
  8462                           fsr2l	equ	0xFD9
  8463                           status	equ	0xFD8


Data Sizes:
    Strings     95
    Constant    10
    Data        20
    BSS         144
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     65      95
    BANK0           160     56     150
    BANK1           256      0      40
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> putcBluetoothInt@s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1392$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    putSTRINGU1@dato	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[15]), STR_1(CODE[12]), 
		 -> BT_Init@nameBT(BANK0[18]), 

    putcBluetoothString@a	PTR unsigned char  size(2) Largest target is 2
		 -> STR_10(CODE[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> comando(BANK0[20]), 

    SendBlueToothCommand@command	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[15]), STR_1(CODE[12]), 
		 -> BT_Init@nameBT(BANK0[18]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMRO_USART in COMRAM

    i2_right->i2_PWM_DutyCycle1
    i2_right->i2_PWM_DutyCycle2
    i2_left->i2_PWM_DutyCycle1
    i2_left->i2_PWM_DutyCycle2
    i2_go_straight->i2_PWM_DutyCycle1
    i2_go_straight->i2_PWM_DutyCycle2
    i2_PWM_DutyCycle2->i2___fttol
    i2_PWM_DutyCycle1->i2___fttol
    i2___lbtoft->i2___ftpack
    i2___fttol->i2___ftmul
    i2___ftmul->i2___lbtoft

Critical Paths under _main in BANK0

    _main->_Comando_Tablet
    _Inicializa_Driveby->_PWM_DutyCycle1
    _Inicializa_Driveby->_PWM_DutyCycle2
    _PWM_init2->_OpenPWM2
    _PWM_init1->_OpenPWM1
    _BT_Init->_SendBlueToothCommand
    _SendBlueToothCommand->_putSTRINGU1
    _putSTRINGU1->_putcTxU1
    _putcTxU1->_WriteUSART
    _Pause_seg->_Pause_ms
    _Comando_Tablet->_putcBluetoothInt
    _putcBluetoothString->_UART1_Init
    _putcBluetoothInt->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART1_Init->_OpenUSART
    _right->_PWM_DutyCycle1
    _right->_PWM_DutyCycle2
    _left->_PWM_DutyCycle1
    _left->_PWM_DutyCycle2
    _go_straight->_PWM_DutyCycle1
    _go_straight->_PWM_DutyCycle2
    _go_back->_PWM_DutyCycle1
    _go_back->_PWM_DutyCycle2
    _PWM_DutyCycle2->___fttol
    _PWM_DutyCycle1->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lbtoft

Critical Paths under _TMRO_USART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMRO_USART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMRO_USART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMRO_USART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMRO_USART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMRO_USART in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMRO_USART in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMRO_USART in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  109083
                     _Comando_Tablet
                 _Inicializa_Driveby
                         _UART1_Init
                     _clrBufferUSART
                      _getCNY70Value
 ---------------------------------------------------------------------------------
 (1) _Inicializa_Driveby                                   3     3      0   12709
                                             51 BANK0      3     3      0
                            _BT_Init
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                          _PWM_init1
                          _PWM_init2
                          _Pause_seg
                     _clrBufferUSART
 ---------------------------------------------------------------------------------
 (2) _PWM_init2                                            1     1      0      68
                                              3 BANK0      1     1      0
                           _OpenPWM2
 ---------------------------------------------------------------------------------
 (3) _OpenPWM2                                             4     4      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _PWM_init1                                            1     1      0      44
                                              1 BANK0      1     1      0
                           _OpenPWM1
 ---------------------------------------------------------------------------------
 (3) _OpenPWM1                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BT_Init                                             18    18      0    1720
                                             14 BANK0     18    18      0
                          _Pause_seg
               _SendBlueToothCommand
                         _UART1_Init
 ---------------------------------------------------------------------------------
 (3) _SendBlueToothCommand                                 4     0      4    1039
                                             10 BANK0      4     0      4
                        _putSTRINGU1
 ---------------------------------------------------------------------------------
 (4) _putSTRINGU1                                          8     4      4     355
                                              2 BANK0      8     4      4
                           _putcTxU1
 ---------------------------------------------------------------------------------
 (5) _putcTxU1                                             1     1      0      44
                                              1 BANK0      1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _Pause_seg                                            2     2      0     350
                                              5 BANK0      2     2      0
                           _Pause_ms
 ---------------------------------------------------------------------------------
 (3) _Pause_ms                                             5     3      2     303
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _Comando_Tablet                                       2     2      0   54352
                                             54 BANK0      2     2      0
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                     _clrBufferUSART
                      _getCNY70Value
                   _putcBluetoothInt
                _putcBluetoothString
 ---------------------------------------------------------------------------------
 (2) _putcBluetoothString                                  6     4      2     482
                                              7 BANK0      6     4      2
                         _UART1_Init
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _putcBluetoothInt                                    24    22      2    1718
                                             30 BANK0     24    22      2
                         _UART1_Init
                         _WriteUSART
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    12      6    1182
                                             12 BANK0     18    12      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _WriteUSART                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           1     1      0     306
                                              6 BANK0      1     1      0
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     284
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _getCNY70Value                                        2     0      2   41648
                                             51 BANK0      2     0      2
                            _go_back
                        _go_straight
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (2) _right                                                0     0      0   10412
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                 _motor_Backforward1
                     _motor_forward1
 ---------------------------------------------------------------------------------
 (3) _motor_forward1                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _motor_Backforward1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _left                                                 0     0      0   10412
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                 _motor_Backforward2
                     _motor_forward2
 ---------------------------------------------------------------------------------
 (3) _motor_forward2                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _motor_Backforward2                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_straight                                          0     0      0   10412
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                      _motor_forward
 ---------------------------------------------------------------------------------
 (3) _motor_forward                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_back                                              0     0      0   10412
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                  _motor_Backforward
 ---------------------------------------------------------------------------------
 (3) _motor_Backforward                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM_DutyCycle2                                       9     9      0    5206
                                             42 BANK0      9     9      0
                          _SetDCPWM2
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (4) _SetDCPWM2                                            6     4      2     133
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _PWM_DutyCycle1                                       9     9      0    5206
                                             42 BANK0      9     9      0
                          _SetDCPWM1
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (4) ___lbtoft                                             4     1      3    1992
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     380
                                             27 BANK0     15    11      4
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    2654
                                             12 BANK0     15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1970
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _SetDCPWM1                                            6     4      2     133
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _clrBufferUSART                                       2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _TMRO_USART                                          14    14      0    9779
                                             51 COMRAM    14    14      0
                          _ReadUSART
                      i2_go_straight
                             i2_left
                            i2_right
 ---------------------------------------------------------------------------------
 (8) i2_right                                              0     0      0    3252
                   i2_PWM_DutyCycle1
                   i2_PWM_DutyCycle2
               i2_motor_Backforward1
                   i2_motor_forward1
 ---------------------------------------------------------------------------------
 (9) i2_motor_forward1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2_motor_Backforward1                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_left                                               0     0      0    3252
                   i2_PWM_DutyCycle1
                   i2_PWM_DutyCycle2
               i2_motor_Backforward2
                   i2_motor_forward2
 ---------------------------------------------------------------------------------
 (9) i2_motor_forward2                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2_motor_Backforward2                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_go_straight                                        0     0      0    3252
                   i2_PWM_DutyCycle1
                   i2_PWM_DutyCycle2
                    i2_motor_forward
 ---------------------------------------------------------------------------------
 (9) i2_motor_forward                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2_PWM_DutyCycle2                                     9     9      0    1626
                                             42 COMRAM     9     9      0
                        i2_SetDCPWM2
                          i2___ftmul
                          i2___fttol
                         i2___lbtoft
 ---------------------------------------------------------------------------------
 (10) i2_SetDCPWM2                                         6     4      2      93
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (9) i2_PWM_DutyCycle1                                     9     9      0    1626
                                             42 COMRAM     9     9      0
                        i2_SetDCPWM1
                          i2___ftmul
                          i2___fttol
                         i2___lbtoft
 ---------------------------------------------------------------------------------
 (10) i2___lbtoft                                          4     1      3     387
                                              8 COMRAM     4     1      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (10) i2___fttol                                          15    11      4     304
                                             27 COMRAM    15    11      4
                          i2___ftmul (ARG)
                         i2___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftmul                                          15     9      6     795
                                             12 COMRAM    15     9      6
                         i2___ftpack
                         i2___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___ftpack                                          8     3      5     365
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (10) i2_SetDCPWM1                                         6     4      2      93
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comando_Tablet
     _PWM_DutyCycle1
       _SetDCPWM1
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_DutyCycle2
       _SetDCPWM2
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _clrBufferUSART
     _getCNY70Value
       _go_back
         _PWM_DutyCycle1
           _SetDCPWM1
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _PWM_DutyCycle2
           _SetDCPWM2
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _motor_Backforward
       _go_straight
         _PWM_DutyCycle1
           _SetDCPWM1
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _PWM_DutyCycle2
           _SetDCPWM2
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _motor_forward
       _left
         _PWM_DutyCycle1
           _SetDCPWM1
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _PWM_DutyCycle2
           _SetDCPWM2
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _motor_Backforward2
         _motor_forward2
       _right
         _PWM_DutyCycle1
           _SetDCPWM1
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _PWM_DutyCycle2
           _SetDCPWM2
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _motor_Backforward1
         _motor_forward1
     _putcBluetoothInt
       _UART1_Init
         _OpenUSART
       _WriteUSART
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _putcBluetoothString
       _UART1_Init
         _OpenUSART
       _WriteUSART
   _Inicializa_Driveby
     _BT_Init
       _Pause_seg
         _Pause_ms
       _SendBlueToothCommand
         _putSTRINGU1
           _putcTxU1
             _WriteUSART
       _UART1_Init
         _OpenUSART
     _PWM_DutyCycle1
       _SetDCPWM1
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_DutyCycle2
       _SetDCPWM2
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_init1
       _OpenPWM1
     _PWM_init2
       _OpenPWM2
     _Pause_seg
       _Pause_ms
     _clrBufferUSART
   _UART1_Init
     _OpenUSART
   _clrBufferUSART
   _getCNY70Value
     _go_back
       _PWM_DutyCycle1
         _SetDCPWM1
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _PWM_DutyCycle2
         _SetDCPWM2
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _motor_Backforward
     _go_straight
       _PWM_DutyCycle1
         _SetDCPWM1
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _PWM_DutyCycle2
         _SetDCPWM2
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _motor_forward
     _left
       _PWM_DutyCycle1
         _SetDCPWM1
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _PWM_DutyCycle2
         _SetDCPWM2
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _motor_Backforward2
       _motor_forward2
     _right
       _PWM_DutyCycle1
         _SetDCPWM1
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _PWM_DutyCycle2
         _SetDCPWM2
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _motor_Backforward1
       _motor_forward1

 _TMRO_USART (ROOT)
   _ReadUSART
   i2_go_straight
     i2_PWM_DutyCycle1
       i2_SetDCPWM1
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
     i2_PWM_DutyCycle2
       i2_SetDCPWM2
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
     i2_motor_forward
   i2_left
     i2_PWM_DutyCycle1
       i2_SetDCPWM1
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
     i2_PWM_DutyCycle2
       i2_SetDCPWM2
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
     i2_motor_Backforward2
     i2_motor_forward2
   i2_right
     i2_PWM_DutyCycle1
       i2_SetDCPWM1
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
     i2_PWM_DutyCycle2
       i2_SetDCPWM2
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
     i2_motor_Backforward1
     i2_motor_forward1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      28       7       15.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      96       5       93.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     41      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11D      20        0.0%
DATA                 0      0     11D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Oct 11 12:16:45 2017

               ??_motor_forward 00AC                               _i 0048                               _j 0058  
              ??_motor_forward1 00AC                ??_motor_forward2 00AC         __size_of_PWM_DutyCycle1 007C  
       __size_of_PWM_DutyCycle2 007C                              l54 1C12                              l59 158A  
                            l68 1626                   _InicioComando 0050                     __CFG_BORV$3 000000  
                    i2___ftpack 1416                      i2___lbtoft 1D06                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                           l202 1B76                             l223 1E16                             l411 0D4A  
                           l404 0D00                             l421 0DD0                             l413 0D60  
                           l405 0DFA                             l415 0D7E                             l407 0D16  
                           l520 1BC4                             l417 0D94                             l409 0D34  
                           l521 1BC6                             l419 0DB2                             l519 1BB8  
                           l560 16AC                             l553 1682                             l562 16D4  
                           l557 169C                             l558 169E                             l559 16AA  
                           l895 0F04                             l979 0B9E                             l999 0CE8  
                  __CFG_CPB$OFF 000000                             _PR2 000FCB                    __CFG_CPD$OFF 000000  
                  __CFG_BOR$OFF 000000                             _cad 0055                             prod 000FF3  
                           wreg 000FE8                    __CFG_LVP$OFF 000000                    __CFG_WDT$OFF 000000  
                          l1101 183C                            l1111 1AAC                            l2310 0E8E  
                          l2302 0E28                            l2312 0EBA                            l2304 0E3C  
                          l2314 0ECE                            l2306 0E68                            l2410 0C56  
                          l3114 0DEE                            l2324 0EF8                            l2420 0C94  
                          l3220 1882                            l2318 0EDE                            l2350 0A9E  
                          l2422 0CAC                            l2414 0C72                            l3214 1854  
                          l2344 0A64                            l2424 0CB2                            l3224 1894  
                          l3226 18B6                            l2364 0AEC                            l2428 0CD8  
                          l2292 1DF2                            l2620 19E6                            l2444 13B0  
                          l2374 0B36                            l2550 17FE                            l2454 1408  
                          l2438 1366                            l3182 1178                            l3350 14D6  
                          l2368 0B0A                            l2392 0BC8                            l2640 08D6  
                          l2616 19A2                            l2448 13D6                            l2298 0E14  
                          l2378 0B54                            l2546 17EC                            l2570 1A7A  
                          l2650 091E                            l2634 089E                            l2474 1B60  
                          l3370 150C                            l2548 17F8                            l2628 087E  
                          l3380 1524                            l3356 14E8                            l2558 182E  
                          l2574 1A9E                            l2566 1A68                            l2670 098C  
                          l2726 1BB2                            l2496 1684                            l2488 1672  
                          l2568 1A74                            l2672 0992                            l2664 096C  
                          l2680 0A0C                            l2912 1630                            l2682 0A2E  
                          l2908 160C                            l2678 0A00                            l2890 155C  
                          l2894 1594                            STR_1 0852                            STR_2 080B  
                          STR_3 085E                            STR_4 085E                            STR_5 0867  
                          STR_6 081A                            STR_7 0828                            STR_8 0844  
                          STR_9 0836                i2_PWM_DutyCycle1 1926                i2_PWM_DutyCycle2 18BC  
               __end_of_BT_Init 1358                            u1801 0A7C                            u1810 0A8A  
                          u3315 152C                            u3325 1536                            u3317 152E  
                          u3335 1540                            u3327 1538                            _PIE1 000F9D  
                          u1920 13A4                            u1841 0BB8                            u2481 12A0  
                          u3337 1542                            u3347 1106                            u1860 0BF4  
                          u1765 1B0C                            u1781 0A54                            u3357 1166  
                          u1950 13FA                            u1775 1AC4                            u3367 1B68  
                          u1927 139A                            u1865 0BEA                            u1890 0C7A  
                          u1957 13F0                            _TMR2 000FCC                    ?_go_straight 0001  
                          _main 14BE                            _left 1D8E                    ___ftpack@arg 00AC  
                  ___ftpack@exp 00AF                            fsr0h 000FEA                            fsr1h 000FE2  
                          indf0 000FEF                            fsr0l 000FE9                            fsr2h 000FDA  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          pclat 000FFA                            prodh 000FF4                            prodl 000FF3  
                          start 0018                   __CFG_IESO$OFF 000000                      _FinComandB 0062  
                    _FinComandT 0063                 __end_ofi2_right 1DBA                    i2___lbtoft@c 000C  
                 __CFG_MCLRE$ON 000000                    ___ftmul@cntr 00C5                    i2___ftmul@f1 000D  
                  i2___ftmul@f2 0010                    ___ftmul@sign 00C6                    i2___fttol@f1 001C  
                   ?_UART1_Init 0001                    ___fttol@exp1 00D5                    ___fttol@lval 00D1  
                    _ComanBFlag 004B         __size_of_clrBufferUSART 0044                   __CFG_PLLDIV$1 000000  
                    _ComanTFlag 004C                  __CFG_CCP2MX$ON 000000          ??i2_motor_Backforward1 0001  
        ??i2_motor_Backforward2 0001                           ?_main 0001                           ?_left 0001  
                         STR_10 0818                 __end_of___ftmul 0BA0                 __end_of___fttol 0CEA  
                         _T2CON 000FCA                     _RXComandoTB 0051                  __CFG_DEBUG$OFF 000000  
               __end_of___lwdiv 1846                 __end_of___lwmod 1AB6                           i2l324 0FB2  
                         i2l325 0FB6                           i2l571 1D38                           i2l895 14BC  
                         i2l979 10DC                           i2l999 1288                           _RCREG 000FAE  
                         _RCSTA 000FAB                           _SPBRG 000FAF                           _PORTA 000F80  
                         _PORTB 000F81                           _PORTC 000F82                           _PORTD 000F83  
                         _PORTE 000F84                   __CFG_USBDIV$2 000000                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96                           _TXREG 000FAD                           _TXSTA 000FAC  
                 __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000         PWM_DutyCycle1@DutyCycle 00DA                   __CFG_WRT3$OFF 000000  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
                __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000                 __end_of_go_back 1E40  
                 __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000  
                __CFG_EBTRB$OFF 000000                 __end_of_dpowers 080B                           _array 0114  
                         _right 1D78                   ___ftpack@sign 00B0                           tablat 000FF5  
       PWM_DutyCycle2@DutyCycle 00DA                           status 000FD8                 __end_of_sprintf 0A3C  
                __CFG_ICPRT$OFF 000000                      Pause_seg@i 00B2                      Pause_seg@x 00B1  
            __size_ofi2___ftmul 00E4              __size_ofi2___fttol 00D4                     ?_TMRO_USART 0001  
                WriteUSART@data 00AC              __size_of_PWM_init1 0026              __size_of_PWM_init2 0026  
               __initialization 19F4                    __end_of_main 1548                    __end_of_left 1DA4  
                 i2___ftmul@exp 0016     __size_of_Inicializa_Driveby 00D8                     ?i2___ftpack 0001  
                   ?i2___lbtoft 0009               ?_putcBluetoothInt 00CA                __end_of_OpenPWM1 1DE4  
              __end_of_OpenPWM2 1BD0                          ??_main 00E4                          ??_left 00DF  
                 ___fttol@sign1 00D0                __end_of_Pause_ms 1B8C                   __activetblptr 000003  
            ??_putcBluetoothInt 00CC              i2PWM_DutyCycle1@DC 0032              i2PWM_DutyCycle2@DC 0032  
                     ??_BT_Init 00BA                          _CCPR1L 000FBE                          _CCPR2L 000FBB  
                        ?_right 0001                 putSTRINGU1@dato 00AE                 putSTRINGU1@cont 00B5  
              __end_of___ftpack 0F06                __end_of___lbtoft 1CBA                 putSTRINGU1@last 00B4  
               clrBufferUSART@i 00AC             __size_of_UART1_Init 0016                          i2l3322 0F80  
                        i2l3330 0F9C                          i2l3326 0F96                          i2l2800 11D0  
                        i2l2590 145C                          i2l2582 1426                          i2l2830 125E  
                        i2l2822 123A                          i2l2752 1014                          i2l2832 1262  
                        i2l2594 1472                          i2l2586 1434                          i2l2818 122A  
                        i2l2596 1490                          i2l2588 143E                          i2l2772 106C  
                        i2l2836 1278                          i2l2828 1252                          i2l2598 149A  
                        i2l2782 1094                          i2l2758 103A                          i2l2776 107C  
                        i2l2786 10A4                          u240_41 11C6                          _INTCON 000FF2  
                        u234_41 100A                          u236_41 1024              __size_of_ReadUSART 001E  
          i2SetDCPWM1@dutycycle 0001                       ??i2_right 0034             _putcBluetoothString 1548  
                        _SPBRGH 000FB0              __size_of_SetDCPWM1 0048              __size_of_SetDCPWM2 0048  
                        i2_left 1DBA                  __CFG_XINST$OFF 000000            i2SetDCPWM2@dutycycle 0001  
                        _Timer1 0053      __end_of_motor_Backforward1 1E7C      __end_of_motor_Backforward2 1E88  
            __size_of_OpenUSART 0080   __size_of_SendBlueToothCommand 001A              __size_of_Pause_seg 0064  
                  ?_putSTRINGU1 00AE                  _PWM_DutyCycle1 1752                  _PWM_DutyCycle2 16D6  
                __CFG_STVREN$ON 000000                       ??___ftmul 00BE                       ??___fttol 00CB  
                     ??___lwdiv 00B0                       ??___lwmod 00B7                          _packet 005D  
                        _lenght 0059                          clear_0 19FA                          clear_1 1A06  
                        clear_2 1A12            ?_putcBluetoothString 00B3                       ??_go_back 00DF  
         ___ftmul@f3_as_product 00C2                    __pdataCOMRAM 005E               __end_ofi2___ftmul 10DE  
             __end_ofi2___fttol 128A                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8             __size_of_TMRO_USART 0FF2  
                  ?i2_SetDCPWM1 0001                    ?i2_SetDCPWM2 0001               __end_of_PWM_init1 1D06  
             __end_of_PWM_init2 1CE0                 i2_motor_forward 1E66                __end_of_putcTxU1 1E1C  
                     ??_sprintf 00BE         __size_of_Comando_Tablet 0076               i2SetDCPWM1@DCycle 0005  
             i2SetDCPWM2@DCycle 0005               _motor_Backforward 1E5C                      __accesstop 0060  
       __end_of__initialization 1A50                 __CFG_PBADEN$OFF 000000             __size_ofi2___ftpack 00A8  
           __size_ofi2___lbtoft 0024              ?_motor_Backforward 0001            __size_of_go_straight 0012  
  PWM_DutyCycle2@percentageDuty 00DC                  i2___ftpack@arg 0001                  i2___ftpack@exp 0004  
                    ___lbtoft@c 00B7          __end_of_PWM_DutyCycle1 17CE          __end_of_PWM_DutyCycle2 1752  
                    ___ftmul@f1 00B8                      ___ftmul@f2 00BB                      ___fttol@f1 00C7  
                    _WriteUSART 1DE4                  __pcstackCOMRAM 0001       __size_ofi2_motor_forward1 0006  
     __size_ofi2_motor_forward2 0006             ??_motor_Backforward 00AC                    __pidataBANK0 1DF8  
                _clrBufferUSART 1BD0                  i2___ftmul@cntr 001A                  i2___ftmul@sign 001B  
                 __end_of_right 1D8E        __end_ofi2_PWM_DutyCycle1 1990        __end_ofi2_PWM_DutyCycle2 1926  
         ??_putcBluetoothString 00B5               __end_of_ReadUSART 1D48                  i2___fttol@exp1 002A  
                i2___fttol@lval 0026          __size_ofi2_go_straight 0012               __end_of_SetDCPWM1 1B46  
             __end_of_SetDCPWM2 1AFE                   ReadUSART@data 0001            putcBluetoothString@a 00B3  
          putcBluetoothString@i 00B7               __end_of_OpenUSART 16D6       __end_of_motor_Backforward 1E66  
                 UART1_Init@bdr 00B2               __end_of_Pause_seg 19F4                         ??_right 00DF  
                    __pbssBANK0 0060                      __pbssBANK1 0100                         ?i2_left 0001  
                     ?_OpenPWM1 0001                       ?_OpenPWM2 0001                       ?_Pause_ms 00AC  
        __end_of_clrBufferUSART 1C14                 ?_PWM_DutyCycle1 0001                 ?_PWM_DutyCycle2 0001  
                  ??_UART1_Init 00B2             Inicializa_Driveby@i 00E0          __size_of_getCNY70Value 0112  
                       _CCP1CON 000FBD                         _CCP2CON 000FBA           __end_of_motor_forward 1E5C  
   SendBlueToothCommand@command 00B6                       ?___ftpack 00AC                       ?___lbtoft 00B4  
       __end_ofi2_motor_forward 1E70                putSTRINGU1@total 00B0                         _BT_Init 128A  
                       _SBUSART 0052              __end_of_UART1_Init 1D78                 __CFG_VREGEN$OFF 000000  
                       i2_right 1DA4                   i2_go_straight 1E40                         _Comando 004D  
                       _Med_lsb 0042                         _Med_msb 0044                      ??_OpenPWM1 00AC  
                    ??_OpenPWM2 00AC                      ??_Pause_ms 00AE                 __size_ofi2_left 0016  
                  ??_TMRO_USART 0034                         __Hparam 0000                         __Lparam 0000  
               ?_clrBufferUSART 0001                     ?_WriteUSART 0001                       ?_putcTxU1 0001  
                       ___ftmul 0A3C                         ___fttol 0BA0                         ___lwdiv 17CE  
                       ___lwmod 1A56                    __psmallconst 0800                         __pcinit 19F4  
                  ??i2___ftpack 0006                    ??i2___lbtoft 000C                      ??___ftpack 00B1  
                    ??___lbtoft 00B7            __size_of_putSTRINGU1 00BE                    BT_Init@F5675 00E4  
       i2___ftmul@f3_as_product 0017                         __ramtop 0800                         __ptext0 14BE  
                       __ptext1 10DE                         __ptext2 1CBA                         __ptext3 1B8C  
                       __ptext4 1CE0                         __ptext5 1DD0                         __ptext6 128A  
                       __ptext7 1D48                         __ptext8 1358                         __ptext9 1E0A  
i2PWM_DutyCycle1@percentageDuty 0031                         _go_back 1E2E                         _comando 0097  
                       _countup 005E                         _dpowers 0801   __size_ofi2_motor_Backforward1 0006  
 __size_ofi2_motor_Backforward2 0006                       _T2CONbits 000FCA         __size_of_motor_forward1 0006  
       __size_of_motor_forward2 0006              __end_of_TMRO_USART 0FFA                  _Comando_Tablet 1846  
    __size_of_motor_Backforward 000A                         _sprintf 086C                   _getCNY70Value 0CEA  
                __pintcode_body 0F06            __size_ofi2_SetDCPWM1 003A            __size_ofi2_SetDCPWM2 003A  
          end_of_initialization 1A50                     _TramaTablet 0100       __size_of_putcBluetoothInt 0086  
                ?i2_go_straight 0001                         int_func 0F06              __end_ofi2___ftpack 14BE  
            __end_ofi2___lbtoft 1D2A       i2PWM_DutyCycle1@DutyCycle 002F                i2_motor_forward1 1E88  
              i2_motor_forward2 1E94                       _RCSTAbits 000FAB      __end_of_Inicializa_Driveby 11B6  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                      ??_putcTxU1 00AD  
                    _num_med_hi 005A       i2PWM_DutyCycle2@DutyCycle 002F                       _PORTAbits 000F80  
                     _PORTBbits 000F81                       _PORTDbits 000F83                ?i2_motor_forward 0001  
            _motor_Backforward1 1E76              _motor_Backforward2 1E82          __end_of_Comando_Tablet 18BC  
  __end_of_SendBlueToothCommand 1D62                       _TRISBbits 000F93                       _TRISCbits 000F94  
                ?_getCNY70Value 00DF             __size_of_WriteUSART 0014                       i2___ftmul 0FFA  
           ?_motor_Backforward1 0001             ?_motor_Backforward2 0001                       i2___fttol 11B6  
                     _PWM_init1 1CE0                       _PWM_init2 1CBA                       _TXSTAbits 000FAC  
               i2___ftpack@sign 0005                  __end_ofi2_left 1DD0                     ___ftmul@exp 00C1  
          ??_motor_Backforward1 00AC            ??_motor_Backforward2 00AC               ?i2_PWM_DutyCycle1 0001  
             ?i2_PWM_DutyCycle2 0001                   __pidataCOMRAM 1EA0              ??i2_PWM_DutyCycle1 002B  
            ??i2_PWM_DutyCycle2 002B             start_initialization 19F4                       Pause_ms@i 00AF  
                     Pause_ms@x 00AC                 ?_Comando_Tablet 0001                       _ReadUSART 1D2A  
                     _SetDCPWM1 1AFE                       _SetDCPWM2 1AB6                 SetDCPWM1@DCycle 00B0  
               SetDCPWM2@DCycle 00B0                 i2___fttol@sign1 0025                       _DutyCycle 0060  
               ??i2_go_straight 0034                      ?i2___ftmul 000D                      ?i2___fttol 001C  
                 ??_go_straight 00DF                      ?_PWM_init1 0001                      ?_PWM_init2 0001  
          Comando_Tablet@sensed 00E2                       _OpenUSART 1656                ??_PWM_DutyCycle1 00D6  
              ??_PWM_DutyCycle2 00D6                       _Pause_seg 1990                        ??i2_left 0034  
   __end_of_putcBluetoothString 15D0               __size_of_OpenPWM1 0014               __size_of_OpenPWM2 0044  
             __size_of_Pause_ms 0046                     __pdataBANK0 00E4                __CFG_LPT1OSC$OFF 000000  
                _num_med_medium 005C               __size_of___ftpack 010A               __size_of___lbtoft 0032  
                   __pbssCOMRAM 0042                 ??_getCNY70Value 00E1                      ?_ReadUSART 0001  
                _motor_forward1 1E70                  _motor_forward2 1E7C                        ?_BT_Init 0001  
                 __pcstackBANK0 00AC                      ?_SetDCPWM1 00AC                      ?_SetDCPWM2 00AC  
           __end_of__stringdata 086A                _putcBluetoothInt 15D0                        ?i2_right 0001  
                    ?_OpenUSART 00AC                     sprintf@_val 00C4                     sprintf@flag 00C2  
              ??_clrBufferUSART 00AC                      ?_Pause_seg 0001                     sprintf@prec 00C3  
                     _cleanBfer 0064             __end_of_go_straight 1E2E                ___lwdiv@dividend 00AC  
                  ??_WriteUSART 00AC            _SendBlueToothCommand 1D48                       __pintcode 0008  
                      ?___ftmul 00B8                        ?___fttol 00C7                        ?___lwdiv 00AC  
                      ?___lwmod 00B3               putcTxU1@character 00AD               __size_of_putcTxU1 0012  
                      ?_go_back 0001                       _contador2 0057          __end_of_motor_forward1 1E76  
        __end_of_motor_forward2 1E82                     __smallconst 0800       SendBlueToothCommand@total 00B8  
      __end_ofi2_motor_forward1 1E8E        __end_ofi2_motor_forward2 1E9A                    _TamanhoTrama 0046  
              ___lwdiv@quotient 00B0                        ?_sprintf 00B8                     ??i2___ftmul 0013  
                   ??i2___fttol 0020                  __size_of_right 0016              __end_of_WriteUSART 1DF8  
                   ??_PWM_init1 00AD                     ??_PWM_init2 00AF    PWM_DutyCycle1@percentageDuty 00DC  
        __size_of_motor_forward 000A                   _ComandoTablet 004E    __end_ofi2_motor_Backforward1 1E94  
  __end_ofi2_motor_Backforward2 1EA0                        _PIE1bits 000F9D                        i2u232_45 1C58  
                      i2u233_45 1C1E                        i2u242_40 11EE                        i2u242_45 11E6  
                      i2u323_40 0F9A                        i2u237_40 102C                        i2u245_40 1240  
                      _PIR1bits 000F9E           ?_SendBlueToothCommand 00B6                __CFG_WDTPS$32768 000000  
                 ??_putSTRINGU1 00B2                      _ADCON1bits 000FC1                     __stringdata 080B  
               ?_motor_forward1 0001                 ?_motor_forward2 0001                        _CheckSum 004A  
                   ??_ReadUSART 0001              _Inicializa_Driveby 10DE                   ??i2_SetDCPWM1 0003  
                 ??i2_SetDCPWM2 0003                     ??_SetDCPWM1 00AE                     ??_SetDCPWM2 00AE  
              __size_of_BT_Init 00CE                     _INTCON2bits 000FF1                     _INTCON3bits 000FF0  
                     copy_data0 1A2C                        _EntTrama 004F             ?_Inicializa_Driveby 0001  
                 _BluetoothDato 0065                     _go_straight 1E1C                     ??_OpenUSART 00AE  
            SetDCPWM1@dutycycle 00AC                     ??_Pause_seg 00B1                __size_ofi2_right 0016  
               OpenUSART@config 00B1                    _Timer2Config 00AB                        _OpenPWM1 1DD0  
                      _OpenPWM2 1B8C                        _Pause_ms 1B46                        __Hrparam 0000  
                      __Lrparam 0000              SetDCPWM2@dutycycle 00AC            ??_Inicializa_Driveby 00DF  
              PWM_DutyCycle1@DC 00DD                PWM_DutyCycle2@DC 00DD                __size_of___ftmul 0164  
              __size_of___fttol 014A                __size_of___lwdiv 0078                __size_of___lwmod 0060  
              ??_Comando_Tablet 00E2                   _motor_forward 1E52                        ___ftpack 0DFC  
                      ___lbtoft 1C88                  OpenPWM2@ccp2mx 00AE           __CFG_FOSC$INTOSCIO_EC 000000  
           __end_of_putSTRINGU1 1416                __size_of_go_back 0012                  OpenPWM1@period 00AC  
                OpenPWM2@period 00AD                 ___lwdiv@divisor 00AE                 ___lwdiv@counter 00B2  
                      __ptext10 1990                        __ptext11 1B46                        __ptext20 1656  
                      __ptext12 1846                        __ptext21 0CEA                        __ptext13 1548  
                      __ptext30 1E2E                        __ptext22 1D78                        __ptext14 15D0  
                      __ptext31 1E5C                        __ptext23 1E70                        __ptext15 086C  
                      __ptext40 1BD0                        __ptext32 16D6                        __ptext24 1E76  
                      __ptext16 1A56                        __ptext33 1AB6                        __ptext25 1D8E  
                      __ptext17 17CE                        __ptext50 18BC                        __ptext42 1DA4  
                      __ptext34 1752                        __ptext26 1E7C                        __ptext18 1DE4  
                      __ptext51 1C14                        __ptext43 1E88                        __ptext35 1C88  
                      __ptext27 1E82                        __ptext19 1D62                        __ptext52 1926  
                      __ptext44 1E8E                        __ptext36 0BA0                        __ptext28 1E1C  
                      __ptext53 1D06                        __ptext45 1DBA                        __ptext37 0A3C  
                      __ptext29 1E52                        __ptext54 11B6                        __ptext46 1E94  
                      __ptext38 0DFC                        __ptext55 0FFA                        __ptext47 1E9A  
                      __ptext39 1AFE                        __ptext56 1416                        __ptext48 1E40  
                      __ptext57 1C4E                        __ptext49 1E66                        __ptext58 1D2A  
      __size_ofi2_motor_forward 000A                 PWM_init1@period 00AD                 PWM_init2@period 00AF  
                      _contador 0056       __size_ofi2_PWM_DutyCycle1 006A       __size_ofi2_PWM_DutyCycle2 006A  
              __size_of_sprintf 01D0             __end_ofi2_SetDCPWM1 1C88             __end_ofi2_SetDCPWM2 1C4E  
                 __size_of_main 008A                   __size_of_left 0016          ??_SendBlueToothCommand 00BA  
                      _putcTxU1 1E0A                   BT_Init@nameBT 00BA     __size_of_motor_Backforward1 0006  
   __size_of_motor_Backforward2 0006                  ?_motor_forward 0001        __end_of_putcBluetoothInt 1656  
         __CFG_CPUDIV$OSC1_PLL2 000000            i2_motor_Backforward1 1E8E            i2_motor_Backforward2 1E9A  
                    _INTCONbits 000FF2                  OpenUSART@spbrg 00AC               putcBluetoothInt@a 00CA  
             putcBluetoothInt@i 00E0               putcBluetoothInt@s 00CC                        intlevel2 0000  
                     sprintf@ap 00C0                       sprintf@sp 00B8           __end_ofi2_go_straight 1E52  
              ___lwmod@dividend 00B3                      _OSCCONbits 000FD3                      _UART1_Init 1D62  
                   _putSTRINGU1 1358    __size_of_putcBluetoothString 0088                     _num_med_low 005B  
         ?i2_motor_Backforward1 0001           ?i2_motor_Backforward2 0001                        sprintf@c 00C9  
                      sprintf@f 00BA                 ___lwmod@divisor 00B5  i2PWM_DutyCycle2@percentageDuty 0031  
               ___lwmod@counter 00B7                     i2_SetDCPWM1 1C4E                     i2_SetDCPWM2 1C14  
         __end_of_getCNY70Value 0DFC               ?i2_motor_forward1 0001               ?i2_motor_forward2 0001  
            ??i2_motor_forward1 0001              ??i2_motor_forward2 0001               ??i2_motor_forward 0001  
                  _USART_Status 0054                      _TMRO_USART 0008  
